{"e9f295456aab4f38efb8836ffed3c1bbcffbcf70":{"date":"2016-08-25T19:17:36.000Z","message":"Better GetGroupSize/GetNumGroups implementation in PyOpenCL backend."},"00056d8c0da5e99c1107e0be746a56b73805a1e4":{"date":"2016-12-13T12:56:50.000Z","message":"Fix for empty arrays constructed when internalising reduce streams."},"0017185be3e8fcc65db3856d96e9d8ddb8627502":{"date":"2018-05-13T08:16:13.000Z","message":"futhark-doc: change spec tr background on hover."},"0051a8fe0bc0d8485e63828b673ef4d47f60292c":{"date":"2017-03-19T13:22:59.000Z","message":"Fix race condition in extracted kernels."},"009795e2ccdf19374113efe74586a472cba40581":{"date":"2017-05-31T01:46:56.000Z","message":"enabling scatteromap fusion"},"009c33e5e2e06f23729e9e1e18e83c4963bafbc4":{"date":"2017-09-22T10:02:03.000Z","message":"Remove extra printf argument."},"00b35d48c2415541149cafad8b48323c9ac3b22f":{"date":"2016-09-30T12:55:15.000Z","message":"Should not use Int64 here."},"0114d993d5ae0caf6a6ff949fba456270efecb69":{"date":"2018-03-26T12:36:38.000Z","message":"Always retain original uniqueness information in defunctionaliser."},"011672475343b3de36405caae3c6c0c3198c8887":{"date":"2016-10-26T10:48:47.000Z","message":"Generalise simplification rule to handle || better."},"011a93fafee244206399991b5fc5e89352ee3a33":{"date":"2017-03-23T11:12:36.000Z","message":"Create cheapOp method to match safeOp."},"023ebae39d3d0b554af0f893ec47d4201f311266":{"date":"2016-12-28T21:43:13.000Z","message":"Fix ranges of SplitSpace."},"025e5420f4ce79e1d5df45a8dbb073c6c51f1d91":{"date":"2016-09-12T20:41:44.000Z","message":"Add a bunch of Rosetta Code programs."},"029727f09a7addb1ade45b320f000ed20b24d255":{"date":"2017-05-23T13:32:35.000Z","message":"Quick fix."},"02c69e9d2577434b046dd9b48e72d6e21a4f3575":{"date":"2017-03-16T21:01:41.000Z","message":"Remove recursion from Futhark."},"02e8d8a84c2f499d6f863bcfc2fb2edbf90cde89":{"date":"2017-04-15T09:26:51.000Z","message":"Futhark is no longer fun."},"02ffe59a2edc997375c211a43fba3e1f0d8ea732":{"date":"2017-02-02T14:56:17.000Z","message":"Proper SubExp mapping for kernel hints."},"0396bc2dfdad2a6b83098405c455ad00f6da6221":{"date":"2017-06-13T09:07:49.000Z","message":"Fix #345."},"0397438e8fc6cd2e5549a9d883d1e5a5c11110f7":{"date":"2017-11-06T07:09:13.000Z","message":"Fix haddock syntax error."},"0399ee3df4065f382fa6c2ad9a6e11512e9051ef":{"date":"2016-08-24T21:43:51.000Z","message":"Hack for reading hexadecimal numbers."},"03a0625d8f945c9c275a73d004a406f816b643d9":{"date":"2016-10-12T21:07:43.000Z","message":"Pass scope along in mapOnBody."},"040bac9451bf3418e216dcbe8b278b2152204172":{"date":"2017-05-10T16:25:42.000Z","message":"Add initial allocation hoisting feature to memory block merging."},"040d3217bb778e3bd1dc28439f61404f6e9e88f8":{"date":"2018-04-21T07:18:00.000Z","message":"Fix typo."},"045435df83b2592d1b777517d1ced1f61c20b01d":{"date":"2017-03-21T08:29:08.000Z","message":"Expand memory by group/local-id rather than global id."},"04a23d722b306342447eaf6f388720121773b551":{"date":"2016-09-07T08:02:33.000Z","message":"Vaguely nicer code generation for do-loops."},"050765b5dd597bdb138f0841b031cf40e0e73c89":{"date":"2016-09-01T07:47:10.000Z","message":"More descriptive map kernel names."},"05589a97cdabf1ba26ffc860d10d3933c926ce98":{"date":"2016-08-29T04:20:42.000Z","message":"Fix syntax of this example."},"05824b670eaa08753f3f063e85800c7994d1d99c":{"date":"2017-02-18T21:33:46.000Z","message":"Make variables alias themselves in core language type checker."},"058508b6cddc20d47acadbfa672daa242cb9eb74":{"date":"2016-08-30T13:47:09.000Z","message":"Move around some prettyprinting definitions."},"058745b5d6ccc742a88c4014c1b8e97034555fb2":{"date":"2018-05-03T08:27:03.000Z","message":"Permit binding operators in patterns."},"05996b12191928e50e76eb668876dd08509eed3b":{"date":"2016-11-12T19:34:39.000Z","message":"Remove unnecessary CompileStms ExpCompilerResult."},"05b76c4d6c950506be519b4ab8fa2b3813098808":{"date":"2018-03-28T20:37:46.000Z","message":"Further simplify Python value handling."},"05edf91797415a2f74516d0e964cf0d47613f9df":{"date":"2016-09-05T14:37:21.000Z","message":"Markup fix."},"061b16ded75932f2c0a321c96ab738427e43d14c":{"date":"2016-11-27T15:44:04.000Z","message":"Remove unused variable."},"0635afe324ca22f03b44596c74aac299ba316531":{"date":"2017-12-11T10:44:28.000Z","message":"Refactor double buffering for simplicity."},"0636c8dc067014b802b0bef1af3689128b227464":{"date":"2017-06-15T14:00:49.000Z","message":"Remember to bring constant parameters into scope."},"067bc3be561606d8f59b0f500532d5139b4e8fbb":{"date":"2018-01-05T23:06:27.000Z","message":"Enable a conservative copy-removal simplification rule."},"068bc75f7ff3700bc9813a87bed5ad139402870f":{"date":"2018-04-06T20:27:41.000Z","message":"Significantly simplify internaliser."},"069592d656d5fcd920b3322f7cbf378b6b003eb1":{"date":"2017-07-15T11:40:10.000Z","message":"Quickfix some of the new memory block merging bugs."},"06abc362d0631405ce840e5e1444ef9f9daf777a":{"date":"2016-08-27T09:43:39.000Z","message":"More elegant implementation of type ascription in patterns."},"06c95fbb58f2a794e905c6eff2434b0454ae9502":{"date":"2018-05-13T08:48:58.000Z","message":"Document /futlib/math a little more."},"07567aa4a9f5d3220cac69f5c3aded5c03617e11":{"date":"2017-08-16T15:15:50.000Z","message":"Use SMin instead of branch."},"077e7ddd261535344dc553b3aa0fb7ca67669264":{"date":"2016-08-23T10:00:08.000Z","message":"Support empty(t) notation when reading arrays."},"0782d54158b07f6c1c1bc84b3ba62938d8022f34":{"date":"2017-06-29T16:17:12.000Z","message":"Remove pointless round-trip through SOAC.fromExp."},"080152bf703eb54594f5be8cf4277fa7d88cc2f3":{"date":"2018-04-15T19:23:19.000Z","message":"futhark-benchmarks: bump"},"080cc68818786a3b612d88a77bb81ebe388396e1":{"date":"2017-02-26T18:33:13.000Z","message":"segredomap: all threads in segscan version run Combine and GroupScan"},"0874fdf0e011a2864cd744e6ff72c28d0ae7c561":{"date":"2017-07-11T16:59:17.000Z","message":"Better interpreter error message for iota."},"089b6ccf70a67d1c356dcfbd83d3a6cdd05a6db5":{"date":"2016-08-26T18:54:39.000Z","message":"Lambda parameter type ascriptions are now optional."},"08dbd5bfa3fc6eb7a61de3a560eb89db4bd2387b":{"date":"2017-10-17T13:35:43.000Z","message":"Fully initialise context config in C code generator."},"090511ed06bf6c759eee321730182389ce9afbc3":{"date":"2018-03-03T11:31:32.000Z","message":"Fix Haddock notation."},"0906ae0fd4d15df561d10095372b516bfbf26a94":{"date":"2018-01-30T17:41:26.000Z","message":"Use PyOpenCL's built-in memory pooling."},"097b75c3ce6a33c526e8c8e58e09cda2c47f1ed7":{"date":"2017-04-14T10:20:21.000Z","message":"Use bifunctors for some traversals."},"09ca668ddb4da84bd4bb16fd756552a224fb11ed":{"date":"2018-03-30T07:41:02.000Z","message":"Use np.fromstring instead of np.fromfile."},"09da86ee69c5d9cdabc22a02b7cfe3a123a9767e":{"date":"2016-11-23T09:21:41.000Z","message":"Grammar hack for #255."},"0a18f85637e5f3563df7a72ab2b73c98db70cfa9":{"date":"2017-11-29T19:57:54.000Z","message":"Simplify function table management."},"0a1ccf6e69f91a6fe687baf3e4217fad17a9a06f":{"date":"2016-11-29T16:58:04.000Z","message":"Do some range analysis of kernel bodies too."},"0a1e565383a45b56a0666253bd8fb78d953ae7be":{"date":"2017-06-23T06:53:33.000Z","message":"Avoid creating huge compile-time string literals for OpenCL code."},"0b0314d8c3e049dbe5e499ffce999acfdc558439":{"date":"2017-04-04T20:22:59.000Z","message":"fixing bugs and adding tests"},"0b0d5280b2a0cad85dde0296f86220b00ea4300e":{"date":"2017-09-02T07:20:59.000Z","message":"hlint fixes."},"0ba653bc7d25fdce7a0cf869340e90c629ff2b4e":{"date":"2017-02-20T09:15:00.000Z","message":"Fix result retrieval when compiling to OpenCL."},"0bf0abbc27eed61ab5e122023b734de22247bea2":{"date":"2018-05-25T14:56:45.000Z","message":"Detach Combine size from physical workgroup size."},"0cd1bc1d7c759f748d035b0d5326b1fe4aa30670":{"date":"2018-05-09T08:10:04.000Z","message":"Fix #544."},"0cf07e40b7000ee41543f9e59103fc1e93df6f60":{"date":"2018-01-07T09:14:28.000Z","message":"Remove runBinderEmptyEnv."},"0d463a69ee91d389ac7925f7d419946df558269f":{"date":"2017-05-11T14:05:22.000Z","message":"Extend allocation hoisting to also work on nested bodies."},"0d53912c2885ba954685e4546cfd70496bab42be":{"date":"2017-05-24T13:26:10.000Z","message":"Be more generous about segmented reductions."},"0d5793e7c47a3d89e13e06bfd7d10bfe581461cb":{"date":"2016-12-26T08:53:57.000Z","message":"Remove unused traversals module."},"0d8bc32cd7af88588dae891f35c8b427b8dcbba5":{"date":"2018-01-04T11:03:29.000Z","message":"Simplify interpreters handling of builtin functions."},"0da6b4b42bea8b7cdca7ac1787d37f9a8c876ac0":{"date":"2017-03-28T12:14:29.000Z","message":"Remove unused import."},"0dc21c66624952a390428323e0b604cec345c031":{"date":"2018-01-16T13:43:06.000Z","message":"Type fix in memory expander."},"0df3b491dc1ff32e3cd6627f918f99a602663d87":{"date":"2017-06-20T22:07:37.000Z","message":"Fix bug in rearrange pulling during fusion."},"0e05b7b2b6f45763d6af33e2a23d039529c925b2":{"date":"2017-06-26T14:11:17.000Z","message":"Add WIP memory block register allocation."},"0e271df8011d0e05518f7dd36b4d17a0dcc6ced6":{"date":"2016-08-16T09:25:08.000Z","message":"Disable tiling in branches until we have a compelling example."},"0e34cc2d8ec6366adb42d863f229619afe75c32d":{"date":"2017-03-05T08:47:10.000Z","message":"Fix #10."},"0e5a83b53565dd696c674d18ed7429b53e02f877":{"date":"2016-08-30T12:25:01.000Z","message":"Rename PrimOp to BasicOp."},"0e6e8b2cb9aa27cb613ab121b838a2bcd52cbfa0":{"date":"2017-06-17T07:27:56.000Z","message":"Bring lambda parameters into scope before simplifying."},"0e9cc249a1064aabfcaf6503972b3d8e02a5e64c":{"date":"2017-06-04T14:02:29.000Z","message":"Give futhark-dataset the feature to convert between data formats."},"0eeb306542e41801535a1b37102345b01cf47663":{"date":"2017-09-16T13:05:18.000Z","message":"Fix #399."},"0f99cce1f83109c9a18611f809f8a16f8155d9f8":{"date":"2018-05-28T10:01:06.000Z","message":"futhark-doc: parenthesize properly."},"0f9ed6e30029b7a67ba56a46c813246aec875f6c":{"date":"2018-04-27T09:42:54.000Z","message":"Clean up the Types module for memory block merging."},"0faacb540f76cfe74f109a0d0e6fd1082ef19b26":{"date":"2018-01-15T18:58:45.000Z","message":"Move carries to avoid uniqueness error."},"0fcd1ca361b4adc44de975cd8d0810745be89744":{"date":"2017-05-04T12:16:21.000Z","message":"fixing free scalars translation"},"0fec7792330d8703cbe4d8efcf57ebf550a485cb":{"date":"2017-06-29T14:52:14.000Z","message":"Remove lingering old unused memory after memblock regalloc."},"10319e710ced941025e1abe00350255496cd738b":{"date":"2018-03-31T14:22:40.000Z","message":"Fix issue #512."},"10358b8d774661f64038b8b2b357a321f0feedb6":{"date":"2017-06-27T07:49:00.000Z","message":"Make it possible to disable in-place lowering with a flag."},"1098341545e1979c37ad516b2437676569f72a27":{"date":"2018-03-23T13:57:55.000Z","message":"Fix #506 and #507."},"10d1354e20eb4dc92f38ab939b7192a98b8b51f2":{"date":"2017-10-11T15:16:53.000Z","message":"Revert \"Simplify parameter internalisation.\""},"10e1c2199d84e61f4b89fba5bc798960b448264e":{"date":"2017-05-07T08:26:39.000Z","message":"Fix reading of unsigned numbers by generated Python code."},"112f128e9a15e6230903e9542d2c2ab5bea9ce76":{"date":"2017-09-04T21:31:18.000Z","message":"Comment fix."},"1133e59a0a3f09d0160ca42f689d7af8efa05775":{"date":"2018-05-07T17:16:29.000Z","message":"Simplify map(reshape) into just reshape."},"114366195854ed7f6396da290c8488904d5bc751":{"date":"2016-09-05T14:21:15.000Z","message":"Nicer prefix."},"114c428f81bc94c549a64a89f333c9007e5a86d9":{"date":"2018-01-16T15:50:22.000Z","message":"Do irregular memory expansion by taking the maximum and padding."},"117cb2d85de8300375ab3d4bbdbf9d9de56047de":{"date":"2018-01-11T20:52:57.000Z","message":"Make error reporting more detailed."},"11a935a0917017c7a779376f04df58e44e21553b":{"date":"2016-08-23T10:00:08.000Z","message":"Remove some unused stuff."},"11aedfa18daccf87eda820fafa723abeb9110d2d":{"date":"2018-04-01T19:36:30.000Z","message":"Add --Werror option."},"11e656e1d16c9796b504f248293c8867d2cbe89e":{"date":"2016-08-23T11:28:56.000Z","message":"Merge pull request #227 from HIPERFIT/master-slices"},"120b4824492709380c6e3beae013cddc79b6f8c3":{"date":"2017-09-14T10:34:41.000Z","message":"Recursion will now kind of work, but it is not supported."},"123626c73ceefbf91c44b13ac0f084de05e3751c":{"date":"2017-06-07T13:23:38.000Z","message":"Array literals have no aliases."},"1252a646ebe1399ac3cd7a32ce666cf82e2e25f7":{"date":"2018-03-25T12:12:08.000Z","message":"Avoid shadowing."},"12cd02dbecb418d9207f6f383b6e93f79d360487":{"date":"2017-02-24T21:49:06.000Z","message":"Use module language representation like in the paper."},"12f275034f9f8da83a374e563773576b94c2a319":{"date":"2017-11-24T22:13:33.000Z","message":"Add more copies in memory allocator when index functions are complex."},"12f931b728eadca57ca29270b2a2f4f27c342dfa":{"date":"2017-09-09T12:56:49.000Z","message":"Better memory block merging debugging for safety condition 3."},"13363556fa058359ea188298ca0ccfe63fb7114c":{"date":"2017-07-25T08:17:47.000Z","message":"Improve memory block documentation."},"1346db26febefe08c15da13efbaba7cb65dac1a6":{"date":"2017-08-27T22:18:31.000Z","message":"Also support reusing input memory for nested loops."},"1382bac6b35cdd427edd38dfd06b81cd49981d60":{"date":"2018-01-22T12:30:29.000Z","message":"Add a hack to avoid unnecessary barriers."},"13840a02febf91ec6b975423aa5a5827edddc5cd":{"date":"2018-03-07T14:03:18.000Z","message":"Remove unused token."},"139a1fb655a34979d2002df5f4c296a75027e366":{"date":"2016-10-25T11:54:28.000Z","message":"Range analysis fixes."},"13b025d13c6a456f4835baa96de06062d7c9a2d8":{"date":"2018-05-30T12:43:10.000Z","message":"Better display when running futhark-test."},"13c0e0f95d052b39aa8e0735070864d299855fb6":{"date":"2017-12-16T16:06:53.000Z","message":"Simplify some simplifier types."},"13cc62acc3155202f0c835e70a4b67b6f95afb28":{"date":"2017-12-11T15:20:41.000Z","message":"Finer distinction of nested parallelism."},"13d2a4f368a4bcfbb454193687b2e0ce2f0170e6":{"date":"2017-02-23T10:36:39.000Z","message":"Oops, no need for this."},"14421829b79e4ecefb346cad15cffe1de4d684fb":{"date":"2017-10-27T10:43:23.000Z","message":"Better type error for filter."},"14560358c63b6aef07d5b676abed86699f3f19ea":{"date":"2016-12-09T14:54:57.000Z","message":"Reword SplitArray documentation slightly."},"147d5106a8eb8ca6d46910ecfe151806698f193d":{"date":"2016-10-02T11:06:38.000Z","message":"Handle more complicated nested redomaps and scanomaps."},"14909237b03a6d33341633cad95dcb4a27037495":{"date":"2016-09-20T05:36:37.000Z","message":"More pervasive use of QualName."},"14aaf0c991d038e8c6c9e4dfded83ac8c4a5baf4":{"date":"2018-05-07T17:20:28.000Z","message":"Add flatten/unflatten intrinsics and use them."},"14dccd4e7175813e62385442dfd2c9de0cead5dd":{"date":"2016-09-28T09:41:08.000Z","message":"Remove unused name."},"14f06af8c5ba8d8d23a755b1440f91eea42f5a0b":{"date":"2017-06-28T09:23:59.000Z","message":"Cleanup last use interface."},"151aaef98c3e0ed116c64d86022457d4f3e27329":{"date":"2016-10-14T08:50:18.000Z","message":"Remove unused function."},"1524e4ceaadc0f007984b2871d9c038348f578ae":{"date":"2018-02-21T14:36:13.000Z","message":"Reduce duplication."},"1557aa13a5a581d0d6d02c4c35ae961480041f06":{"date":"2017-09-18T18:40:29.000Z","message":"Do not infer incorrect ranges for in-place updates."},"15bac701f2e2898e4a6327371640e65ade0acd64":{"date":"2017-12-31T08:53:54.000Z","message":"Use type alias."},"15f9a808ca592af311bfd5516484793f82683514":{"date":"2017-02-04T22:16:32.000Z","message":"Fix #294."},"169aa880b08d44719de2d3863f7f5f8b5cabd1ba":{"date":"2018-01-30T11:46:38.000Z","message":"Fix typo."},"16a971da27d2cc9147129b056d65df5c06a84a51":{"date":"2018-03-15T21:51:44.000Z","message":"hlint police."},"16de80178ce80520917bfef8c31ff78787817bd7":{"date":"2018-03-31T20:23:32.000Z","message":"The value of an update may use the source."},"175b659fe82b308cac9de27337bf4c87ce05aa3a":{"date":"2017-12-12T10:18:30.000Z","message":"More meaningful names in generated code."},"1777dc949ae1eaf5cff2d816c2ba4e86b8e81f1f":{"date":"2016-09-20T08:11:17.000Z","message":"No longer require structure names to be capitalised."},"17863c094e81d6f8f8eb543846798b2130118b94":{"date":"2018-03-24T10:08:40.000Z","message":"Turn partition into a function."},"179d4de96afbdbb354a9e4af15a23cb48d2f624d":{"date":"2016-11-28T13:42:31.000Z","message":"Tests for array equality."},"17b4211ca69750a5d26f35162756f6be889347cb":{"date":"2018-02-26T21:57:55.000Z","message":"Be more aggressive about removing copies."},"1846c844caf958a9008b8e47b199b44774e94d3a":{"date":"2017-09-05T15:14:14.000Z","message":"Slightly less conservative index function compatibility check."},"1867fef0b14a9147dc929381c8ec795a08d0437e":{"date":"2017-06-01T16:36:35.000Z","message":"fixing annoying bug in scatter scatter horizontal fusion"},"18a1d0228b28d8abb4c0fcb4af6d9815de19be07":{"date":"2017-10-21T09:46:29.000Z","message":"hlint police."},"190aa46fb2a8b7ec719a213dee709c348b557ccf":{"date":"2018-04-06T09:16:58.000Z","message":"Rename Modules to Defunctorise."},"192d940626a6ca81158e371f3c70fdfa08a07e37":{"date":"2016-09-23T06:59:02.000Z","message":"Fix asin/acos function names in Python backend."},"19361a9cd5727c02ea94ab44cc5602826464833b":{"date":"2018-05-07T20:22:31.000Z","message":"Remove the reshape construct from Futhark."},"1973a64019c6ebf3e15e4dec97e7489817bf006f":{"date":"2017-03-25T11:05:17.000Z","message":"Use 64-bit numbers for memory block sizes."},"19d5b51a219b310590347b2ddc96fe44dd685a0e":{"date":"2017-07-30T14:38:17.000Z","message":"Reuse more memory by taking the maximum of allocation sizes."},"1a1e4d0f118d3a9cdb0b2faf36745c47826ca211":{"date":"2016-08-18T12:18:29.000Z","message":"Test programs for #224."},"1a230868ab07f2a2c0db8525d9f932f301e6b0f4":{"date":"2018-03-28T19:37:25.000Z","message":"Oops, unbreak everything."},"1a61a8cbd5c019a72fdb72b46cdbd1eca8f0019c":{"date":"2016-08-27T08:02:52.000Z","message":"Remove unused function."},"1aa5d659482f14e3d3493248014f6c57618ae19c":{"date":"2018-05-14T21:36:47.000Z","message":"Use local opens here."},"1abfa1c17498c56d602a4d704da4d287659e9a65":{"date":"2018-05-06T22:37:25.000Z","message":"More boring links."},"1ac913f9fc8b09bda14f37d15ddeb7f717fb8538":{"date":"2016-09-07T06:59:19.000Z","message":"A lil more constant folding for PrimExps."},"1b0dbd872e4c61499242cb92e8f7030715ba6463":{"date":"2018-04-03T17:30:33.000Z","message":"Simplify type annotations a bit."},"1b2beeb971e7379683083c1784e088ad05739328":{"date":"2017-03-26T12:08:14.000Z","message":"Switch from 'val' to 'let' for variable declarations (as in OCaml)."},"1b447dbb139a0458393f6d4a28c3c1e4c4b4d6bf":{"date":"2018-01-26T09:37:30.000Z","message":"Stop sequentialising maps that contain unbalanced do-loops."},"1b66a48013e5d21b36178d5afd1a7e5bf28f8d23":{"date":"2017-12-30T11:32:44.000Z","message":"Explicitly cast memory sizes before printing."},"1c291aeb8870bad51932aedab6375accf4c4cca0":{"date":"2018-05-15T09:16:23.000Z","message":"More descriptive names for lifted functions."},"1c2faea560cb970db68a5e4780262abaae0c0560":{"date":"2017-12-27T10:26:28.000Z","message":"Remove more supefluous imports."},"1c37b3f50b7881da86027e62901e77fc6f83aca1":{"date":"2017-12-12T21:31:49.000Z","message":"Add --default-threshold option to generated programs."},"1c5d5adbfc4a76de8cf38c38673c0e4b467eabfd":{"date":"2017-03-26T18:39:25.000Z","message":"Some performance tweaks to simplification and free-names."},"1c8650d39a16ead77df9f5f741d21d148818ed82":{"date":"2018-03-16T22:20:11.000Z","message":"Handle nested maps whose returns are permuted."},"1cc27358c2c8f4e34333b354838aad8161d37139":{"date":"2017-12-15T04:57:27.000Z","message":"Versioned code for outer redomaps."},"1cfbf94a69356daf00590d2e66d308e4bcc49f2c":{"date":"2018-05-29T13:10:58.000Z","message":"Make futhark-bench support multiple entry points."},"1cfefc90dcb9a1a86fba5a90c51a5eb224c99ee8":{"date":"2017-02-18T14:59:07.000Z","message":"Internalise functions monadically."},"1d762582a01c140a2598779a452a865a8808600c":{"date":"2017-08-03T10:48:19.000Z","message":"Support reusing memory blocks inside kernels."},"1d83860519ecf17602a7c4601c3b974b72d503fe":{"date":"2018-05-27T15:28:28.000Z","message":"Implement record projection sections."},"1db0c2841b361fa7262218a237ef0fa453fec7cf":{"date":"2018-01-07T08:59:33.000Z","message":"Simplify nonuniqueParams."},"1dd3c91112638230b786819ca436a0505a129cbf":{"date":"2017-07-23T13:14:07.000Z","message":"Fix style errors."},"1e6519014ce9d59704055354c6192918bab27166":{"date":"2017-12-17T10:43:09.000Z","message":"Remove some weird options from futhark-dataset."},"1e9c68585584b497abcd8d01c3b4c2480b7cc182":{"date":"2017-12-15T04:08:57.000Z","message":"Fixes to data dependency computation."},"1ed41f2371d9d7e32a8ed7419fa99acb268ca4fd":{"date":"2018-03-15T17:03:23.000Z","message":"Add composition operators to language grammar."},"1ee7ad5af9576eea6f43cf25a70a1c64ae27ee90":{"date":"2018-01-19T14:02:07.000Z","message":"Better prettyprinting of branch annotations."},"1f0c573f7b49dc056174e18ce6f7caa59742bcc7":{"date":"2017-07-26T16:44:09.000Z","message":"dirty hack in arraySizeInBytesExp(M); I left the old code commented"},"1f13554190cdb557bb66e213862adb2c2f21fa07":{"date":"2016-11-07T22:58:46.000Z","message":"Add that Combine will store result in local memory"},"1f3463807c5f7a0ac76ff05d78a7a1b298080156":{"date":"2017-03-27T08:40:57.000Z","message":"Add some sanity to futhark-test options."},"1f8092d251420d81919dcd9498bcae23f3ec2686":{"date":"2018-05-15T00:56:09.000Z","message":"removing the concats from linalg so that batch execution does not result in memory problems for gpu. It however requires very silly unsafes that should be easily handled by the compiler"},"1f9f6f29eddf986bb366ff27c5072b4ccf198ba5":{"date":"2018-01-22T19:03:57.000Z","message":"Fix fuseConcatScatter rule."},"1fa58353b541575dd6f18bbb1b9f5020a49264fb":{"date":"2018-03-13T14:10:09.000Z","message":"Revert \"Cease handling type abbreviations in internaliser.\""},"1fc37d388c0a31b9d6fa8c850993943d087098a2":{"date":"2018-01-04T09:07:37.000Z","message":"Remove unnecessary exports."},"1ffcc30694e3fc168eeb08c97ea41632ad5466a8":{"date":"2016-09-02T09:26:18.000Z","message":"PyOpenCL: Pass preprocessor defines as seperate build options."},"203a6eed6a4b7030293e912e9caa62dffff83fd4":{"date":"2018-02-27T16:14:56.000Z","message":"Add transposition kernel optimised for small arrays."},"204570305869e392b5e353a2067b86568a66e60c":{"date":"2018-01-16T22:21:38.000Z","message":"Add simplification rule for removing identity copies."},"209bd841cf245f0af3546430409a8e4d075f5ee9":{"date":"2016-11-28T13:42:20.000Z","message":"Test boolean conversion functions."},"20b3044859b027a0fa6dea53b9ebfefc9fc35443":{"date":"2016-11-22T10:48:45.000Z","message":"It is OK to compare bools for equality."},"2174c570baca6e3e14c8929a1747b75d17a28619":{"date":"2017-02-16T19:12:29.000Z","message":"Kernel babysitting fixes."},"21bba45263d1a99501e0b55129043924a43260a0":{"date":"2017-05-30T21:03:29.000Z","message":"Expand kernel babysitting to also handle nested slices."},"21f5060468ddd5bf56295bb55b0c094c199146f6":{"date":"2017-11-10T17:14:08.000Z","message":"Fix #433."},"229eb2df716f7754c92e8144eeae021591cd1860":{"date":"2017-05-24T14:03:00.000Z","message":"Better error message here."},"22dfe8402bf640dd09b0012fdad087f51b1bcd78":{"date":"2017-02-10T21:15:27.000Z","message":"Handle duplicate functor application correctly."},"22f3359c85eb307e7def09e76056016ccf77fe07":{"date":"2016-10-04T04:57:35.000Z","message":"Correct permutation when parallelising segmented scanomap."},"231187a63ec03f312b6e8521b3aa03ff96e7cab8":{"date":"2017-07-19T12:18:12.000Z","message":"Memory block merging: Fix tests/reuse/loop/copy-from-outside.fut bug."},"2311acb1ad53d905c6d3b3892ede3c997fa1b35b":{"date":"2016-10-18T08:00:03.000Z","message":"Make scans work on Intel GPUs, too."},"232faf3c7446d83e6e7dff919ad1b37c8fbd0486":{"date":"2017-04-26T06:58:27.000Z","message":"Fix to slicing."},"233baf81f52733b6c0901670eea8682dcddbdacd":{"date":"2016-09-12T09:18:38.000Z","message":"Eradicate longname terminology."},"233ee0d7b5f34f08ef2c718398152fb65f97b212":{"date":"2016-10-15T13:01:23.000Z","message":"Generate nicer second-stage scan kernels."},"2388a635002872f63721671c69df53a5f4bf6de5":{"date":"2016-08-28T14:09:31.000Z","message":"Write syntax is not functional."},"238e14d3699904314ae3da7ec354cafb42a931f4":{"date":"2018-05-15T12:17:51.000Z","message":"Simplify `map rotate` and `map concat`."},"23aa35b4fa79e8c961ca4aab1aa2d246ec48ee5a":{"date":"2017-07-05T17:48:44.000Z","message":"Fix #367."},"23df27604d6b720d899977a71cda00b082a18b3b":{"date":"2018-04-06T17:57:37.000Z","message":"Traversals fix."},"2405a8c38cec4e17617cdffb1648c9092eec1456":{"date":"2016-10-29T11:50:40.000Z","message":"Moving the deck chairs."},"24206aec07b681f466547484c1ba7933f90e86b1":{"date":"2017-07-31T12:18:07.000Z","message":"Fix exotic fusion bug."},"2436730443b55071d14926ec0c2f00d88c26e7a3":{"date":"2017-04-20T16:00:34.000Z","message":"Better error message for invalid array values."},"244b888af72b279709da929e86dc2c84d793c5c9":{"date":"2017-03-17T09:48:38.000Z","message":"Escape crazy names in Python."},"248e32835397d057622dbb60d06e3431f73a7fbf":{"date":"2017-07-06T08:19:19.000Z","message":"Fix imports of builtin library."},"24cc61c81b9cac5b8aa92a37c9d5b2d6c60bc147":{"date":"2018-05-13T19:21:55.000Z","message":"futhark-doc: handle cross-file links correctly."},"24ccccac5b38e44ca0319d81567963fba4ed6d50":{"date":"2018-05-12T11:47:54.000Z","message":"Fix #549."},"2519fda88d66e60c26063ad194ac9e9c9d1f61b1":{"date":"2017-06-04T10:50:19.000Z","message":"Fix binary parser in Haskell."},"2534d1e75443726376368550ffa279c50bbdae76":{"date":"2017-06-27T22:20:33.000Z","message":"Make sure to use the memory block from the context when it exists."},"2544a6043031fe47882f21225c26153538a03536":{"date":"2018-04-07T08:29:35.000Z","message":"Make defunctionaliser heuristically inline some lifted functions."},"255ac3c94de819e1dc765bf1b085c186ac8a88b6":{"date":"2018-03-28T19:02:05.000Z","message":"Simplify Python value reader."},"255b865a23df8f135d52e3317fd2b924891b7449":{"date":"2018-04-06T17:57:54.000Z","message":"Cleaner computation of type substitutions in monomorphiser."},"25ab805ef8e3ca36d41d610366a110d37d030964":{"date":"2016-09-16T20:58:58.000Z","message":"Too slow with Python."},"26dfb2ad0a249ed2da357a6d37e308768a4dd39c":{"date":"2017-08-08T17:02:56.000Z","message":"Fix minor coalescing safety condition 5 bug."},"27104dfb58b411066a3f3041ddfbaf2abafe361a":{"date":"2018-05-18T09:56:10.000Z","message":"Revert \"Omit empty closure environments from defunctionalized programs.\""},"272e4c572bbb00e79f8cc8b219b6fe7005019ab3":{"date":"2017-02-20T08:20:07.000Z","message":"ImpCode memory parameters no longer carry their size around."},"273892d4c293507bcdd1a57ad63f66179fc45fbf":{"date":"2017-12-09T21:49:11.000Z","message":"Add -t/--type flag to futhark-dataset."},"273e5f5ce80c5b94a54770fea01f3a77b29c8ddb":{"date":"2018-05-07T20:04:38.000Z","message":"Remove old and broken hack from FFT implementation."},"2748d3cb6ee23ba31cccd947f2ad0b48bb83ef85":{"date":"2017-01-30T13:37:42.000Z","message":"Add support for 'with' type refinement and 'include' in module types."},"2752e5290eddcbc9f43215a994aeec1cd564d69a":{"date":"2016-08-16T08:58:41.000Z","message":"Always enter branches."},"277102850ca9ffe7364229c913f1108b5a986122":{"date":"2016-08-17T19:16:26.000Z","message":"Remove some cruft."},"27a3078a3ec0c6c06607c3146fafc2e3cee86735":{"date":"2017-07-12T14:08:02.000Z","message":"Fix kernel babysitting for large segment reductions."},"27add897942fc2c6ddd92e1c46fba2cdebfb4ddf":{"date":"2017-08-22T10:23:05.000Z","message":"Slightly less conservative interference analysis in kernels."},"27afcbc6bf7cd5196b800bb1def2b8884cdcd7a2":{"date":"2017-12-18T14:41:25.000Z","message":"Put the result of GroupReduce in local memory."},"27bc34752862a9060455642272e1d4e1c9bf5f3b":{"date":"2017-11-06T18:41:26.000Z","message":"Exp should be exp, not log."},"27f0108313df0e0651226cb82430ce6a85b1d20d":{"date":"2016-10-27T09:56:03.000Z","message":"Further simplify generated C code."},"28371627dfb92d31fa4dfb74f9354ac49458be7c":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: fix constant"},"28613950bdbab1f22e2e6d32603939ecbef457af":{"date":"2017-02-02T15:07:57.000Z","message":"some fixes, loop does not work currently, still investigating why"},"286b2b91d0b6b07adfd3a3f8fc888e4667fba7d4":{"date":"2018-01-08T21:50:57.000Z","message":"No need to wrap throwError in fusion."},"288daf2530dec180e3079da1df1a983459473caf":{"date":"2018-03-06T09:39:58.000Z","message":"Fix sign extension for Python."},"289c05e237f5b264722bb68540223a048f37b055":{"date":"2017-04-26T15:06:55.000Z","message":"Remove undesired pragma."},"28ac7dd06c54fe7ef8cb0da9720ed7a6e3749b2d":{"date":"2017-06-05T20:18:48.000Z","message":"More fixes to IO in C backend."},"28b2126f9135f3a76816841842288f6e945d332c":{"date":"2018-05-18T09:59:36.000Z","message":"Tests for `or` and `and`."},"291dafdce87a559eec14a1c8078db31721f2dfd4":{"date":"2017-06-05T17:04:22.000Z","message":"Fixes to debug printing."},"29518286a8670bbe8a81948bfc46e76c7c3b4c18":{"date":"2016-10-19T09:41:24.000Z","message":"No array literals in source language."},"2953714e7e4df1a2639f8aef8748fb2388196523":{"date":"2017-12-26T16:52:54.000Z","message":"Remove superfluous imports."},"2982a0d6b25f1f3927d954b95aa90225b02bb873":{"date":"2017-02-21T08:56:13.000Z","message":"Maintain parentheses in source language AST."},"29913a32b25d49e06de3ce7bb83de179ef3bbefb":{"date":"2017-06-08T09:07:33.000Z","message":"Array literals produce unique arrays now."},"299b2b1072922dc206a1b56449153511806ebf4b":{"date":"2018-03-13T15:36:52.000Z","message":"Remove most pattern ascriptions in monomorphiser."},"29cbe0c697822b1edff21c6de694d000b7eca6bf":{"date":"2017-09-29T13:24:34.000Z","message":"Fix futharki."},"29e26503c13569de25268283dce534f111726643":{"date":"2017-03-13T14:08:22.000Z","message":"Print assertion locations when prettyprinting."},"29f1cf0753ad0f6b628fc969549582093ff45d72":{"date":"2017-12-25T22:48:35.000Z","message":"Restore Python 3 compatibility."},"2a0c8969f4d21853f671b00afde5608e2e20b019":{"date":"2017-08-08T18:05:19.000Z","message":"Memory reuse: Also record last uses occuring in body results."},"2a7d824f7265a35bb928bf4de8e46d02e0a56a12":{"date":"2017-10-04T11:55:32.000Z","message":"Only add [modified] if tracked files have been changed."},"2a99286cac4fffd43b2a4f6e348af8d064f11058":{"date":"2017-06-12T12:48:14.000Z","message":"More conceptual simplification of module interpretation."},"2aa7392df6ce3449dcf3ed8e05cd18140406f480":{"date":"2018-03-03T19:16:22.000Z","message":"Little hack to avoid picking intra-group parallel versions."},"2b3fcd0c6594c0aee4898071425f35ecf574b3fb":{"date":"2017-08-17T09:42:45.000Z","message":"MBM: Nested traversals can result in new information.  Keep that."},"2b8333ea4a1ff1aaf887bcd9e2b8724adaed5cdb":{"date":"2016-09-05T06:13:42.000Z","message":"Remove pointless double-documentation."},"2bd86de2a23cd9331b8c354a6ac68b56b9fe24c0":{"date":"2018-03-11T22:30:33.000Z","message":"Oops; parse structure tests correctly."},"2bda7a9b5fb3bd08566bc7a8b4d2e626a0309fc2":{"date":"2017-05-01T12:50:51.000Z","message":"minor"},"2c03b624f91f7e6474539f532ee8751fe6d95ffe":{"date":"2017-03-03T15:21:43.000Z","message":"Fix #315."},"2c20e67a1a0051eb9fbea420213eaf5d9c530770":{"date":"2016-10-14T08:23:06.000Z","message":"Fix indentation."},"2c3d66418746a637401c701342b12ebe82b24acf":{"date":"2017-03-15T11:23:30.000Z","message":"Fix Python target descriptions."},"2cb73a463be8d60694e5c7e976af49388e52c9dd":{"date":"2016-11-19T14:22:11.000Z","message":"Fix #181."},"2ccd94fc8d309f27bdfed7bc32d5925e796e47ab":{"date":"2016-08-18T13:31:17.000Z","message":"Fix handling of array transforms in fusion."},"2cd28692a2b32f105ccbc299d6042a952c90d922":{"date":"2017-12-12T10:50:47.000Z","message":"More curly braces when printing core IR."},"2d13e9f6ae94f4d71621546ca2b3e4b8e454ffce":{"date":"2018-01-19T11:27:22.000Z","message":"Detect nested parallelism more thoroughly."},"2d786df467b1b863b091de3396fbb89ac4ab4f28":{"date":"2017-04-10T06:13:51.000Z","message":"Match abstract types slightly different."},"2dac22fe93fd4a61bd004563e4d278dd8da5776d":{"date":"2017-06-27T13:19:58.000Z","message":"Try to maintain a little more error information."},"2dc043fa468afe33692af9b6219093c590459a2e":{"date":"2017-04-05T19:06:30.000Z","message":"lala"},"2eb74d9e54a82c0f72c8d854bf0db7082e8fd80b":{"date":"2017-11-02T15:25:12.000Z","message":"Fix #426."},"2ed7f5edecd68221c3a081554de2edf308748586":{"date":"2017-06-05T18:46:05.000Z","message":"Correct printing of parse errors in generated code."},"2f8a8249fc849add80c1af93b82966d3099f1c2f":{"date":"2018-04-11T19:02:10.000Z","message":"Also do dead input elimination for redomap."},"2fa3bd359e3e8adb552a6941c2bc14784f2a06c0":{"date":"2017-02-17T15:51:32.000Z","message":"segredomap: separate manual ispace index calculation to own function"},"2fbb8a91f8056855328a19e8756acb08898fa8eb":{"date":"2018-04-05T05:42:54.000Z","message":"Note rank of original array in Reshape node."},"2fd159696349ff7b74acda1fc91740cd12c6def6":{"date":"2017-09-18T10:58:14.000Z","message":"Quit futharki properly on C-d."},"2fecf366fb00d04b7fba9e73264bb452acfc101a":{"date":"2018-02-27T21:44:14.000Z","message":"Fix to small-arrays transpose kernel."},"2ffac6bb90ae93e6098224c3d245f5a3ac87e0d7":{"date":"2018-05-07T11:58:01.000Z","message":"futhark-benchmarks: bump"},"300705ad67bfecc036d87d38ff9af79221998bcf":{"date":"2018-01-06T20:08:06.000Z","message":"Remove unused function."},"3036528f2ab02f61b737691afbcb8965dbced622":{"date":"2017-03-22T20:57:52.000Z","message":"Add (undocumented!) construct for working around compiler limitations."},"305da0c72ed94c0cdd49ecc0cb3b5622c115ed8c":{"date":"2017-12-28T15:06:33.000Z","message":"Use same group size for all kernels involved in a segmented reduction."},"30cea95fa45db05d51f3e05ace4c2a920960a38a":{"date":"2018-03-09T18:01:54.000Z","message":"Sometimes distribute certain in-place updates."},"30dd2e6365959ac1bd39a8cdc0fb77336f61f9fd":{"date":"2018-05-18T13:40:36.000Z","message":"Fix this test."},"312b87d2d2ec011a82022958b4be406f64ad694d":{"date":"2017-03-13T18:24:32.000Z","message":"CTRL-C is not an internal error that should be reported."},"31355352a55a5b5df01e6406720dfa48d7f1c283":{"date":"2017-09-10T08:07:39.000Z","message":"Sink reshapes through index functions in more cases."},"3174ded6aaee855ffc1202d4bb958f0286061f9f":{"date":"2018-03-31T13:08:35.000Z","message":"Fix lambda prettyprinting."},"320c3a6f08801bdda054a3b40116ed3a2720d2d9":{"date":"2017-05-31T14:30:40.000Z","message":"More careful scope management."},"3217e0b43f5c71a728a6063fcb823a11e79e6763":{"date":"2017-02-28T21:32:52.000Z","message":"Another attempt at fixing includes on Windows."},"3255e1ce435d01a152d83304babfa4ea39cf46b9":{"date":"2017-04-26T14:58:17.000Z","message":"Fix some variable naming inconsistencies."},"3288d746f1d4a1f1dd09ab9ff04f98cd982e8e6c":{"date":"2017-02-19T18:12:39.000Z","message":"Split term and module type checking cleanly in type checker."},"3301f1c7c831f3cab2e786cd10047e5175a978ff":{"date":"2016-08-28T12:55:07.000Z","message":"Change replicate syntax to use juxtaposition."},"330308c0004ce518d2a454ab8512218248fa236b":{"date":"2018-01-28T11:40:01.000Z","message":"Prettify allocator a bit."},"332c87902844e684e66004274599337453fe390e":{"date":"2018-05-03T13:39:20.000Z","message":"Remove obsolete comment."},"335af6a5545728c8bf3544116c10614962cda76f":{"date":"2016-10-26T12:54:21.000Z","message":"Add test for issue #248."},"3384f05599ec6f5a0c0084228c4aa21777961017":{"date":"2016-08-22T13:55:15.000Z","message":"futhark-mode.el: Treat 'entry' the same way as 'fun'."},"33964d12fb3a7aaf58fd03db9bca0821c543766e":{"date":"2016-11-18T23:29:16.000Z","message":"Compile filter as special case of partition."},"33ab0d46f5453e994babf81222a388e9ba6cb462":{"date":"2017-03-26T13:21:33.000Z","message":"Permit top-level function definitions with 'let'."},"33be73a4210aa63994fb18577ca5f8b94fc27823":{"date":"2017-07-30T14:38:17.000Z","message":"Small refactor."},"340a02aef0436a9e6adf3574cdab45907370ee05":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: make branching more like in thesis"},"3427f1f6ad75d826436e261685bf56ce5751e12f":{"date":"2017-05-05T11:42:12.000Z","message":"Use the full scope when cleaning up after memory block merging."},"34696b6a44b210299aed5a18e63ff8bc056c5a2d":{"date":"2016-09-05T14:18:17.000Z","message":"Use /usr/local as default PREFIX."},"34721de6b3788761181a9c4f267f096ebf806abd":{"date":"2017-03-26T10:53:31.000Z","message":"Do not fail when simplifying slicing of iotas with weird types."},"34e6af86f3a73b841246601ce94165e6ab8f0486":{"date":"2018-05-24T20:40:02.000Z","message":"More documentation for functional combinators."},"3509da3811576b0d08970aeb44c8e786d8c48951":{"date":"2016-09-05T09:12:40.000Z","message":"Polish binding in the source language type checker."},"35470f2937921b0abe9ddace1f48dde58181243d":{"date":"2016-09-22T12:47:15.000Z","message":"Fix tooSmallSlice heuristic."},"3559fdf3dd4e0f3172f66c745b536bc3b8a5a666":{"date":"2018-04-15T14:20:01.000Z","message":"Clean up copyright statements."},"35a8e40de48202ce4efe133b7da2061d507431a8":{"date":"2017-04-05T13:09:55.000Z","message":"lala"},"35af22b94f43cd1cb596147a7342c275c3e861c2":{"date":"2018-05-21T21:20:31.000Z","message":"futhark-doc: better index page."},"35b086a6fda9334282fdef40c21c80bbffcf0ca4":{"date":"2018-01-02T23:14:13.000Z","message":"Add arrow types."},"35e086e7cdf19d309f2bc3f7c3083139097b680a":{"date":"2016-10-23T15:40:22.000Z","message":"Fix for old GHCs."},"3649c4831ca368579b5b12d5a37715c55102e0d9":{"date":"2016-08-16T10:56:04.000Z","message":"Fix out-of-bounds accesses when 2D tiling."},"366b027d878397eb1b4c8ebfe2acbf9dd866dc30":{"date":"2017-12-20T13:50:30.000Z","message":"Parser fixes."},"368ccdaa60ca70b6ae81377795e0a57d040709bb":{"date":"2017-12-10T23:39:14.000Z","message":"An if-expression is only cheap if its branches are."},"3691a7999f12e472a24af50780cf6bac14cb05b1":{"date":"2017-06-19T16:10:06.000Z","message":"Avoid simplifying giant scalar expressions."},"36d1f38de948abd12311ddbd6824ec4544f9368b":{"date":"2018-04-04T06:00:02.000Z","message":"Normalise before computing return type."},"36ebbf2c9964da82d3dcdd2b6f18e6483a2114af":{"date":"2017-02-20T18:50:21.000Z","message":"Add support for module specs to the module system."},"37097c273d9100e66b97755054f71366f30ef60b":{"date":"2017-03-20T19:35:08.000Z","message":"min/max is commutative."},"370c679c811e68496b9a43b953bed961e2c71715":{"date":"2017-07-30T14:38:17.000Z","message":"Also make it possible to reuse unique parameter memory blocks."},"3744847c1cf26672813b7f4e042c2a0c4566f2a9":{"date":"2018-01-19T10:58:51.000Z","message":"Factor scatter-like writes into their own function."},"37760e01871c4e800ad4dd985b2ba846a2f43227":{"date":"2018-01-24T07:59:10.000Z","message":"Add memory manager to Python as well."},"3809de6967eb80bfc7990c9541d7e1a15ee17cfe":{"date":"2017-07-20T17:26:56.000Z","message":"Add function walkKernelM for no-op traversal over Kernel."},"38193f69d8c5a1bc50849062197c5914ac1f097d":{"date":"2016-09-23T06:17:45.000Z","message":"Fix conversion of unsigned to signed types."},"3840b907363276b1ccb618d723eb3917a666a126":{"date":"2017-03-26T13:37:38.000Z","message":"Completely remove zipWith."},"384f43f52b3e09050ebc4a6118f2665536968dfb":{"date":"2017-04-21T15:39:24.000Z","message":"Support explicitly quantified shape declarations."},"389c949125d4176b3b08a56c5449705d145debba":{"date":"2016-12-20T13:35:38.000Z","message":"Syntax fixes."},"38cb22d78c559dd1890ed8381888ba5b09611146":{"date":"2018-02-20T10:34:16.000Z","message":"Rename FUTHARK_VERSIONED_CODE to FUTHARK_INCREMENTAL_FLATTENING."},"394baaac3f5567e68b542d058dbfb4299a006de7":{"date":"2018-01-07T17:45:44.000Z","message":"Remove yet another unused function."},"3a0eee41371812cf17d44442578e24d1a5cf0239":{"date":"2016-09-24T17:54:23.000Z","message":"Fix occurrence checking of checkArg."},"3a266c813913d0a7590e307c2b9550c444287f2b":{"date":"2018-03-06T16:35:25.000Z","message":"Handle in-place updates in intra-group parallelisation."},"3a48c3e0f28181c6e7c2f8d838b16ca862c0e34d":{"date":"2018-04-06T20:52:55.000Z","message":"Remove unneeded import."},"3a4e75cf770fe4911633cf8f92094adaf487eea6":{"date":"2016-11-22T12:20:02.000Z","message":"Permit endpoints of a slice to be missing."},"3a6627e8a4935fa390a4fff87ff7658cd1460744":{"date":"2017-01-22T19:40:41.000Z","message":"segredomap: remember why multiversioning decision is like this"},"3a6ae1c01f1636e67acebcc904caea157c065756":{"date":"2017-01-23T22:09:42.000Z","message":"Duplicate definigion error message fix."},"3a9dec774f6f854476e92f9603f9c8ecc828f936":{"date":"2017-01-29T14:43:15.000Z","message":"Fixes to bulk write function."},"3ac3ac83fb0f6cab11ed19847cbeeb9dec44a502":{"date":"2018-02-09T13:02:57.000Z","message":"Type-check existential memory blocks more thoroughly."},"3ae177a80b38dd5a8dcd8521b961d8115c7ee177":{"date":"2017-02-18T21:38:14.000Z","message":"Avoid duplicate parameter names in generated Python code."},"3ae5fe17ec3f0fb99de03274e0d5919995cc8cf2":{"date":"2016-08-28T10:52:37.000Z","message":"Simplify this function."},"3b3f8cf962edba931c505968ed224a0bcbedcdd7":{"date":"2017-06-05T18:02:34.000Z","message":"Avoid prettyprinting potentially giant structures in futhark-bench."},"3b4a0849a8dba622f9e68e4164880d98dc7ef29e":{"date":"2018-05-07T12:56:14.000Z","message":"Remove some dead type errors."},"3b6d1edece3e0a36dc8a5db353b77753f4252d5a":{"date":"2017-09-11T10:08:08.000Z","message":"Memory block reuse clarification."},"3bed9ed293340a697e9147583283ff340d95b283":{"date":"2016-08-18T14:00:04.000Z","message":"Handle inputs to Redomap in interpreter."},"3c0665428b01412c595536b6ee7cf96e20776a28":{"date":"2017-04-08T14:33:14.000Z","message":"Exotic module internalisation fix."},"3c128a4e5276de3f67109e8259c5dab1861929f8":{"date":"2018-01-10T08:22:18.000Z","message":"Replace actual/expected files from previous test/bench runs."},"3c7fb52d0a02c7742cc9ac3eec15c18193dfabba":{"date":"2018-05-15T13:50:29.000Z","message":"@coancea these are for you."},"3c8bcca5e1133cb01d91eef9a143df582c589343":{"date":"2018-05-24T08:50:29.000Z","message":"Fix insertion of parentheses."},"3ca69a097af2696b39d80d84eff02f15588bb91c":{"date":"2016-09-07T18:33:30.000Z","message":"Proper data dependencies for in-place updates."},"3ca7b4691f13570b0adcf66dd3f37a782cf91e37":{"date":"2016-08-26T21:30:02.000Z","message":"Lambda return type ascription is now optional."},"3ce52487daad6f412e4dd4f0d6240f2e81768eeb":{"date":"2017-04-14T17:24:22.000Z","message":"Try for a little more consistency in type application syntax."},"3d7297a4688454232529c64914966fc69ac26a6e":{"date":"2018-01-11T18:42:18.000Z","message":"Passes can now report errors more sensibly."},"3d73ed81566a74ce9e6526c28042d6d9627527bf":{"date":"2018-01-05T21:10:38.000Z","message":"Fix #456."},"3d7a102a2d5348daccbcce0b84d25d70b69af46f":{"date":"2017-01-30T15:47:39.000Z","message":"cosmin merging conflict after adding dummy memory-merging pass"},"3db9828a71fa28d83642c60f73976816115a35da":{"date":"2017-07-06T09:01:58.000Z","message":"Remove the need for parentheses around loop parameters."},"3dbaf031564ae0e2508701e3c747cf073b864926":{"date":"2017-12-23T22:23:20.000Z","message":"Switch statements representation from lists to Seqs."},"3de28f5e8db2962ef6d786ced6183d345a875e92":{"date":"2018-03-28T17:52:59.000Z","message":"Stop using global variables in Python value reader."},"3e1d2d27ee65d8850f9c395ecfa9b0abb2393a83":{"date":"2017-10-13T17:08:37.000Z","message":"Retain parameter names in output of futhark-doc."},"3e3996e64b9e59f798e73dc32bf0bbb348c196c3":{"date":"2016-09-08T20:06:14.000Z","message":"Fix loop tiling."},"3e8b6c9172c048077ded52a40f8af0df66d1f7b6":{"date":"2017-07-14T21:39:41.000Z","message":"Use the new loop syntax.  Use the new body fields."},"3ed8010235df5542fbd68c564b50530cb6825504":{"date":"2017-05-04T10:17:59.000Z","message":"Fixes for currying of magic overloaded functions."},"3f0528a4f35fb835d70dc499cc29fa4e8a193167":{"date":"2018-02-08T12:23:28.000Z","message":"Fix missing scope information in Unstream."},"3f71baa5c3c517276718667afe9311e87911acbb":{"date":"2017-08-27T22:18:31.000Z","message":"Fix data race memory interferences, and refine input memory reuse."},"3f89e0054be7e09add2aa8a3eb77506c92f922aa":{"date":"2018-02-10T12:43:21.000Z","message":"Fix #473."},"3f9c77f9aa72d7ba64c72d67cfb85fe049c18f8a":{"date":"2017-06-20T22:09:30.000Z","message":"Remove commented-out import."},"3fe09082f8bdc5c9c575ae4354f3ea0f066a0e54":{"date":"2018-02-23T18:20:33.000Z","message":"lmad validates and passes style check and minor modifications to PrimExp and IntegralExp so that I can get a sign out of an expression if the expression is a constant"},"3ff9460ba5b4cbcdba59cc498cb0a65a84cb890d":{"date":"2018-03-13T20:01:33.000Z","message":"Fix astMap method for Wildcard."},"40167db2df8743f6d3d0419bef678a3d131ed691":{"date":"2016-08-18T13:33:29.000Z","message":"Do not bother with the benchmarks on Travis."},"401ce0ed0bf5e53ba833e0e4430e22b6c0ef3810":{"date":"2017-05-05T07:18:49.000Z","message":"Clean up newMemBound."},"403d8c7ac50867d8fa25eb7142d8df263528b4d9":{"date":"2017-12-05T16:27:20.000Z","message":"hlint police."},"412678f8fdbf4a0aab1a2304116cb590a6a209f6":{"date":"2018-05-13T08:35:32.000Z","message":"futhark-doc: better alignment of type parameters."},"4199f6e60225c676dc87836de7bc338f26393678":{"date":"2017-01-31T15:41:29.000Z","message":"More subtle parametric module fixes."},"41c0ada8c16444a77f0ff17989e8777f693a71a4":{"date":"2016-09-22T13:56:42.000Z","message":"Fix potential name shadowing issue for functions that have the same name as their parameters."},"420f9ddc0e40fea63ea53c5f9b4ed38304328f9e":{"date":"2018-02-21T15:49:57.000Z","message":"Revert \"Reduce duplication.\""},"421afb734317f218cf26691c32d47b81ddac0441":{"date":"2018-02-26T21:42:29.000Z","message":"Fix #481."},"42998b63ab19c623188a0735ac43f3efc50e3634":{"date":"2018-03-17T11:13:28.000Z","message":"Better error message when gcc is missing."},"42d5e81c12a2bd2da07e00fa5137a92e84ab5e81":{"date":"2018-03-11T14:12:32.000Z","message":"Do not restrict distribution of in-place update to incremental flattening."},"430317e5b2ea5005851ce7f03564aa8f8dba61c6":{"date":"2017-03-05T18:44:49.000Z","message":"Make commutativeLambda more powerful."},"4305f71ca7e53ed1e0ca340ac86e814bf15c3b9f":{"date":"2016-09-22T06:49:32.000Z","message":"GHC 7.8 fix."},"43750e0515530a0d8965fdfe9da732cf6d42ec16":{"date":"2018-05-24T19:44:48.000Z","message":"Document streaming SOACs a lil bit."},"437d3dca6c863dc4964f18efd1e3306bfe3fc2dd":{"date":"2017-04-15T09:20:53.000Z","message":"Add type parameters to types."},"43a4acedd199953a87528d22fea67cd17349be4c":{"date":"2018-05-07T07:39:37.000Z","message":"Fix link markup."},"43bb4654515bd96199fe453b593fb43efe174975":{"date":"2016-08-26T11:49:56.000Z","message":"Fix grammar.  Oops."},"43bb60f86ba06ac4827cb51918bb9c98cfcf4c13":{"date":"2018-05-21T16:36:53.000Z","message":"rng_engine is in mtype, not term."},"43cb9e43de265a1616d34a2b8f8765837014fbe9":{"date":"2016-12-08T20:16:14.000Z","message":"Better name for this lexeme."},"44a2be42a6bbba59f4379bed5790d69547f6a22d":{"date":"2017-06-27T22:20:33.000Z","message":"Large MBM cleanup.  Clarify (simple) approach."},"44a6bed70b9097c7e2e54247f992dc2e720c4cc5":{"date":"2017-01-30T23:13:22.000Z","message":"Haddock fixes."},"44ba18e4aa74ee51c8f9860f968a6c12c43c4090":{"date":"2017-05-11T13:05:11.000Z","message":"Hack to make futhark-bench work with binary input files."},"44e9594fdff01ce7a64fb8a70d99c02f45e5b487":{"date":"2016-09-07T06:24:26.000Z","message":"Remove alises from arrays produced by replicate."},"456b8405e8998014cca32791c0fd9187f995b763":{"date":"2016-12-07T07:15:08.000Z","message":"Fix #258."},"457e704a32298e82fe8f6f399ce1f72e97f8491d":{"date":"2017-06-19T15:18:34.000Z","message":"No IntegralExp instance for ScalExp."},"4597460bd7659a5e046714d3152550d46008ce11":{"date":"2017-06-21T18:09:38.000Z","message":"Fix another fusion bug."},"45ed5c97ed0ae706c18068b4fbd5b6cb073f631f":{"date":"2017-02-09T21:02:33.000Z","message":"C RTS coding style."},"467005f72eab0aa035005964577b38265804d28b":{"date":"2017-11-25T16:58:58.000Z","message":"Another prettyprinter whitespace fix."},"4723fe06e3790240ceed8bed52ba682e08b1b268":{"date":"2017-06-23T14:56:44.000Z","message":"fixing bug in coalescing"},"4746969ccc006a186d7bd87075e50318308cfd95":{"date":"2017-09-27T15:07:17.000Z","message":"Use shared infrastructure for CLI compilers."},"47ac6dc726ebfde6f69d5305b9bf35cd38c43bd1":{"date":"2017-12-21T21:41:42.000Z","message":"More work on intra-group parallelism."},"47cf2c34644329cf9540284d393f340d7853d52f":{"date":"2016-08-17T19:35:35.000Z","message":"Simplify some control flow."},"4844a60075ccd7a35330a4ce1288fd967913bd43":{"date":"2017-06-30T15:57:03.000Z","message":"Remove stream_seq from source language."},"485d6d7fac8f4bfeb733117eee20d612ab940660":{"date":"2017-07-30T20:26:23.000Z","message":"Allow reusing the memory of unique array parameters."},"48643724fc50e9153b06e697c1e47f805a1238c8":{"date":"2017-05-16T09:42:07.000Z","message":"Be more aggressive about removing bool-branches."},"48c33269da79c591b3172fe3cb76e5e63cdb3fd5":{"date":"2018-05-31T18:17:14.000Z","message":"Fix #558."},"48c91c417934339730f365355f2cb743df1ef4b8":{"date":"2017-02-25T08:10:25.000Z","message":"Hack to make internalisation of modules work again."},"48ebaaf8b564a806b984c1c2cad0f977ff20b4f1":{"date":"2018-02-16T15:17:36.000Z","message":"Do not bother sequentialising scatters."},"48f7e7e745108c97043d1441ace74e62166747d1":{"date":"2017-05-02T12:01:49.000Z","message":"transpose is now a library function in /futlib/array."},"48fa345744b88a16af89dc1e4d1edb61abbf6d89":{"date":"2017-08-10T12:48:45.000Z","message":"Update the remaining links."},"49366d50cf71faab1ba51c56d825cffcbde4eaf5":{"date":"2018-04-09T19:36:17.000Z","message":"Keep source location in monomorphiser."},"4936d205be101a94701e72f90fd9e4b57f9efb81":{"date":"2017-05-10T16:26:32.000Z","message":"hlint police."},"4963ba1e4c051d2f73b2e51555412a5de8e7ae76":{"date":"2016-09-13T12:07:42.000Z","message":"More Rosetta Code programs."},"49b69985fe86221dc46bef9dc1501b86ce9d881c":{"date":"2016-10-17T06:43:23.000Z","message":"More elaborate dummy kernel courtesy of Martin Elsman."},"49e51ded3f5bd78a4edfd1ca5b6f58479c644139":{"date":"2018-04-06T17:22:39.000Z","message":"The futhark tool now supports --defunctorise, --monomorphise, and --defunctionalise."},"4a7e65d2f9f4d817aad37cb328fb275125061db7":{"date":"2016-09-21T05:41:09.000Z","message":"Remove unused entry points when compiling as executable."},"4a813d52909a74be0975662a36bf10a6251ff43e":{"date":"2017-06-10T15:39:12.000Z","message":"Fix an exotic parametric module bug."},"4aa2e0bc6bd1c0c4ae55b44e23fdcfd0ddd409d9":{"date":"2016-09-07T14:55:07.000Z","message":"This parameter is not (yet) used."},"4acf2e9d95ba2699345511a08850fba3b9d40836":{"date":"2017-07-20T10:10:53.000Z","message":"Generate non-copying code for coalesced concat arrays."},"4afb0c82568656d45559d04f9b5bfa0b1b801d58":{"date":"2016-12-25T11:25:59.000Z","message":"Unique names are now assigned in the type checker."},"4b0eaec946c6aa1ed29904ed9b18840641521a3d":{"date":"2018-01-17T13:40:16.000Z","message":"Fixes to irregular memory expansion."},"4b59b07c29a3e555076e2e4bb636cef5979179e3":{"date":"2016-09-13T12:14:35.000Z","message":"Indentation fix."},"4b7c2f620ecc16d2526d47b90aac2fc75324d3a1":{"date":"2018-06-01T22:40:10.000Z","message":"Fix #560."},"4c04896c0098a17f249b8316107ff9b3339dc6b5":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: oops, passed the wrong arguments"},"4c4214443c49dc86b0b78bbbb3985d6ff2418f15":{"date":"2016-08-18T16:24:28.000Z","message":"Python empty array printing fix."},"4c439e2fc335c04caf003307622c74c38e928f83":{"date":"2018-02-23T09:53:44.000Z","message":"Generated PyOpenCL classes now accept a `command_queue` parameter."},"4c4d74bc2561c923dc00d0467a19379289807d0e":{"date":"2016-10-17T13:34:31.000Z","message":"Add atan builtin."},"4c52693d1bcc9c8aa4ef992075ad28dc9ebf6bf5":{"date":"2017-12-13T15:20:01.000Z","message":"Add missing consumption tracking to Combine."},"4c6bd1fde9560ae31c47386602303ba08febfa97":{"date":"2018-05-27T20:44:56.000Z","message":"Fix type annotations for projection sections."},"4c7029ba77665b356f861f23238b42f8360e730a":{"date":"2018-01-22T19:56:39.000Z","message":"Add experimental intra-group parallelisation of Scatter."},"4d2012794d42d15cdb7269b76ddf3cadad68a14c":{"date":"2017-05-05T23:47:27.000Z","message":"added support for substituting a name with a (PrimExp VName) in a (PrimExp VName)"},"4d2d3e82284c4eac4a692fb0d7d04a42c8fe380f":{"date":"2017-09-21T15:29:09.000Z","message":"Use haskeline for input editing in futharki."},"4d4631fe807e7fae076e1d96a47b996e8cb3e2f9":{"date":"2017-12-12T22:14:14.000Z","message":"Ensure intra-group parallelism does not exceed group size."},"4d4eef158a6f2e3aa25d18a7b3efda06c06468e4":{"date":"2016-09-05T11:55:03.000Z","message":"Underscore in kernel names."},"4d56ef7bbed96906db8dd30cbcb0f6d759cf9a82":{"date":"2017-09-08T11:27:18.000Z","message":"Put a bound on the amount of time we spend on algebraic simplification."},"4d73fb70a11cb733205383f45d18c2435c0769d5":{"date":"2017-04-14T10:25:08.000Z","message":"Rerun stylish for Language.Futhark.Syntax."},"4d7f9a0b8a401b7bf635daced799337a0689835a":{"date":"2017-05-15T09:10:19.000Z","message":"Comment and cleanup."},"4ddaa5cf36201fa73745f4a52715d6c87f127a28":{"date":"2018-04-14T08:41:38.000Z","message":"hlint police."},"4de8da043e954f7b671ca3b3ef25f316b9d22a72":{"date":"2016-10-16T08:05:22.000Z","message":"Descriptive names for kernels."},"4def19c8f1a56363085751d0a1a729041c53d975":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: add num_groups_per_segment as kernel debug"},"4e1b8882b0d7a5c88c1c0e91f2e523efa106cc21":{"date":"2018-02-11T21:06:38.000Z","message":"Better names for thresholds."},"4e26859d17fa29d2b4dd6209d84c747773c0cf0b":{"date":"2017-03-22T22:20:50.000Z","message":"Directly expose primitive operations in the source language."},"4e9b7b3ef7b37f5554a517ff23565cc39f860e90":{"date":"2018-04-04T06:23:10.000Z","message":"Simplify application type checking."},"4ead99a7bc123354f9a70da221db0d50bd19a861":{"date":"2018-03-14T10:23:14.000Z","message":"Python backend: simplify processing of input array sizes."},"4eb87cf33628a770106b7ca9b5233e80b9030a4d":{"date":"2017-11-29T20:13:00.000Z","message":"Small cleanups."},"4ec70691c9b173aa3d364347aeda9a4b1be79060":{"date":"2016-11-15T08:44:50.000Z","message":"Workaround for compiler bug."},"4f5a097edb7ddbe735405610edea0979075489bf":{"date":"2018-05-12T22:31:43.000Z","message":"Support cross-file references in futhark-doc."},"4f8349fdffb9c03e7e68682a3952ba3dffa2b073":{"date":"2016-11-19T17:54:36.000Z","message":"Fix segmented scanomaps with mapouts."},"4f96a99b4d8ac42ca4481e5641def1e2fa828a78":{"date":"2018-03-07T21:44:47.000Z","message":"Fix for certain contrived concats."},"4fa351bb71078bcd3e484cec4a2cc531625e56f5":{"date":"2017-08-08T14:27:38.000Z","message":"Add gpu structure tests to the remaining memory block merging tests."},"4fac25bdf5c6ba81a4c5c1716310c45d1f4dbd8d":{"date":"2018-05-30T11:37:10.000Z","message":"Restore support on olden GHCs."},"501f95ab481cb2d8650921a131420107d80e7b4b":{"date":"2018-01-26T22:11:32.000Z","message":"Express subtyping in terms of unification."},"503f5b3e94d341fc8ecbecc6211772d9166635e3":{"date":"2017-12-31T13:56:44.000Z","message":"Remove some unused fixities."},"504cf054866d1b94e4c85b3209c74d9c5fa6fe93":{"date":"2017-02-14T19:53:18.000Z","message":"Permit all types in entry points."},"50741b3dacd995d54d80933abb744d5badc0f786":{"date":"2016-12-12T21:01:28.000Z","message":"Re-add an error that got lost along the way."},"5086b269a109095aa52dbc20912a38a1aa20f33b":{"date":"2017-02-27T09:18:15.000Z","message":"Fix conversion of comparisons on booleans into ScalExps."},"50cb6168ad4f2987be6da6784c96562c06900a23":{"date":"2018-02-26T19:22:50.000Z","message":"Remove broken comment syntax."},"50f2c66b1a549b06e7c2b3d8cc265c3cdf539af4":{"date":"2016-08-28T10:49:37.000Z","message":"Add tuple destructuring in patterns and change funcall syntax."},"50fcb5d6885cf9b38a3d242cf5d4f869af74d2ef":{"date":"2017-11-12T19:41:42.000Z","message":"Permit-user-defined prefix operators."},"51042250c69b747d0108394f379f1217b57fbf38":{"date":"2017-10-18T12:54:00.000Z","message":"Interchangee loops for all kinds of parallelism, not just map."},"51231075803d9c292e0fbf30e9b279595a70a038":{"date":"2016-09-28T20:06:46.000Z","message":"Permit iota argument to have any integral type."},"512c773f71a5b41b35a9b135afc18a2ced7b05d5":{"date":"2018-01-19T10:58:16.000Z","message":"Handle unreferencing of non-fat memory properly."},"5156926d40092d52438b8a5742d4c11b7845f303":{"date":"2017-08-01T16:58:34.000Z","message":"Fix 'if' pretty printing space omission."},"51b8d3c2111e9d21ff1b99dfb1b03ea7d8ef0a04":{"date":"2018-03-12T15:32:25.000Z","message":"Treat all value bindings the same."},"51de661e9e85a5b07fc4a4f03087fdb49f3af397":{"date":"2017-05-06T16:17:54.000Z","message":"replicate and iota is no longer language syntax."},"52385effb6d555edfa822643f79694154d6fa724":{"date":"2016-08-31T12:19:28.000Z","message":"Num instance workaround."},"52397e081d2db8312298375e98f69f8e42823083":{"date":"2017-07-14T17:17:33.000Z","message":"Fix #378."},"5286c51bbc8e050157f2ab589d9dad45467db57b":{"date":"2017-06-23T07:03:28.000Z","message":"Fix #359."},"52935d528364809b72ba52582cdaf0cd1e24c63e":{"date":"2016-08-26T11:25:34.000Z","message":"Remove old parameter declaration syntax."},"529860a7327bda5e1e5e8d99a8d8541a5089be2c":{"date":"2017-09-06T17:30:58.000Z","message":"Clarify which 'VName's refer to variables and memory blocks."},"52a04c0021eaa3b0277553fd5ae8a00e92f0752a":{"date":"2017-12-21T21:41:11.000Z","message":"Better handling of non-default memory spaces in allocator."},"52a5ab8ddbb556473c251e6b5f3c6b0b3a0635f2":{"date":"2016-10-15T13:21:46.000Z","message":"KernelSize is now just an intermediary structure."},"52dc66ac97fdf143983de23e91481e909f556182":{"date":"2016-08-24T07:29:15.000Z","message":"Fix distributeKernelResults."},"52ed7d965602875fcbdf0616646fe4aae6b6284e":{"date":"2017-08-22T09:41:56.000Z","message":"Revert \"Copy all memory before each run.\""},"5321e1a99fa13d2a4eff75ac2518d2e048f8f366":{"date":"2017-07-23T13:07:19.000Z","message":"More fine-grained coalescing of ifs.  Two new tests."},"53e931617ab1c1b286827264627ccf1f30d6bded":{"date":"2017-03-02T21:10:41.000Z","message":"Add explicit 'a with [i] <- v' syntax for in-place updates."},"53fdf7898fd24b75bb41f376e7164d1ba4c202c4":{"date":"2017-05-02T11:51:20.000Z","message":"Require absolute import paths for futlib."},"545ad65dc0fe614e50a1ae956210621bb05984b9":{"date":"2018-02-02T13:57:59.000Z","message":"Better error message on kernel-variant allocation."},"545e17f5de925a6a5c273816b94ee5876bf16c00":{"date":"2017-09-10T08:59:55.000Z","message":"hlint police."},"547c53af7e4e6178abcb9986f0b53d9b68f484d7":{"date":"2017-03-13T12:10:08.000Z","message":"Some superficial cleanup."},"5484bffa49f0b0cbbaac64f1de47f3f60e6ca4de":{"date":"2017-09-08T07:07:12.000Z","message":"Enable hexadecimal floats in the C reader"},"549ac0f5b9ab0d96eb4e01f484bd2b6ef7036b23":{"date":"2018-04-16T15:19:51.000Z","message":"Another concat simplification."},"549fad24d6499ffc80897a80a527da10f3f194e8":{"date":"2017-03-28T12:12:49.000Z","message":"Remove unused flag."},"5537979e21299b240761e15843e202429b5125a0":{"date":"2018-03-09T21:03:36.000Z","message":"More refined handling of segmented concat."},"558740bd61f06ffd6bafc2d6ad21615840025a60":{"date":"2017-03-21T10:25:39.000Z","message":"Fix redomapToMapAndReduce."},"55e7820da88408f695424a2b4785ac7f8e0d211a":{"date":"2018-02-08T10:06:52.000Z","message":"Remove kernel-variant groupstreams."},"5609f9beb5c850ad7497f5f4a5f688726f818018":{"date":"2016-12-28T22:21:30.000Z","message":"Do we need to be so careful around Combines?"},"560d14469ad92a60a54ecb6b09f1ab24104380b0":{"date":"2018-01-11T08:18:22.000Z","message":"Try to make the compiler a little more parallel."},"562eb50080541f620a47bd7bba88fb901b8e7be9":{"date":"2017-10-03T20:34:30.000Z","message":"A fix to segmented reductions."},"5632192c4d99d6f524af0f4a8b679a7997b124d0":{"date":"2017-05-23T22:25:42.000Z","message":"Permit segmentation of more complicated nestings."},"5683efd79f5f6248909997a4449c56ce6b85c858":{"date":"2016-08-25T16:02:27.000Z","message":"PyOpencL should use same default group size as OpenCL."},"56cb1f47e99e0389c58d1fe4f3745ae206974013":{"date":"2017-12-19T17:22:47.000Z","message":"Remove MonadWriter instance for BinderT."},"56e504434e292b327783e671199c8e8b5d9adc87":{"date":"2017-03-20T19:25:49.000Z","message":"Add max and min as primitives."},"575759f06e5d93901334d644aabfdbee55192295":{"date":"2018-04-15T09:32:43.000Z","message":"Remove unused token."},"57da392dbdc7f044a82a89192a349ec5e11cd186":{"date":"2017-04-14T09:53:29.000Z","message":"Cleanly separate type arg expressions from type args."},"5810d0a000f52a2a50b0182de4be9afb94783a31":{"date":"2017-11-01T14:47:56.000Z","message":"Merge MemReturns and MemBound into a single data structure."},"5846df7ffaf92e43c3d61fd6f84f6989493baf7d":{"date":"2018-01-16T12:48:49.000Z","message":"Resolve type issues for primexps."},"586009322ac3f343a91d7a18f83f83fe3bedbb8d":{"date":"2016-11-28T12:05:44.000Z","message":"Double buffer fix."},"589c4d8f659c58aa6f5d00bef76f8a964bfaa56f":{"date":"2017-05-07T07:11:23.000Z","message":"Fixes to Python entry point type checking."},"58ab09d13e7101394bc9a6357f5a38a1d9c98a70":{"date":"2017-05-30T12:08:27.000Z","message":"Revert \"Crash on attempts to allocate negative amount of bytes.\""},"58c05f883a8d0e5cb0013c4f07e8dc8ffc1f3ca8":{"date":"2018-04-15T09:53:10.000Z","message":"Eliminate another keyword."},"58d5d9ac54544f14ed3335b812547c1cbc1d27a3":{"date":"2017-09-29T13:19:53.000Z","message":"Better parse errors for known error cases, such as #402."},"58dc4410d3af48cf9b895863fbe81d02d01ff84e":{"date":"2018-04-11T18:48:06.000Z","message":"Dead-code elimination for reduction results."},"58f77d11c6802418b3e041da8da7ec6371a63caa":{"date":"2017-06-05T18:04:43.000Z","message":"Remove unnecessary import."},"59756319b1e6fa3d811ea29095096b2dd4ff4a81":{"date":"2018-04-06T20:59:42.000Z","message":"Write this in pointless style."},"59a877d7b273195f2a827a51c91bd70e4ea0a546":{"date":"2016-12-09T13:59:22.000Z","message":"Document the KernelExp SplitArray."},"59b7a852ce5942327e5f40f5fd8680b0b257c974":{"date":"2018-04-09T13:01:00.000Z","message":"Fix #525."},"59e31d28eda68335744713368b583b3df18c5dd4":{"date":"2018-03-13T21:11:56.000Z","message":"Remove now-obsolete parts of the Internaliser type machinery."},"59e6cbcb7091ebc70c711a1cc06ea0e1b914541e":{"date":"2018-05-27T10:13:51.000Z","message":"Fix bug where default tile size would not be set properly."},"5a02c7bff1b4b4b862fb674c6425cabdd330416b":{"date":"2018-01-06T00:24:20.000Z","message":"Tweak heuristics for memory allocations in loops."},"5a0b38d1631a17e0a5cec3573c40c9175abc6cd6":{"date":"2017-02-10T21:15:27.000Z","message":"Another functor sustitution bugfix."},"5a4799db2fe75054129e6157596fded514b2ae56":{"date":"2018-05-11T16:40:50.000Z","message":"Fix #548."},"5a68d6c329e9129c8bd3cb0343ca02288ccdb43d":{"date":"2016-08-24T08:48:50.000Z","message":"Fix replicate kernel code generation."},"5a6af888b355f3d4f1b94a6e6523f28ae47487f2":{"date":"2017-02-16T12:53:21.000Z","message":"Also permit algebraic simplification to variables."},"5acec623e5418d279b3f870e0feacc37190666a0":{"date":"2017-10-01T10:50:49.000Z","message":"Do not throw certificates away in in-place lowering."},"5ada2813fcd01f38eb8683ccd018bf78abd527df":{"date":"2018-04-06T20:25:45.000Z","message":"Add a test for local functions."},"5ae0c147e356b7482e41b0cdcb58b0f2b7a930fb":{"date":"2018-02-18T15:53:36.000Z","message":"Remove dead code."},"5b0f945b307320bf45a77b1c11de26ec69305f6b":{"date":"2017-05-24T18:11:29.000Z","message":"It is now permitted to use an array that is also being streamed."},"5b6bab3d9b23eafe230023c19a143d4bed5558a8":{"date":"2017-06-02T20:20:32.000Z","message":"Revert \"Implement #339.\""},"5b997a95e11b5476542f1ba963267feb667162c4":{"date":"2018-03-03T09:36:37.000Z","message":"Hoist costly statements from branches when invariant to enclosing loop."},"5bae6680bf04a45be4ad1819f23c8402e63f3816":{"date":"2017-09-09T12:57:07.000Z","message":"Remove redundant import."},"5bd7a0ad979c11bad85d5387ccd0ed87cdecc57f":{"date":"2017-06-07T12:30:20.000Z","message":"Some more log messages to track progress."},"5c379b4e0014d35193e21e8ad094f4f155aadecc":{"date":"2017-04-09T04:41:28.000Z","message":"Simplify some prettyprinting instances."},"5c9ace02011b6442581ad4a464c47a95300d9715":{"date":"2016-09-08T10:05:01.000Z","message":"Be more permissive about empty tuples."},"5cea7f7d17fea7520cfef807fb620a45a7999501":{"date":"2017-02-11T11:06:52.000Z","message":"Permit open to operate on module expressions."},"5cf9c92df616c2364787a344b18d10635786e143":{"date":"2017-10-14T11:10:20.000Z","message":"Simplify handling of built-in functions."},"5d321abdfaddcc23e435316bed871132f50dbcec":{"date":"2018-01-19T11:26:13.000Z","message":"Existential local memory is fine."},"5d53d1601a5fbd5f73cd56510c37e4bce1053648":{"date":"2018-01-08T15:06:07.000Z","message":"Remove general expression in-place lowering."},"5dd5aed88d1f1664c5ed3fe098e83a5dc7e8993c":{"date":"2017-04-11T11:24:36.000Z","message":"Move names in type checker around a bit."},"5e457a994a634e03ea037c15d8e9f39533ee4f13":{"date":"2018-01-11T20:31:39.000Z","message":"Add MonadFreshNames instance for ExceptT."},"5e86ae8fdbbc971f5527d703ec66b330032e0f16":{"date":"2017-05-31T17:55:34.000Z","message":"Restrict kernel babysitting even more.  No regressions!"},"5e87512fc89a3a9773f8ab4f9bfd6989bfd0395c":{"date":"2018-04-24T09:17:06.000Z","message":"Remove the last remnants of recursion support."},"5ea0bba4eb63563cfdf9f03214a0fa0affd2db79":{"date":"2017-10-10T20:33:13.000Z","message":"Repair a broken renaming."},"5ed3de77e3664ed6d55533ffdee5d1dcf1bab7c8":{"date":"2017-12-09T16:57:18.000Z","message":"Split complicated scanomaps to enable tiling."},"5ef7679e3f5e49ea597e1f2cd727f3271fae4954":{"date":"2017-05-03T18:56:32.000Z","message":"Reduce spurious unused-name warnings."},"5f05c00bbd137dc2d28acc775e53ec71b908557a":{"date":"2016-09-07T06:43:53.000Z","message":"Index-replicate fix."},"5f09fcdb7b3a9fa55004e5715fb5dd4970c56d44":{"date":"2017-04-25T21:50:30.000Z","message":"Shape parameters to entry points are OK."},"5f49410ace455b144db5eea659f80af324147913":{"date":"2017-09-01T20:51:45.000Z","message":"Fix #392."},"5fa6c5f1bece2ed3b87669b35c7e9a5cd3757e42":{"date":"2018-03-13T19:52:07.000Z","message":"Add some consistency back to astMap."},"6023bdcba523a767a1b75cdf20736cc385c61491":{"date":"2018-03-24T10:19:23.000Z","message":"Deprecate multi-array maps."},"60602ca886b9932a245cc1960ae1dc3a83d9dc35":{"date":"2017-06-07T11:47:41.000Z","message":"Add a way to disable in-place lowering."},"6083fc4a854f1c8c20c30ce91b49ab17b5378f9c":{"date":"2016-08-25T10:37:42.000Z","message":"Merge branch 'master' of https://github.com/HIPERFIT/futhark"},"60b93fd247b371d75e8eef864f173248c3f9d7eb":{"date":"2017-07-11T18:27:52.000Z","message":"Add syntax for integer ranges."},"6150d9bcb56530fdc1258645a587ba5a8b6cfc1b":{"date":"2018-05-14T21:32:49.000Z","message":"minor"},"6182fe6a461aeadc0d53d64cd8cf3b8a8d9eca3d":{"date":"2018-04-14T08:57:17.000Z","message":"Clean up the Miscellaneous module."},"61beabdbaaf9a867ca921cfb131820998e0875d4":{"date":"2016-10-29T12:56:08.000Z","message":"More polishing."},"61c2ef9633f651158020edb13f51b6b99665cec2":{"date":"2017-07-19T07:14:32.000Z","message":"Simplification rule for SMax."},"625045259c348f8e3212d6bb8f70608411e1f6c2":{"date":"2017-12-11T10:57:40.000Z","message":"More small polish."},"62647220c7ea2c5dd584c378aed922c13648627c":{"date":"2017-03-13T12:42:51.000Z","message":"freeIn fix for while-loops."},"6282c874072976b5e284886131064c065a42882e":{"date":"2017-01-31T16:21:06.000Z","message":"Fix style issues."},"62f96a3ca84acea2c1c1b375778f8a22b58474f7":{"date":"2017-06-23T21:11:44.000Z","message":"Fix hailstone example."},"62ffcfbd23ca1828fb92d30587c12cb52017b9bd":{"date":"2016-10-15T10:42:21.000Z","message":"Less verbose core type errors."},"6324c6db0038e9dbc3c1afaa1c6c2471f64866e9":{"date":"2017-09-29T15:01:05.000Z","message":"Indent specs in generated futhark-doc HTML."},"632504599e31b8df33275d0115f7b779a935543a":{"date":"2018-05-30T16:56:01.000Z","message":"Better type error messages, specially for records."},"632f33be78a3ea8dcedfd9119ee98fa7f24423ea":{"date":"2016-09-08T12:24:49.000Z","message":"No test cases is OK."},"6346448c970e502e7cddca3a9200f14686529e98":{"date":"2018-02-07T20:20:30.000Z","message":"Further avoid sequentialising away outer parallelism."},"636494eaee20242aaf594f8e7f8dba5c069f0198":{"date":"2017-09-27T07:56:58.000Z","message":"Incredibly hacky hack around local functions.  We need to fix this mess in the internaliser, and soon."},"639246e026187feb97bb3652f9248158c6ea4aad":{"date":"2018-03-24T13:22:59.000Z","message":"Fixes for higher-order functions."},"6404671398ac8c043c27b905d802926fbcbc1cbb":{"date":"2017-05-06T22:24:36.000Z","message":"Basic type checking for Python entry points."},"641b4d14722a957a12a893d2ec4329ca44d6bcc6":{"date":"2016-09-03T07:28:37.000Z","message":"Hack to let the C kernel compiler do some unrolling."},"6497ee5cd9db74a12b8644960c55b4c2df69d7ee":{"date":"2018-01-22T16:58:20.000Z","message":"Constant-fold shifts with negative amounts sensibly."},"64a40e05272ebc23e25faac62679e4c98a9dcb62":{"date":"2017-05-31T12:15:02.000Z","message":"Limit when kernel babysitting applies."},"64ca8c13e4c204e68af11e12f132c61758017b2c":{"date":"2017-03-09T10:57:41.000Z","message":"Add prettyprinting for Update."},"656b10b1eaea50f1a765646423f4496992063b2d":{"date":"2017-06-14T11:30:25.000Z","message":"A fix for index-into-reshape simplification."},"6590fe5ac3d2d1eebb8b038530b1604d1546292f":{"date":"2017-04-30T09:39:02.000Z","message":"Fixes to module system internalisation."},"6597b2fba5367fadd906875c2022aba42cf394e3":{"date":"2018-01-21T12:27:13.000Z","message":"Avoid comparison between signed and unsigned values."},"65f37f4ad89b1a618ec09ed680eeab02654e19f8":{"date":"2017-03-04T10:57:56.000Z","message":"Add functional record update."},"65fc5e31dfd5d3ca8600cb367b47955d3efb3d03":{"date":"2017-06-14T09:57:53.000Z","message":"Fix another module regression."},"6605906873767770e1b368ff1da802f243055aba":{"date":"2017-05-29T14:38:41.000Z","message":"Fix indexing in large segmented kernel."},"662c7a0cacdf2fb0ea1ac270e4fd73726e22b353":{"date":"2017-03-10T13:33:37.000Z","message":"Rename --travis to --nobuffer and fix it."},"6667c2c3bc7c3ec5633132d955035ff8269994fe":{"date":"2017-05-15T12:44:22.000Z","message":"Fix allocation hoisting bug wrt. in-place updates."},"669e2b9bc7d62f6639780fe94a63788ddcb476ac":{"date":"2018-01-07T22:38:13.000Z","message":"Remove some bespoke functions from internaliser."},"66a94762636fcf97e2e6ea670979722bb9b7249c":{"date":"2018-02-03T09:34:56.000Z","message":"Fix writing kernel results from local memory."},"66c08478c8b0cda31c907b40e453f15f8b5a8765":{"date":"2018-05-02T11:14:50.000Z","message":"hlint fixes."},"673ca811bc08826900d99b7797cc02a7252378a0":{"date":"2017-03-25T13:42:23.000Z","message":"Ditch camelCase keywords."},"6740ccdb4a6d90c487f3f17a0f7828a7f9d77e77":{"date":"2017-02-13T13:36:21.000Z","message":"Fix #304."},"67d6f4cd412ba9a14930798049a1c7ec9afbc531":{"date":"2017-07-19T18:59:25.000Z","message":"Fix allocation hoisting bug."},"67fc9163611c66d0eec5180dc2cc2c92503f8df7":{"date":"2018-05-03T09:48:58.000Z","message":"Turn merge sort into a function."},"681df6d431fc76bafd3afcb3ce00edab6d55ed96":{"date":"2017-03-26T11:36:17.000Z","message":"Do not run structure tests when -t is passed to futhark-test."},"6824b8b31dc3d977e487c28048c63873670675bb":{"date":"2018-04-14T09:01:39.000Z","message":"Remove unused import."},"683ab44a50410442aa4a0ec4a9f0e07354efecaf":{"date":"2018-05-23T17:21:18.000Z","message":"Correct span for radix sort."},"68626635c386fb6991f0ad5824ac7b6d015575a1":{"date":"2017-04-08T18:59:02.000Z","message":"Remove unnecessary parameter."},"686755bbaba673c244d6f1ede30f5d2f6713a09c":{"date":"2017-11-29T17:43:23.000Z","message":"Simplify type table management."},"686d49153bf60972c8dc047ccb7bcf843086702d":{"date":"2018-03-09T19:12:30.000Z","message":"Move the size hack around a bit."},"68c130644209068e921e0b7ec699805f15d11354":{"date":"2017-05-11T14:21:20.000Z","message":"Better reporting from futhark-bench."},"68d42cbcc93eb30038e46cecae9f41613907d192":{"date":"2016-11-24T15:36:58.000Z","message":"Add binary literals."},"68eea920d47ddeb24c8f69441d17ed7b1987490c":{"date":"2018-03-15T15:37:24.000Z","message":"Add some new operators."},"698f9dc3b53a214de289590683fb2c6b69780922":{"date":"2017-11-25T09:39:06.000Z","message":"More whitespace printing fixes."},"699d0912c496649203281e9c8072c258f02e8e47":{"date":"2017-02-25T15:11:49.000Z","message":"Stop treating missing types as abstract."},"69d7ef5a40207f751c2efce5f82ebd3f0e096ae4":{"date":"2018-05-21T16:29:22.000Z","message":"futhark-doc: warn on missing identifier references."},"69decdde74c74560abf1acdf7b9b4e43b7f24f45":{"date":"2017-12-13T11:37:17.000Z","message":"Only use collective copying for local memory results."},"69e78464402d9fc1fc02f935d9247586f877bc6a":{"date":"2016-08-29T04:17:56.000Z","message":"Curry zip and concat syntax."},"6a02a44b909537a7128a2d13b6af88f1430e8112":{"date":"2017-05-08T13:21:08.000Z","message":"[MBM] Work on functions."},"6a06fd8ce22d945edf6eb777d6b82f8859c5189f":{"date":"2017-05-30T11:29:41.000Z","message":"Crash on attempts to allocate negative amount of bytes."},"6a35731239506151b69ffeaaa7fa45d848761dff":{"date":"2017-05-25T13:45:44.000Z","message":"Actually implement intrinsics.bool."},"6a357659a0c387a18df212f1c3f4c35ac15ef072":{"date":"2018-03-23T18:50:12.000Z","message":"Fix a combination of loop/index type inference bugs."},"6a426444c9b1987249c14e8760983627d547cb72":{"date":"2018-04-04T21:35:17.000Z","message":"Fix Safety handling in inliner."},"6a6e7827661941adb4e353151febd13b801d8977":{"date":"2017-03-02T21:41:46.000Z","message":"segredomap: only do the tricky case with versionedCode"},"6a917ad796daa8ceca5bfbeeee382af6ebb27d66":{"date":"2017-06-21T13:31:31.000Z","message":"Fix #356."},"6a94911206c5ae520f91b01d19afbfdafab0a407":{"date":"2017-10-28T08:59:23.000Z","message":"Remove generic expression folding."},"6aac7dde6f98dc772166d9f22b0cc16229185c0b":{"date":"2018-02-18T11:28:55.000Z","message":"Add some heuristics for when to generate different code versions."},"6acee96d111b65120bd35931895565e892de5350":{"date":"2018-05-26T18:20:01.000Z","message":"Prettyprint certain Scremas as map/redomap/scanomap."},"6b037c2412dbff18f64e47e2ad9ee2e62009651d":{"date":"2017-06-05T18:37:27.000Z","message":"Fixes to reading of unsigned numbers."},"6b337c3ce7f68575534065f09b4926ef41328447":{"date":"2016-10-16T22:08:16.000Z","message":"Fix PyOpenCL command line option parsing."},"6b7d4267c66f5eec093595899b38734f7ac2681e":{"date":"2017-09-08T11:06:35.000Z","message":"Hacky fix to Python textual value reader."},"6b8116cfddf6b5b1c988c08bd6176841563e73c9":{"date":"2017-02-15T16:12:30.000Z","message":"SMod simplification rule fix."},"6bb41d6d745327eb914ccd30cd2f1e562bba15ca":{"date":"2018-05-28T16:31:00.000Z","message":"futhark-benchmarks: bump"},"6c0d54a9cd5357df8138c9281794320dd9bc0808":{"date":"2017-11-23T10:52:59.000Z","message":"Some prettyprinting fixes."},"6c5ab102d5aaca2c96ae3f0dea3415b05b510782":{"date":"2017-10-27T12:18:25.000Z","message":"Better parse errors for unexpected doc comments."},"6c7f826e6f6b77bce1e1ee88ca1d048296fe164d":{"date":"2017-03-01T11:32:15.000Z","message":"Fix unused-variable error for loop induction variables."},"6c8017dd2b10f5389e91df942e42fe7756b0aa31":{"date":"2016-09-05T13:51:34.000Z","message":"Warnings!"},"6c82f15e508a4db19fa7ca4f6eceafac1cc2e7a0":{"date":"2017-05-04T14:34:11.000Z","message":"fixing bugs in coalescing"},"6ce4a96d8935593539ad33cf8b149ea9e4085705":{"date":"2017-02-26T21:39:19.000Z","message":"Module-level lambdas and juxtaposed application syntax."},"6ce6687fe081e046d47753ae0ba2bf17a0ba4111":{"date":"2017-06-21T10:20:56.000Z","message":"Revert \"Ensure correct SOAC width in setInputs.\""},"6cf041fbe25c8805a555d2a402c5f3a051c5c917":{"date":"2017-05-02T18:45:43.000Z","message":"Implement local definitions."},"6d5c3f9e40c14e7e320dae6bf1c0641a7108f998":{"date":"2017-06-29T10:35:37.000Z","message":"Handle loops using new arrays in regalloc."},"6d6cd457f61cb26f9a3cc3ba1e4571bbbd7ab393":{"date":"2017-11-07T16:56:18.000Z","message":"Add monomorphic conversion operators to futlib."},"6d85f98a61073584a9eebad3062ed5fe93fdd8a1":{"date":"2017-02-05T14:18:52.000Z","message":"Fix an ancient FIXME."},"6d8ef81445dba7f0a9f7661de2d3c94066c65d01":{"date":"2018-04-06T17:04:04.000Z","message":"Fix to handling of multidimensional arrays."},"6d97046bc52cf31a945ef7d8c873afa67523d6f8":{"date":"2017-12-25T23:22:28.000Z","message":"Refactor Futhark.Compiler module for faster rebuilds."},"6db4824042a01068602575469668f371c97e65c6":{"date":"2017-07-19T09:00:53.000Z","message":"Fix more memory block merging bugs."},"6dbd39dd66737aea5771daa1902cc5c3b581a64b":{"date":"2017-05-04T10:55:23.000Z","message":"Control versioned code with environment variable."},"6e626081969722dba79b54826ec28498ead11075":{"date":"2018-04-04T10:13:42.000Z","message":"futhark-benchmarks: bump"},"6e71a98b5c396c3b5ba97700d53d808b171c9e87":{"date":"2016-09-06T04:24:42.000Z","message":"Fix If uniqueness checking."},"6e87722cab26c727bfeca6a7a20b00697fe7aa9f":{"date":"2018-03-11T22:00:43.000Z","message":"Add --exclude-case option to futhark-bench."},"6e9c9033c249dcac5b6f9c2c1e5b1e1e109ac814":{"date":"2018-04-09T13:29:22.000Z","message":"Fix #526."},"6f346d78860c3adea5b4fd5d9757a5e726a7f596":{"date":"2017-03-27T08:05:38.000Z","message":"Slight simplification of name representation."},"6f7181fc869030886423085f40783d73c577a1e8":{"date":"2018-05-31T18:04:10.000Z","message":"futhark-doc: produce valid links in index.  Oops."},"6f777b711b4c773af8916ab3ecf57cede8f37e4f":{"date":"2018-01-29T08:12:04.000Z","message":"Fix #468, reported by @swilliam."},"6fe51bf3a26ab2fe5d6dc96b7c3d4411ae3f2846":{"date":"2016-09-08T11:43:16.000Z","message":"Tests for short-circuiting boolean operators."},"701894ff526ca9abbf652635a7eac9b866d21187":{"date":"2017-08-08T10:31:36.000Z","message":"Fix memory reuse bug that allowed reuse of too small memory blocks."},"701e73904878914959a1f5bd8d13a7b057cb6a22":{"date":"2016-10-02T09:52:45.000Z","message":"New scan test program."},"701e7da2d22072d083bbd430d4b0864c0fc7e786":{"date":"2018-02-02T14:18:03.000Z","message":"Simplify fallback branches before we turn them into boolean expressions."},"7029c9179113d3e3f9be1a208b211c5cdb354987":{"date":"2017-05-30T14:52:42.000Z","message":"Get rid of FlatGroupSpace."},"702ea2e29fde02c66a097ef201daafa25f1303b9":{"date":"2018-01-08T14:31:24.000Z","message":"Handle in-place lowering into kernels as a special case."},"703f1d1cdcd73c99c8baa137daa636b4998dd0b0":{"date":"2018-05-24T21:16:21.000Z","message":"futhark-doc: avoid breaking across columns on contents page."},"704ac7afba51f11e8f578700ba3310731be84324":{"date":"2018-03-24T22:32:34.000Z","message":"Handle imperfect cases in distributeSingleUnaryStm."},"70b2dbd667575c02fb6a592e4579f6ff28505b2a":{"date":"2018-06-01T22:43:25.000Z","message":"futhark-benchmarks: bump"},"70b78909eaf3de83c7ce5d6effb335160a4e052b":{"date":"2017-04-04T16:52:15.000Z","message":"fixing bugs"},"70b8f1ad039922688f057f0a464367297042fc0c":{"date":"2017-05-05T17:18:33.000Z","message":"Simplify monad."},"70cfde03c52eb5036f136b395335580d4c2ebcc2":{"date":"2018-04-06T20:22:13.000Z","message":"Try to handle local functions more correctly."},"7107f82ebe9898fa5ccd410a2d4cea5a6ecc4a59":{"date":"2018-02-12T08:00:26.000Z","message":"Add reshapes if necessary when rebasing index functions."},"713e13b831a335d8c53f9f5f74c3efa5c3e924a8":{"date":"2016-08-25T10:37:10.000Z","message":"making kernel babysitting more conservative"},"717d8c3f0fda7dfd86348d212f76d1d5a1b8a356":{"date":"2016-09-01T20:45:05.000Z","message":"Compile kernel-constant expressions as #defines."},"71df6c95fdf3eca1d8877cb57531301a6ef532f7":{"date":"2017-05-24T08:35:56.000Z","message":"Try to preserve a consistent style here."},"71e48e4f2070c47d512729e6e76a3c5811e6c254":{"date":"2017-02-18T16:50:43.000Z","message":"Add local functions definitions."},"722afcfa0e9cb7a4f31a0d10b1dbfa4d8761e386":{"date":"2016-09-23T06:43:45.000Z","message":"Add asin and acos functions."},"7253ece38eeb57a39aec6dad737eef46f5bd80b6":{"date":"2018-01-11T07:19:33.000Z","message":"Add possibly-handy Ord instance."},"7257fdaac957ab3f79b1a594dfa2725cf55b24ef":{"date":"2017-05-07T16:18:00.000Z","message":"Fix memory block merging bug demonstrated in if-ip-concat-1.fut."},"727c3a1a11439b58680775e59835a9580657e60b":{"date":"2017-03-14T07:30:41.000Z","message":"Remove unneeded code."},"72b0fc9eabc2ead0915028639a3701ebecdeb858":{"date":"2018-03-17T11:30:13.000Z","message":"Better error message when input file not found."},"72c09f18b4066abdb9e938066483c7960d426757":{"date":"2017-12-19T16:13:07.000Z","message":"Use worst-case parallelism to make version decisions."},"72cf2ff7332037d7b9be1b97dcab57830e40d096":{"date":"2017-03-10T22:52:37.000Z","message":"Fix --pass-option for futhark-test."},"7313b57c110e238f92744c476b076139eec0a744":{"date":"2016-10-21T11:33:42.000Z","message":"Add missing uniqueness type check/test."},"7336844255fbf9bbf7431cdb4e8569353938d41d":{"date":"2016-09-07T10:14:51.000Z","message":"Fix read_bool().  Oops."},"7378393f7831c0f12e29dca22bf24d36f0083b09":{"date":"2016-09-06T05:47:51.000Z","message":"Write consumes its source arrays."},"73921e8582edf1602cef4c27b721d2a777a0889f":{"date":"2017-01-31T16:46:06.000Z","message":"slight mods"},"73969793c438b6232f2988136faeda461443ec38":{"date":"2017-03-02T14:36:36.000Z","message":"new transpose: see #308"},"73c81214eb6427b0844001f296c2590713208f13":{"date":"2017-10-27T10:51:32.000Z","message":"Remove some dead code."},"741c5b7134f27cf5682f01acd83766f6c715c124":{"date":"2017-11-27T21:42:34.000Z","message":"A Show instance for type parameters, because why not."},"745645a0382bccf9ec966670be4e5c09c55ab2d9":{"date":"2017-12-01T22:04:53.000Z","message":"Fix spurious unused-variable warnings."},"74593f2aaf272f4d166975b5e0e7d06ad96dcec9":{"date":"2018-02-04T09:46:02.000Z","message":"Kernel babysitter: track ExpMap into branches, too."},"7477d72e719416e09a85b3289303b28981de699b":{"date":"2017-06-28T17:11:31.000Z","message":"Do not record a memory mapping to itself."},"74926b62cf11c5ed5aea9709503dbedf0bf1f61a":{"date":"2017-10-03T13:38:40.000Z","message":"Handle certain deeply nested segmented reductions."},"7545d2a6374da6059555aee381b74c1e4c1a4fa8":{"date":"2017-01-31T15:43:45.000Z","message":"Remove unneeded fields."},"755e228d45f84ed2898ea773c492dc63a067cd75":{"date":"2017-05-06T08:03:12.000Z","message":"No need to use FreeVarSubsts in MemoryBlockMerging anymore."},"756d8e8a8260f03949c452ab9328f65a80aacada":{"date":"2016-08-16T09:24:27.000Z","message":"Revert \"Always enter branches.\""},"758acfcdd5f7fdd574e054d11844f42152a9e19c":{"date":"2018-05-22T06:19:51.000Z","message":"futhark-doc: even nicer index page."},"75c01bbed2b3413cd389833b85d6195a4d395d54":{"date":"2016-09-24T18:10:22.000Z","message":"Type checking fix."},"75d5159f0c327ead6f323443859fa5b11674bfb8":{"date":"2016-11-14T13:37:26.000Z","message":"Some coalescing fixes.  I hope."},"76068cb99af469359b0e76eb4877a23252eaf829":{"date":"2017-03-27T08:24:57.000Z","message":"Remove unnecessary function alias."},"760a624cea44cf6bde9501f284693bb4a95ca33e":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: improve some naming"},"762db738d6a7b5bb53443c049360458987410852":{"date":"2017-12-10T21:16:57.000Z","message":"Make individual kernel sizes runtime-configurable."},"76371155bb77bf95c672e825e4b95b91bc6aac38":{"date":"2017-12-19T18:51:17.000Z","message":"Refactor intra-group parallelism."},"76654638042cfb746423ab5bd1612c49eacd7957":{"date":"2018-04-16T15:29:54.000Z","message":"extending scatter concat rule to an arbitrary number of concatenated arrays"},"76b56273f95ca0d071de1ad43c74b513596908e6":{"date":"2017-03-26T11:00:20.000Z","message":"Use internaliseDimExp instead of internaliseExp1 where appropriate."},"76d35a8d8992d5af80db29ddbfe369098f705100":{"date":"2017-12-28T13:53:44.000Z","message":"Add --skip-compilation flag to futhark-bench."},"773bcf6744363363ddd30f957ebe6391d158a6af":{"date":"2017-05-12T10:05:42.000Z","message":"Nested scans are parallelised!"},"773d78d5d53619987678c33ff57643fa9a0c07cc":{"date":"2018-05-20T16:40:35.000Z","message":"Also remember false comparison for intra-group parallelism."},"774a2dbd84a7be9a7419b25a7597949df64fe048":{"date":"2016-09-01T12:50:31.000Z","message":"Remove unneeded computeKernelUses parameter."},"774edf47f3cd1af8af74857f5a824230b4b0892e":{"date":"2017-03-21T08:30:51.000Z","message":"Do not launch more workgroups than necessary for the data set."},"77640718c7ea58803d64af528adaf9e3a90d0465":{"date":"2017-08-28T13:24:47.000Z","message":"Nested input reuses."},"7778abd9c354456cdfa7994212b5a80395906efa":{"date":"2018-03-29T10:51:02.000Z","message":"Fix issue with unifying lifted and unlifted type variables."},"777b182d881f949a02834dc8e4c59b91d1db9415":{"date":"2017-12-25T22:28:53.000Z","message":"Remove some unneeded exports."},"77a73a5d322c09a8e7eb9a5b606a72d38eefb28f":{"date":"2017-05-31T10:00:32.000Z","message":"More tweaking of kernel babysitting."},"77b4563722f0f4832a338ec68728b307bf6942ac":{"date":"2017-02-16T08:39:24.000Z","message":"Style guide fix."},"77dc61c4bea4083a2fc2b054eb26cbc81addf082":{"date":"2017-04-13T09:04:55.000Z","message":"Reduce duplication in internaliser."},"77de515ea92c6549ab15d8a05002009fa026b852":{"date":"2018-03-11T18:50:52.000Z","message":"Treat intra-group reduce/scan as redomap/scanomap."},"77fff7064afa0ec439add12f03428e1e7d515b90":{"date":"2017-09-04T20:58:09.000Z","message":"Fix some detection of linear arrays."},"786455bcf71126e4c393fb11e06fa355e0630e0e":{"date":"2016-08-16T09:40:05.000Z","message":"Generate slightly nicer code."},"78ad4c168fc5cd0f4ba59f455856de9bf75322f2":{"date":"2018-01-21T21:46:52.000Z","message":"Restore in-place lowering for kernel bodies, I think."},"78cc6ff9d2825c4ad2d7730200ca747b4cb46e68":{"date":"2017-05-24T11:03:42.000Z","message":"Simplify segmentation."},"78d972d4ab18b45d11b01a04e2692058f9d5a166":{"date":"2016-08-18T10:13:58.000Z","message":"Fix some embarassing simplification rule bugs."},"7936bcdcd7403523267d19b09406ca183e6635a2":{"date":"2017-04-11T15:11:48.000Z","message":"Fix indentation in parser."},"7950830877c01156f068511b3c485fd7297b3c1c":{"date":"2017-02-17T11:06:54.000Z","message":"Remember trailing newline."},"79683db2a94a869b29204ba82d0973ea07f0ca31":{"date":"2017-06-12T20:28:22.000Z","message":"Roll back some module simplifications."},"798c1f24e2f098229d61a4d76c9fef34fc70c3f0":{"date":"2016-09-28T14:50:28.000Z","message":"Rename Binding to Stm."},"79be6a036ff0ef13ca75319892fbef5a141f7ab1":{"date":"2017-10-01T17:05:45.000Z","message":"Make Certificates a proper type."},"79cd845fbb4858834fb2458711f44348d6929684":{"date":"2017-05-23T09:22:36.000Z","message":"Be more liberal when segmenting."},"79e272752239e35cae3d16279e22ca3f47cb389f":{"date":"2017-06-07T14:52:25.000Z","message":"Improve handling of large literal arrays."},"79ffe92857e1a81836ff96feadd000614034e934":{"date":"2018-04-15T10:29:39.000Z","message":"Better type inference for rearrange and rotate."},"7a27bb65f9d22972d2c9c14298a5ee8cf1dd9406":{"date":"2018-03-10T10:04:22.000Z","message":"Support boolean operands to comparison operators."},"7a3561a1255de316f8b32041bcfd63f8177a54ff":{"date":"2018-01-11T18:53:38.000Z","message":"Write fusion pass in a cleaner way."},"7ab1875dfc9b958cd9f1d9ee9fc094fe64d4c1bf":{"date":"2016-09-15T15:47:38.000Z","message":"Sequential binary search."},"7b04d30d80796eda0f5dca5a35195b52ec06e102":{"date":"2016-08-18T14:42:20.000Z","message":"GHC 7.8 fix."},"7b0b9ff3842ddee67efcb6915089fc7eeae1e515":{"date":"2018-05-07T12:46:28.000Z","message":"Avoid naked boolean."},"7b2cbf50d82f13889e7525b6689dd3d5967dd88e":{"date":"2017-01-22T14:22:54.000Z","message":"Move mathematical functions (sin/cos/exp/etc) into modules."},"7b552a223d5feb37f8cc27fb32c66e0511b38ee6":{"date":"2018-04-03T11:30:35.000Z","message":"Fix #514."},"7b5e9a90e74d3e9610ed41a921dae61447c6c5fb":{"date":"2017-10-14T11:21:55.000Z","message":"Implement float bitcasts for Python backend, too."},"7b66eea148f5e62e62f959a2ddb300fa911e6064":{"date":"2018-01-06T15:10:22.000Z","message":"Simplify call graph computation."},"7b6a9ba203d6b1c7973fb90ded7a5c35a4bb513c":{"date":"2017-02-10T21:15:27.000Z","message":"Incorporate parametric module substitutions in the right order."},"7b8c847d19f5e8db227f5b2adc39867f11674345":{"date":"2017-10-01T15:26:59.000Z","message":"Fix a few cert-related bugs in the Python code generator."},"7ba84578454be0666c969503e1f52706d79b4f17":{"date":"2016-08-31T08:19:10.000Z","message":"More robust PrimExp constant folding."},"7bae00a0f7c18453eb856c1891568504e8228168":{"date":"2018-03-27T20:02:50.000Z","message":"Revert \"Fewer reshapes after internalisation.\""},"7bb5263eb521e3574c3843940c36271993fa8709":{"date":"2017-12-18T15:22:32.000Z","message":"Revert \"Put the result of GroupReduce in local memory.\""},"7bc7d3254529886573aadf49733e4ce0173d160a":{"date":"2018-02-22T12:04:38.000Z","message":"adding Lmad representation"},"7bca5e05166dbf0221c1e0395c5d4668ed95cce5":{"date":"2017-05-02T10:34:21.000Z","message":"ImpCode construct should be Write, not Scatter."},"7c1dcea02969eb9545c0259ac1f5c9adcdfd7c2b":{"date":"2016-08-30T15:22:35.000Z","message":"Remove old IntegralCond cruft."},"7c726dd897420c9387b3117f11fa78806b66d715":{"date":"2018-01-08T13:09:19.000Z","message":"Clean up fusion a little."},"7c78e1d579a9b26312acd15d889d99d63d5b1620":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: handle many small segments by segscan"},"7c932aa35c2ab107c03d1135cf1456a1b17305fa":{"date":"2017-02-15T20:32:50.000Z","message":"Fixes to NaN/infinity handling."},"7d04155c74de03fd0220dadaacdafed80a7b2d7a":{"date":"2017-02-05T20:43:53.000Z","message":"Remove commutativity hack from parser."},"7d186340ba29c45bf2d42dd2d9d59f49ceb8033c":{"date":"2018-05-03T09:43:56.000Z","message":"Support non-function operator slices."},"7d25d49d4bc3d3db0130828600a1a394b35eb5ee":{"date":"2016-08-23T10:00:08.000Z","message":"External language support for slicing."},"7d297948fb02d9f7be061e107258b8288a5a3d35":{"date":"2018-03-02T21:38:25.000Z","message":"Fix #483."},"7d5743a59420714787f23f941b0211ef75faa47f":{"date":"2017-07-27T07:19:23.000Z","message":"Add a >=0 range for all array sizes."},"7d8f261e01543f5ec68009b7027b346f63415bee":{"date":"2017-05-23T22:31:58.000Z","message":"Use SMin instead of explicit branch."},"7d9873317f7ffb0151dd73d5b8892818d8ae1e2e":{"date":"2017-03-01T14:36:23.000Z","message":"Add basic records to Futhark.  Also makes tuples 1-indexed."},"7dcb115c8f6c3a626269cbfafea4d41895c7a089":{"date":"2018-04-21T07:27:13.000Z","message":"Fix #538."},"7dd6bcbc837073e29a5fbc6e1037119933c50b58":{"date":"2017-06-22T08:59:44.000Z","message":"Fix kernel extraction bug for duplicate map outputs."},"7e0cbc9bb70197151014f3fdb1c67da494028068":{"date":"2016-09-06T06:44:47.000Z","message":"Remove generalised let-with."},"7e547b0bcc72d589aeb2e84c895083c7b3f766ed":{"date":"2018-01-10T17:19:25.000Z","message":"Refactor renaming a little bit."},"7e6b24cf2db6916c94db3e86df8c4ec2a7d97e4c":{"date":"2017-10-23T14:33:31.000Z","message":"OpenCL: Pick better group size/count on CPUs."},"7ed9b3071cbaa22ab88df2cd35dd223b8fcb87de":{"date":"2018-01-06T20:04:53.000Z","message":"Some fixes to stream_map."},"7ee10a77782528dfacd4860ccb6c271745987f0c":{"date":"2017-04-06T20:16:47.000Z","message":"Slightly better debugging for memory block merging."},"7ef69ee9557feea6bff653664f200ade6c4ced60":{"date":"2018-03-13T20:20:41.000Z","message":"Cease handling type abbreviations in internaliser."},"7fa11e50a905abf7bede8b83c180bce40240c0b6":{"date":"2017-07-26T18:01:47.000Z","message":"Revert \"Add range information for SMax.\""},"7fb9cec07ad4de80c65f7684b24d1f3cb2ab171a":{"date":"2018-01-07T23:05:22.000Z","message":"Remove a few redundant imports."},"7fbeaa7fefbe77fbf45fc11f7a51f2b32b936d45":{"date":"2017-10-21T09:03:25.000Z","message":"futhark-doc now generates valid HTML."},"7fdbec3f3b09fc525b33f3d4bb069ec12e654a77":{"date":"2016-09-13T14:43:18.000Z","message":"Fix MD5 test."},"7fe4f9fd4afc8657e87c28d1bbdcf70a54562d38":{"date":"2016-08-25T13:30:18.000Z","message":"hlint cleanup."},"8006090d6ff040d062747e74bdc515b4859a9da5":{"date":"2018-01-04T09:03:49.000Z","message":"Use generated Eq instances for types."},"8012ef1816db0bf64d5030d45d6ce49296330318":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: make segscan version handle multi nedsted maps"},"8029953fcaa892adff6298a2370e6c442564a16d":{"date":"2017-06-28T21:12:41.000Z","message":"Oops, cleanup."},"8036ef284c0547e0c5f28dd472d7fecfd1345520":{"date":"2018-05-12T07:14:12.000Z","message":"Oops; this should not be here."},"80b1454f21b0c67eb0df2ca1b5a0b801d6ff9e59":{"date":"2017-05-31T10:02:23.000Z","message":"Please do not leave dead code in the compiler."},"8108bf39281dfd6a53eb21fd2feae4de0c711710":{"date":"2017-03-12T09:38:11.000Z","message":"Add IsValue instances for unsigned words."},"8141d94b75aa90b51716d231726af3ea79846014":{"date":"2016-10-23T08:50:01.000Z","message":"Some haddock fixes."},"8142864d38df40085899b96427fab5f28eb52fc9":{"date":"2018-04-01T19:51:40.000Z","message":"futhark-benchmarks: bump"},"81588eae1ddb2c966f001a9d7ed1fdaca6768608":{"date":"2017-05-04T14:22:47.000Z","message":"Simplify Bindable/MonadBinder methods slightly."},"816766b667231a117f2525da572b7ec397559ddd":{"date":"2016-10-22T16:12:38.000Z","message":"Remove unused variable."},"8178be31e03b086cc6b01f1d1ce986e9790cc8b0":{"date":"2017-04-21T09:08:34.000Z","message":"Check for duplicate type parameters."},"81a2ec311ebda60e8360c67ab30078386d3b7f82":{"date":"2017-07-14T06:44:13.000Z","message":"Minor documentation fix"},"81d4f10a12db3832579594c9476f6880ac772941":{"date":"2016-12-03T01:23:49.000Z","message":"minor"},"828b1ebe52e9dba19adb3ee2c41e4adb8b0fb733":{"date":"2017-03-02T10:13:44.000Z","message":"Operator parsing fixes."},"82d4fb3321e4dc4e22c382c0b369436ca62107d1":{"date":"2017-05-09T01:52:16.000Z","message":"lala"},"82e314706ed615cb8adf34108d5dde6b242eea0b":{"date":"2016-10-14T11:56:13.000Z","message":"Fiddle with in-place memory of do-loops."},"82ee7863c16abbf22bb140c13ced1c3834e2f545":{"date":"2016-09-22T07:00:05.000Z","message":"Try a heuristic for avoiding unnecessary coalescing transpositions."},"82f32d1d4172260fc32e1a137a9ffd22825939b7":{"date":"2018-05-12T15:53:45.000Z","message":"Better documentation for sorting."},"830124d7d46923212c3b1e6c22c44b1f9ef8c188":{"date":"2017-08-22T12:30:53.000Z","message":"Fix Python generation problem discovered in 52ed7d965602875fcbdf0616646fe4aae6b6284e."},"8323e71bb362854c883e72df9b6d2f4c6858c2e7":{"date":"2017-06-06T09:44:46.000Z","message":"Fix binary type names."},"832d0a69968f3fd79f7dbf724c48146a8664d0a7":{"date":"2018-06-02T08:42:33.000Z","message":"Tighten documentation of unsafe."},"835abc3d53290ea080eb65f367cafc8b9785eff8":{"date":"2018-01-24T09:04:09.000Z","message":"Another tweak to allocator."},"83630194db57553687abfb1f80009fd5c42af883":{"date":"2016-11-23T14:00:00.000Z","message":"Fix #110."},"839a09130c5e3714e27ad05425e948bfc2ade7df":{"date":"2017-07-01T21:21:05.000Z","message":"Add local open syntax."},"839efeb131c2b249bb0d09a3aafcd94ef237f33b":{"date":"2017-02-17T14:10:32.000Z","message":"Revert \"segredomap: In two-phase segreduce, use empty kernelinput in second\""},"83cc31827a9ded838b1cb0f36dffa06da536606d":{"date":"2018-01-15T10:30:59.000Z","message":"Add some more utility instances for localScope."},"83e082775f316def5af7f8640909dc54835740ff":{"date":"2018-04-09T12:32:49.000Z","message":"Retain original function names in internaliser."},"83e2824104130aacc87864dca3baace8753da2bf":{"date":"2017-09-08T06:04:28.000Z","message":"Support hexadecimal floats in Python reader"},"83f44f34af5b4c59b9d0ed5ab9dbd0f01fd0ae0e":{"date":"2017-06-09T12:10:46.000Z","message":"Simplify dividing zero."},"840a60d26b7228a83ac16b5a6d05887f533b982c":{"date":"2017-10-26T13:22:38.000Z","message":"Fix type-checking and handling of scatter."},"841ecdfb5d2de5071e38363487dcebb1daf59001":{"date":"2018-03-23T23:01:48.000Z","message":"Turn the streaming SOACs into library functions."},"84203033422e3a4c2b40392b1cda7fdd1818cf88":{"date":"2017-01-31T16:09:49.000Z","message":"Fixes to module type matching of type abbrevs."},"842695e9af838198d9cf45681f68c71b5a0704d1":{"date":"2017-04-30T09:53:15.000Z","message":"Correct handling of empty arrays in textual Python value reader."},"84d0d620949c0216f71a9b7dd1bc4da2c4c37593":{"date":"2016-09-06T08:43:00.000Z","message":"Document some more things."},"84dd9fdc541de2d8f5f6519345a6feee70fde98d":{"date":"2016-08-23T10:00:08.000Z","message":"Begin work on general array slicing."},"84eb18fe6cf617758b145640f9b02820252b8835":{"date":"2016-11-15T09:07:58.000Z","message":"Reduce duplication."},"8529c5f666b51e2a76bbf93c8b60aa3b383cb7e9":{"date":"2017-12-25T22:23:43.000Z","message":"Remove legacy dead code eliminator."},"856347dc2b97fb950330595939628d67a58f4349":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: Choose between large and small kernel in second step"},"856a612749b01c8d0310fa5820d0722ce40aedba":{"date":"2017-10-14T10:39:27.000Z","message":"Add bit operations to numeric module types."},"856f68875165978976ef7b4be4515ccc59474e6b":{"date":"2017-11-12T18:17:39.000Z","message":"Remove superfluous parser crud."},"85dc73e24661f5b3d7d1ceadf8499baa69a266db":{"date":"2018-04-25T08:42:20.000Z","message":"Fix #541."},"86051f02c559891ef3ef465616b7de1f4a9e6edc":{"date":"2017-03-19T14:18:19.000Z","message":"Do not copy non-arrays."},"862198a3a1ee2d857c632152205abcfabf465c07":{"date":"2016-11-29T16:58:15.000Z","message":"Give SplitSpace a range."},"863dd63153c5e1e7e7d5c0b00228f497de8a521c":{"date":"2016-09-06T07:42:08.000Z","message":"Fix #225."},"864bef57f7f0733b00268d42d4851104a9e0339d":{"date":"2017-06-08T14:20:41.000Z","message":"Fix static arrays containing infinity values."},"86a0f457dfc85690e66fb5ce2f8f32fd86ee140c":{"date":"2017-12-13T14:34:04.000Z","message":"Intra-group parallelism now uses a computed group size."},"86d9e3f038c93cb128018930869b484dbeb2d0c1":{"date":"2017-05-09T17:06:18.000Z","message":"I must be doing something wrong because all benchmarks seem to validate with memory block merging on, including all the ones from tests and also the ones that use to fail such as nbody, option pricing, hotspot, srad, myocyte and life"},"86e761f293795a312ef504257b9bc2c294a7e54d":{"date":"2016-08-25T08:59:08.000Z","message":"Shrink the memory usage of this one."},"86f69db34c319cd844fb54b38721127f5dbc2419":{"date":"2018-01-22T14:39:49.000Z","message":"More barrier hacks."},"86f97db64eb5db7ebf9e99b64130df4627db6e33":{"date":"2018-03-25T20:48:06.000Z","message":"futhark-doc: fix printing of module specs."},"878612c3236ec40218f7deb2421bbb4ecb0c6714":{"date":"2017-04-25T19:59:29.000Z","message":"Add parametric polymorphism to Futhark."},"879a908651444ccc402539b13d29502bf19b431c":{"date":"2018-04-15T07:35:27.000Z","message":"Entry points need no longer be syntactically first-order."},"879faea0251162b94b06f80adbad20a9ad520059":{"date":"2017-05-18T15:59:18.000Z","message":"Remove unnecessary instance."},"87ad5f48172743fbf1fdf9510e8d106cfc353071":{"date":"2018-01-03T15:39:40.000Z","message":"Simplify type representation in type checker."},"87dada5c52c8d1cb7b1a6c916c0f27f83b9279a1":{"date":"2018-03-07T19:01:27.000Z","message":"Print annotations in prettyprinter."},"87e3302db52560ccf8813d1ba4030d810b3765a9":{"date":"2017-02-27T06:52:28.000Z","message":"A functor is being generated here."},"88115c63333ddbbdcfe557d107d1d5b64e02b9d1":{"date":"2017-04-15T21:14:35.000Z","message":"Shrink internal interfaces in type checker."},"8855b9a3957e2b64ea95826852491c6c5acd74dc":{"date":"2017-05-29T18:14:02.000Z","message":"Tweak kernel babysitting some more to handle large-segment kernels."},"886c10b9dbfe2bf5c782ab5eac21c96da55fcc71":{"date":"2017-12-16T15:47:08.000Z","message":"This parameter is unused here."},"8870a0f3911e1b628008df66c3e34e9c32bacd23":{"date":"2017-12-05T15:51:44.000Z","message":"Comprehensible error when device does not support double-precision floats"},"888dbf2bc096c506f35ab7b90168fb8c9787497c":{"date":"2018-05-02T10:21:00.000Z","message":"Cut down on the map-consing a bit."},"889e600a811722b7fd5bd315d902e71001c68220":{"date":"2016-09-07T07:21:28.000Z","message":"liftIdentityMapping fix."},"88a00f46b11d46df481293574e64e01c5156ff05":{"date":"2017-06-21T20:42:45.000Z","message":"Fix for in-order reduction streams."},"88ce510bb2cc4acb5d634a8fb2a098ddab5631b3":{"date":"2018-02-23T10:27:55.000Z","message":"@coancea this breaks Travis."},"8910f5431647818413ba273e4d3339cd3a686bee":{"date":"2018-03-04T20:48:33.000Z","message":"Infix operators can now be defined in prefix notation."},"891a31d7c5864394d046384e6efd83489cb323d2":{"date":"2017-05-24T09:21:32.000Z","message":"Remove debug prints."},"893ea1c9931ad6c0ff403e529c8227e1d995e1f9":{"date":"2016-09-26T21:19:25.000Z","message":"Document SetDefaultSpace better."},"89476d6f2c6c3d1fb8eebdad4200320a1e4e06de":{"date":"2018-01-15T08:12:35.000Z","message":"Add Traversable instance for Param."},"896f7ba53173ddf23c24411277fb16d6ce41962d":{"date":"2018-03-23T13:55:08.000Z","message":"Prettyprint return type for local functions."},"899093a33a7f0be4ac2f0e84b2c4f50dde95e266":{"date":"2018-03-28T20:41:35.000Z","message":"More Python fixes."},"899f79f42d3feeb095a57b2830318402fa1a7756":{"date":"2018-04-15T21:33:13.000Z","message":"futhark-benchmarks: bump"},"89b6d87bca1f1e094f91dc20af85a891fdd1ad67":{"date":"2016-11-12T20:12:30.000Z","message":"ExpCompiler simplification."},"89ebee8d5e8ccc404c43497fcb8a6df86c3dcda2":{"date":"2018-01-17T22:24:55.000Z","message":"Fix hlint issues."},"89f3a4118573c28b42d9818477490a63fb0bf56f":{"date":"2017-06-25T21:21:01.000Z","message":"Add Traversable instance for index functions."},"8a1ed539f549998cc9ff9201401525474c7fa763":{"date":"2018-03-03T12:20:07.000Z","message":"Iota and Replicate are safe, I suppose."},"8a2200a6f27cf8f2564675a3cbd41e391eea94fe":{"date":"2017-03-16T11:46:41.000Z","message":"Fix rare race conditions in scan kernels."},"8a2cc3e0e0b46a2136c1b7f21c2e8eeae19a7dd4":{"date":"2017-05-18T12:31:20.000Z","message":"Do not default to using memory block merging."},"8a2f9381c1b5d6e188922dc88605e07a9d90a588":{"date":"2016-09-14T08:37:02.000Z","message":"Fix concatenation of empty arrays in interpreter."},"8a6a2936cd6b86b4dc37b19c54171c0548b3d605":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: use SQuot and SRem"},"8a8276b3388354d31e78c83d18e54e4c2cc5f1be":{"date":"2018-04-05T11:57:15.000Z","message":"Fix #521."},"8ab8c51dc7de5ab0396c646e63a28a862be3d365":{"date":"2016-08-26T21:48:29.000Z","message":"Fix typo."},"8ad6c965425821688ac3783294b065740083d534":{"date":"2016-10-17T13:51:42.000Z","message":"Slow Fourier Transform test."},"8b5671bb3a222b459bfbfb09e00f67a62082be9b":{"date":"2017-02-17T14:10:32.000Z","message":"segredomap: groupPerSegment improvement + addKernelInputStms"},"8b99fceba6c64f1b788237413282a60ddc64a492":{"date":"2017-07-23T14:27:23.000Z","message":"Move 'import' from ModExp to ModExpAtom."},"8ba8f93b65c09e3b47dfbd53fe7547f4057ece9a":{"date":"2017-06-25T18:44:53.000Z","message":"Bring in-place lowering back."},"8bcc49c3a9046b17a75e88b1f5638f77a6a7879c":{"date":"2017-05-18T12:23:21.000Z","message":"Also hide intra-group parallelism behind a flag for now."},"8c529051278379e9b4846938164fe85fdfb82b80":{"date":"2018-04-09T12:32:27.000Z","message":"Better Eq instance for TypeBase."},"8c598b8a38610ada0595f86cac3bff0d6b9fb260":{"date":"2017-03-18T10:52:25.000Z","message":"Better error case printing for tests."},"8cb06b65bc32e41ada596b75e4e877fb4ada63fe":{"date":"2018-04-26T14:42:56.000Z","message":"Add overloaded numeric literals."},"8d5d6b3c2c2267d3503a5295b2dc64780b65de78":{"date":"2017-05-04T20:18:09.000Z","message":"advanced a bit but still incorrect"},"8d74e011a85739685d46ed5856815ed1e628651f":{"date":"2018-02-11T21:20:18.000Z","message":"Make generated C programs panic when passed garbage options."},"8d7a225930688cecbda402e0ec4bf94a36701fcd":{"date":"2017-07-26T07:26:54.000Z","message":"Print unsigned arrays correctly in Python backend."},"8dc4f98d63a13caa745e03c15856fe2f4fa8949a":{"date":"2017-09-01T21:11:02.000Z","message":"Unify MapLike and RedLike streams into Parallel streams."},"8e3b72bcf26b992546d794b10b96d05ed01f0a73":{"date":"2017-07-06T11:32:10.000Z","message":"Better error message for missing imports."},"8e4d8451eb5ba1dc30f311c20a37d013bd46d19d":{"date":"2017-04-26T14:23:23.000Z","message":"Change prettyprinting of AnyDims."},"8efaaca8e05a388d828cb98ee2ddca0660915754":{"date":"2018-01-23T10:55:41.000Z","message":"Implement a GPU memory manager."},"8f0d63d04e9aea036fb924dde0c9958ad2bcfa88":{"date":"2018-05-30T17:34:55.000Z","message":"This type error changed."},"8f1c11dd79aee3c4ca56e193f64ced2987f873ae":{"date":"2018-03-11T18:50:39.000Z","message":"Ignore zero-size parallelism."},"8f2841ccde0df3d798a16944ae047f8140526abc":{"date":"2017-08-18T19:08:16.000Z","message":"adding a comment"},"8f80916d6770de316aff3d1e0c846edecf750909":{"date":"2017-11-24T20:36:48.000Z","message":"Another handy instance."},"8fe675014540934db4312668f30393162eb9e6c8":{"date":"2016-09-02T12:03:41.000Z","message":"Constant case for primExpFromExp."},"8fe76157147f6b783becbc1d05bd13f4d258d430":{"date":"2018-06-02T12:05:48.000Z","message":"More consistent error message format."},"8fecb38b77cbd637465fd0f946db576c01ca02c2":{"date":"2017-09-11T18:55:42.000Z","message":"Improve the memory block merging documentation."},"8ff567a95176f77ac661edf273b0f86adb551435":{"date":"2017-12-21T21:39:56.000Z","message":"Compute alloc size similarly for hinted patterns."},"903746ffbcd5e891618e89fac90d9332c282deb1":{"date":"2017-10-17T12:53:26.000Z","message":"Do not throw away branch sorts."},"90573696630684ed80b6f624cd0c036ae6543d43":{"date":"2018-05-30T15:18:49.000Z","message":"futhark-doc: put generated documentation in subdirectory."},"90749564168fa74615b273dc7be9fe1df2899702":{"date":"2017-07-07T09:43:20.000Z","message":"Fix imports on Windows."},"909f926bb12d82f3a382d0b4ca911acc1af4b1ed":{"date":"2016-10-19T16:21:17.000Z","message":"Remove unnecessary distinction."},"90ac150bf8f6c5964a11528363f68ddcc380dd2a":{"date":"2018-05-25T09:44:46.000Z","message":"Fix typo."},"90c34038c1cb376edfb458dcbc7521d94c1bb102":{"date":"2018-04-03T18:37:12.000Z","message":"Fix #502."},"90c58eaf0726be4ca595ea42daa177d90bfd3d4a":{"date":"2018-03-25T18:45:33.000Z","message":"Fix O(n**2) behaviour in type checker."},"90d887b78b60fcb7b65e6f64cd8d71ebd02fde53":{"date":"2017-03-26T10:21:56.000Z","message":"Fuse iotas of varied types with group streams."},"90e0747774458dd57437e6065f00fa26aa944874":{"date":"2016-10-24T19:54:12.000Z","message":"Versioned code should still support tiling."},"90e8f656bec55da09792b0ec9d2a830e4e98648d":{"date":"2016-10-19T16:21:23.000Z","message":"Remove unused binding."},"9142f57c47e1936091bd1390a61766563441dbc6":{"date":"2017-05-24T10:15:22.000Z","message":"Nicer indexes in large segmented kernel."},"916062088c8bdfcb0dc572c8da07d6b3446f10d1":{"date":"2017-07-05T14:23:02.000Z","message":"Support futhark-doc comments for module bindings."},"9171d4fd804c853490444f1091960b39385e686d":{"date":"2016-10-15T11:39:25.000Z","message":"New scan representation.  Fixes #103."},"91e0a6e1e006a5e9be539d0d9d10f44c74547c23":{"date":"2017-03-25T17:21:32.000Z","message":"Better handling of non-int32s in algebraic simplification."},"922434f190635c1d75a6c3470ff9503183ab653f":{"date":"2018-01-30T10:55:38.000Z","message":"Better error reporting for existential allocations."},"924c66bea1b97aedcf8e8d7836e7c6ebec29ecf4":{"date":"2017-04-15T09:40:19.000Z","message":"Remove unnecessary import."},"92af681e5b75d85c35dd15c8e48087a213efcc1c":{"date":"2017-07-20T12:02:23.000Z","message":"Somewhat handle kernels in AllocHoisting."},"9312d43f0768d81ee78cb3c218666e8c2fead3a7":{"date":"2016-08-28T13:37:24.000Z","message":"Make some more constructs function-like."},"931d810f7340e6c51ab2f7b59e06156c3e096c51":{"date":"2017-09-25T14:21:55.000Z","message":"Remove empty dimension removal from memory block merging."},"9344d136c660fff6d3427c60804d75eceed6d63a":{"date":"2018-04-12T21:45:34.000Z","message":"futhark-benchmarks: bump"},"937d8c3938c9ac7e3708ccea4deeff1269f8de1c":{"date":"2016-08-23T10:00:08.000Z","message":"More extreme data sets for slicing."},"938f487dc6460dfac19f1ad98bdd153df3ec6e14":{"date":"2017-03-12T09:19:36.000Z","message":"Fix #319."},"93a6cbb1221b576e93ae6e710a7f2c47f912e27e":{"date":"2018-03-29T07:34:48.000Z","message":"Even better source locations when checking function arguments."},"93d7ea7c66de34aa74de9b2dc4fcc0e3d82a40ca":{"date":"2018-05-06T22:39:55.000Z","message":"Better FFT documentation."},"93d87a78ac3ac5007395b6dcd8e0391f469392f9":{"date":"2016-08-25T15:36:32.000Z","message":"Slightly less memory usage for this test."},"93df68522a2a256ccc55b04840ef9911e66548a6":{"date":"2018-05-11T07:14:39.000Z","message":"Remove unnecessary Hashable instances."},"94002d25b31307522009718ea6e6b188c76671bc":{"date":"2016-10-12T16:39:45.000Z","message":"No need to export the constructors."},"9424a98686554d357e5caa5e12b863a8be0b7166":{"date":"2017-10-14T08:26:10.000Z","message":"Do not use internal names in type checker error messages."},"943748b06137d3cba94e874fa641ba32dc2db1fe":{"date":"2017-11-24T22:20:15.000Z","message":"A few more type aliases."},"94674b965e26cf95b7c0e6cd66e70a8f8125bc5b":{"date":"2017-05-08T12:43:55.000Z","message":"[MBM] Use the original shape."},"947410f091eb883b0fd7e8105faf0e96876a366a":{"date":"2017-04-15T11:12:01.000Z","message":"Significant fixes to type internalisation."},"94d1abfb734eb9e9e6f74898362d5be7743390bb":{"date":"2017-09-27T19:10:14.000Z","message":"Add -I/--import option to all compiler executables."},"94e08714eadebc83c2d5f51797d82a238c7d3eb7":{"date":"2018-05-23T20:37:46.000Z","message":"futhark-doc: significantly improve index."},"9506da8985264738d8cd2d7ab1dda9e4e9ed4783":{"date":"2017-11-13T15:55:48.000Z","message":"Simplify the record system."},"9522a91722f168f60d3c5f5f95333a4cc303b6b8":{"date":"2016-09-30T14:35:44.000Z","message":"Reshape now accepts different types of integers."},"9562b1e3d65fe8a84795a12dba13f4b921ac5d74":{"date":"2017-07-27T07:21:33.000Z","message":"Better sanity checking for ranges."},"959c7d7f38f045c64f487d2d95c062370dfe323b":{"date":"2016-10-23T14:25:16.000Z","message":"Make RuleBook a proper type."},"959fe14185688c96bae9e181e0c7690350aa661a":{"date":"2017-09-05T21:42:20.000Z","message":"Add currying of tuple projection."},"95c1d86d204316004b95ea3f5c50e83284366ec0":{"date":"2018-01-11T19:44:33.000Z","message":"Remove some unused definitions and imports."},"96a634a6230983851e99b0eecc0b888caaf4232a":{"date":"2017-01-25T20:40:34.000Z","message":"Local IDs are also thread-specific."},"96b9416d5d62d8298a7e871d09d16e9c3332f67d":{"date":"2017-10-29T09:22:50.000Z","message":"Use eIf here."},"96dcc69b9a1f7d45ca17b1ccc3dc520dc431858f":{"date":"2018-02-12T10:21:48.000Z","message":"Another tweak to index functions."},"9770ca861c0aeb03040eb0fa940fcc8ca94bf5fe":{"date":"2016-09-12T09:30:22.000Z","message":"Further simplifications in type checker."},"97a030992e750ada3f930446491b078b086505fe":{"date":"2017-02-01T17:25:58.000Z","message":"Do not tile non-prim arrays."},"97a893e2035ea05feb310e77e8211c27e8d1a534":{"date":"2017-06-08T09:34:17.000Z","message":"More efficient handling of large array literals in code generator."},"97c175a756a968169dc667be93b6d4cb81cc146f":{"date":"2017-05-05T16:56:35.000Z","message":"Fix memory block merging bug.  All tests now pass."},"97c4ce5e56ae5f846cd939f84cb03c64bd524a86":{"date":"2016-10-26T20:14:58.000Z","message":"Disable this until I can figure out what is going on."},"97f12381b9edcda82e72a006cf46e162647ccf85":{"date":"2017-09-29T22:26:00.000Z","message":"Fix #408."},"97fddb34e990f02cdb1942909b10e235b35ae141":{"date":"2017-03-14T07:48:51.000Z","message":"Silence Numpy warnings in executables."},"981146f89917f481f3e7103ff428146ad53dc2b7":{"date":"2016-09-13T08:26:26.000Z","message":"Some more Rosetta code implementations."},"98c8573e757aa194de35ac039c11c356e999f1a8":{"date":"2016-10-13T06:40:14.000Z","message":"-V is not verbose anymore."},"99194f45205df5b4e81d43cc26c0f825ed6eea53":{"date":"2018-05-13T08:38:23.000Z","message":"futhark-doc: correct printing of record types."},"991c89beafd7a67c1e0ea0e52e6523894496cfea":{"date":"2018-03-28T08:28:27.000Z","message":"Fewer reshapes after internalisation, directors cut."},"9937dbb2ff66deeac430436aa44997bef8b7a84b":{"date":"2017-04-18T12:33:10.000Z","message":"Fix to exotic cases of type internalisation."},"99535703c7b038e80cfbb1e5bbc5365afa807ac9":{"date":"2017-10-13T16:26:30.000Z","message":"Add -v/--verbose option to futhark-doc."},"99aee7c87e47c6c663945d523d7501bdcb3b8e03":{"date":"2017-02-12T09:13:28.000Z","message":"Abstract arrays are not permitted as entry point types."},"99e6c4260b9ecfa117943f863572fdaa16f655a8":{"date":"2017-09-03T12:49:51.000Z","message":"Memory block merging: Create a program overview debug printer."},"9a0aeb338d1ce5daf021370b39a8abacbdfd25a6":{"date":"2017-05-15T10:54:00.000Z","message":"Slightly refactor how testing pipelines are handled."},"9a2265553936c096abf3926d164c99be3a272a54":{"date":"2017-02-02T13:04:38.000Z","message":"Python never has debug prints, for now."},"9a4792a469cfacd09245ccd64f09204a4491faf3":{"date":"2017-10-10T21:08:48.000Z","message":"Remove some type-checker gunk related to now-removed implicit size parameters."},"9a48d6c68c1b3a5eeb9be07ddbacf8bb224e79e7":{"date":"2017-09-10T13:18:02.000Z","message":"Fix last-memory-use-in-body-result code."},"9a64d16108105b63d57fd63551bbc06769011519":{"date":"2018-05-21T16:36:32.000Z","message":"Fix typo."},"9a65e595973c4127f8301b90a3e14d22355985b9":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: one launch as many groups as needed"},"9a6761647bd25af023352743f2fd063c086295fe":{"date":"2016-11-22T13:03:23.000Z","message":"Remove dead write outputs."},"9a748a095e3a02aa4777ec0dee77ac297f72ed2d":{"date":"2017-12-12T18:36:01.000Z","message":"Fixes to intra-group parallelism."},"9a7541df4363e154efe7b77fe15a9811b800e2c6":{"date":"2016-10-16T21:58:16.000Z","message":"Ensure OpenCL programs always have at least one kernel."},"9a89e639e60ccc30e35a773a1dc798a8f909490b":{"date":"2016-10-20T15:35:16.000Z","message":"Add --gpu and --cpu options to futhark(1)."},"9a8d87759290db13064a324937e101b0dec39522":{"date":"2018-01-26T10:18:00.000Z","message":"Fix a concat-index simplification for the multidimensional case."},"9a9322560c791f4d77f5cad97525f0af67acb985":{"date":"2018-01-05T17:53:18.000Z","message":"The result of an in-place update has no aliases."},"9aafe1891b8f9f89ffaaba0479671b54e7acaf7e":{"date":"2016-10-12T15:16:57.000Z","message":"Get rid of Offset index function - now done with slice."},"9b4a5e336e6b37a1b34a19b5b4968c3c4cd95888":{"date":"2018-06-01T22:14:56.000Z","message":"Better prettyprinting of array indexes."},"9b579ff9f448c471f9397efd08764d2a96a77223":{"date":"2018-05-07T07:35:39.000Z","message":"More alignment of modules."},"9b985c0272f3ad60d5f6ec871ea738f187277e7a":{"date":"2016-10-23T14:01:03.000Z","message":"Only apply unExistentialiseMemory inside kernels."},"9bbbaf057c160011514fd7b419f49273df4f382b":{"date":"2017-12-25T20:47:21.000Z","message":"Compatibility with older GHCs."},"9bd316977dca5986f36992495eb8732cc8ea308f":{"date":"2016-08-28T16:38:07.000Z","message":"Simplify zip syntax."},"9bdc3544a1c6de19e56d771e3db7fa170d80dead":{"date":"2017-12-08T10:21:51.000Z","message":"Parallelise branches that return arrays."},"9c256918336eefa7943f97fc993d0054486a7efa":{"date":"2018-06-02T09:47:49.000Z","message":"Add 'assert' construct."},"9c9abef57948b7d35c8370c0506dab47ae8b1a27":{"date":"2017-05-04T14:57:48.000Z","message":"An array is not a ScalExp, even if we know its bounds accurately."},"9cc19ab80722933c8097b1cb22a74a9a936d75a3":{"date":"2017-03-09T00:03:42.000Z","message":"segredomap: Improve documentation and naming"},"9cc679fe2c54e4604b7586893bfbef3e8463ab73":{"date":"2017-05-31T13:05:24.000Z","message":"Slightly more hackery on intra-group parallelism."},"9ccb68a7bb13bbbe2fd8c1393153a0866d78816e":{"date":"2017-03-17T14:49:50.000Z","message":"Speed up inlining some more."},"9ccdae577508850e69956e4b3990abcf654f173a":{"date":"2018-01-15T16:35:10.000Z","message":"Remove superfluous parts of memory expansion."},"9d5e2906416a29bd35d37dd5f4c7742a39f9bf83":{"date":"2016-09-15T09:41:04.000Z","message":"Newer snapshot."},"9d85f46b4e71abb16fb96e28127411dddd68ff43":{"date":"2017-07-23T15:12:21.000Z","message":"Make 'open' support only a single module expression."},"9d99dfaa32c2b9a2ddd54e12f1bc3dc398096497":{"date":"2018-01-11T08:59:38.000Z","message":"Remove unused module."},"9da35f4c104a2533cd60aaaca9ed235aafebbed2":{"date":"2017-02-15T21:30:19.000Z","message":"Python support for NaNs and infinities."},"9da945e87fefb306dbf5803d758465b6ad014655":{"date":"2017-05-06T16:29:09.000Z","message":"Divide the tokens in the lexer."},"9dac9d5fff1e5ad276355430bbad6416c27e2c60":{"date":"2016-08-29T09:13:39.000Z","message":"Remove unnecessary ins."},"9e0a0b6c2b7fe3782b7244ec44ae32b354a8ebdd":{"date":"2017-08-01T19:11:43.000Z","message":"Somewhat fix kernel variable hoisting bug."},"9e0e4c86930e7aa7fb85c566249ea435d83539f2":{"date":"2018-01-21T15:37:22.000Z","message":"Complain about negative allocations early."},"9e130371af6ce124d7e34f6bf0e4102ff101b53a":{"date":"2018-03-08T06:16:33.000Z","message":"hlint police."},"9e1cd215f8c2bbcfc9610c5025e9ce68399c216b":{"date":"2017-05-08T13:55:54.000Z","message":"Clean up."},"9e27e32ec159bea9e517f658e380b3b552684408":{"date":"2017-09-01T06:23:00.000Z","message":"Fix #391."},"9e2a79856fd07fdad91113c9eb10566193b74586":{"date":"2017-06-28T20:20:34.000Z","message":"Also recurse into sub-bodies in regalloc."},"9e36bc08b3ed44bb5c437843ed1961b6f7fe6e53":{"date":"2018-01-23T20:09:09.000Z","message":"Fix to nonstandard space handling in memory allocator."},"9e9bd6bfc0b675b8ae303fac2d5eb1c547696bd7":{"date":"2017-02-20T12:49:46.000Z","message":"Haddock fix."},"9e9f3b91db7ac161e5985ee8e6104c7eb05d24f9":{"date":"2017-03-28T13:16:49.000Z","message":"Make Opaque sliiiiightly less opaque."},"9ec010c12368caad14fd3f21d0c9df533a880197":{"date":"2016-08-19T09:21:04.000Z","message":"Add active flag to Combine for slightly nicer code."},"9ee5e65ae2892ce1d8c3c861440e0ec72888bb90":{"date":"2017-12-25T22:42:16.000Z","message":"Shrink threshold for which scalexps to simplify."},"9ef1d57813c23b20e424eaec3f64ce9814240532":{"date":"2017-10-28T14:43:35.000Z","message":"Simplify RetType design."},"9f54b1dbca03085f28e6ef99bd82d9631d51ec43":{"date":"2017-10-24T14:18:59.000Z","message":"Do not interchange while-loops."},"9f7151c4da1533e28c19b9b20628ebb5c2e73f7a":{"date":"2018-04-07T06:43:45.000Z","message":"Generate only non-dead functions from monomorphiser."},"9f95348c01c8323230a7a5473fd6fd1e0fe4eaac":{"date":"2017-10-24T14:13:54.000Z","message":"Remove the built-in 'shape' function."},"9f9eac6627a153d560f67519d7b3a0e6d3fcfbef":{"date":"2017-07-19T14:44:26.000Z","message":"Correct first use hack assumption."},"9fc4b98b0c2dc2e9c431f463ce97e723cfb40e2b":{"date":"2018-05-12T15:42:41.000Z","message":"Do not ignore shapes when type-checking loop bodies."},"9fe96e9978e35a7e0402492b7d1f6685bd7cbdac":{"date":"2018-04-06T21:02:21.000Z","message":"futhark-benchmarks: bump"},"9ffcab97d13099e473b56a493b8538e0161e9a3e":{"date":"2017-06-29T10:41:29.000Z","message":"Regalloc cleanup."},"a025af72eaab22bd38452ad26d50dd3fa72fd8c8":{"date":"2017-11-22T15:40:59.000Z","message":"Some simplification."},"a0282bb37a1709e59dd920438e0193f8c57d9bc1":{"date":"2016-09-23T05:28:31.000Z","message":"Further fiddling with restraints on coalescing transposes."},"a036ab2e3da8f4771f25c644b10a8cb847405b05":{"date":"2016-10-18T09:59:25.000Z","message":"Oops, still need this case."},"a04da13936d13f68f6a6b7a8f5b6d70670f927bc":{"date":"2018-04-10T09:22:47.000Z","message":"Simplify pattern checking."},"a08a04229562f290b6870b7eb876610228929a6a":{"date":"2016-09-13T14:02:17.000Z","message":"Add MD5 Rosetta Code example."},"a0a5b9ae11d80291c1aae15dbc28dffcacaa3b51":{"date":"2017-06-16T09:56:15.000Z","message":"Adjust the compiler passes."},"a0eac5b6ef2e87a344218b720f65e8e4434ad0b7":{"date":"2018-02-03T09:30:52.000Z","message":"Only use one type of PrimExps in ImpGen."},"a131d5e0741d3ba15885f48f9b52cecafec14ead":{"date":"2016-09-20T04:59:56.000Z","message":"Make functions and variables inhabit same name space."},"a1816c80d5225999b6d6a1a41462d1be79eb8e41":{"date":"2018-03-26T19:27:54.000Z","message":"Remove unnecessary lexer tokens."},"a23894a556178bc2e5e4ba24bb9fb5ff38f9c5ff":{"date":"2016-08-28T19:48:10.000Z","message":"Convert SOACs to a functional syntax."},"a2cb04fa02a7b1e8968996f83ebc94c8f5945c22":{"date":"2017-06-09T12:30:34.000Z","message":"Optimise away some more type conversions."},"a2cd1c072811c101020a9132727974fb5221d546":{"date":"2018-03-02T21:12:21.000Z","message":"These division operations are also unsafe."},"a2cf69b0eaa683e941408a3dfb00a1311e272d09":{"date":"2017-12-26T09:17:16.000Z","message":"Simplify simplifier module hierarchy."},"a2ec1a23662555be38d7357c782f56d616e21ca6":{"date":"2017-07-19T13:24:09.000Z","message":"Fix a memory block merging regression."},"a2ec1e114b4173b83ee4401668ec16be579af84d":{"date":"2017-05-18T20:33:15.000Z","message":"Better array-index simplification."},"a2f666c1788b70d92f2b3ccaa8ef78012f52b9c1":{"date":"2016-08-16T13:01:14.000Z","message":"Another for-loop stream fix."},"a36a904080da16900061a30598c6f54788fa78df":{"date":"2017-03-05T02:24:34.000Z","message":"Document iswim and irwim"},"a39e96138fc4138412d3ed6532e19c596f72f898":{"date":"2018-01-15T16:35:58.000Z","message":"Also make carry-outs available when generating scan kernels."},"a3ca499be63d710f7f0511337654e7e70dfd3d9d":{"date":"2018-01-05T18:28:18.000Z","message":"Fix #455."},"a3d96693aaf7e7e4f952c0dbfb7dd135d48d478a":{"date":"2017-03-31T06:57:33.000Z","message":"Fix futhark-test -c."},"a4314355d153515cc8b29d3984e59252f0a5b58b":{"date":"2017-07-26T07:18:45.000Z","message":"Make interpreter print empty unsigned arrays correctly."},"a4a5fc57ba1b2d3b0ef65da4ed4f6127ea2d4a30":{"date":"2017-06-30T21:40:55.000Z","message":"Properly use interference results in regalloc."},"a4af364f6575e10d1cf43715c5cdf2b78ffcaee5":{"date":"2018-04-22T06:36:13.000Z","message":"Merge pull request #539 from diku-dk/redomap-scanomap-functions"},"a508e18b95e9ea1997efcbc8d0c2c547a334ae64":{"date":"2017-03-07T13:07:31.000Z","message":"Local function fix."},"a556fe9c1526f0c5585e7fa213d245dd5e267add":{"date":"2017-05-09T14:32:06.000Z","message":"Do not check for entry points anymore."},"a590b00295bab9cd4ef5cfa19f4a2b68b36bbe8d":{"date":"2017-02-01T21:53:44.000Z","message":"Fix obscure loop consumption checking issue."},"a5979f9cfa0d51aa2b157d10487def4e8baf7135":{"date":"2018-03-26T08:51:40.000Z","message":"Fix #501, I think."},"a5f77030c7f51e8721e817088f8803a18b48d76f":{"date":"2016-10-19T10:45:50.000Z","message":"Fix #245."},"a609dc53225d168dcf2200be66be4468538a6e1e":{"date":"2017-12-13T12:07:04.000Z","message":"Support reductions that are not group-wide."},"a613b691ef0232e175b8289e48bc7e2ad3646030":{"date":"2017-02-02T13:25:16.000Z","message":"Fix result printing."},"a66d6af9d240a222eb5804b2e5f9e3a78439430e":{"date":"2017-11-05T16:33:25.000Z","message":"Correctly compute aliases for branch contexts."},"a6b2e19d17c6ad6654e284b27fc84be29a77c960":{"date":"2017-07-12T20:51:42.000Z","message":"Another coalescing fix for large segment kernels."},"a6b89e1340538195db6cdf5524e98c3853d7cc43":{"date":"2017-12-13T09:38:37.000Z","message":"Save per-group array results by collective copying."},"a759e7a3bd1d93330ed14b53ad4234e3ee537ea9":{"date":"2018-03-07T20:58:49.000Z","message":"Support polymorphic operators."},"a7c373ef67ee63b5e0a742bc46800ce8ed6b58f9":{"date":"2017-08-22T17:37:50.000Z","message":"Handle memory block merging in the 'for x in xs' part of loops."},"a7cf9bb17422198ccdc58364c0254e17d45c67bb":{"date":"2018-01-23T14:46:13.000Z","message":"Disable double-buffering outside of kernels."},"a7e1c7168765a4a2aec04a91a7442c7e4da54da9":{"date":"2017-12-30T23:32:02.000Z","message":"Unify function and value bindings."},"a8615799983212f104a03fa1f90c686ec1a4998c":{"date":"2017-05-04T13:06:57.000Z","message":"Binder now also works for ExplicitMemory."},"a87e8243628184246309eeb3f1ceb603c77202b2":{"date":"2018-03-05T19:13:21.000Z","message":"Do not use floating arithmetic for integer ops in Python code."},"a8b8eb693a8f60bfd7725f6149185d7350b1dd2e":{"date":"2017-04-13T21:32:23.000Z","message":"Add size parameters to type abbreviations."},"a8bd79e8f97a42cc02609c5caa9325f44161edc5":{"date":"2018-05-21T15:20:28.000Z","message":"Add radix_sort_float."},"a9c2808a729179817edcb7616b4ac455517630fa":{"date":"2018-04-14T22:17:57.000Z","message":"Fix #531."},"a9d0c97f12d0870b57291f2cdd87771bbec2eca4":{"date":"2018-02-12T22:18:56.000Z","message":"Implement #475."},"a9d1a299697d81454756c796f6fec8d16a037258":{"date":"2017-11-10T14:30:14.000Z","message":"Restrict global conversion functions to only operate for a few types."},"a9d4778071a9284a5b64e69f70187bd9d8fbe74e":{"date":"2017-12-12T21:36:38.000Z","message":"Do not generate two group sizes per intra-group parallel kernel."},"aa1bbd60b48fd9392743bf067c0ccda9117033ba":{"date":"2018-03-28T15:48:34.000Z","message":"futhark-doc: Do not prefix intrinsic names with intrinsic."},"aa1f7b47cecdef004745ebbabf3441e1046e424e":{"date":"2017-07-13T15:44:38.000Z","message":"Long overdue rename of some fields in Stm."},"aa20cf911217f3fae5098a3e932539148e3d5e32":{"date":"2016-09-05T06:19:38.000Z","message":"Remove unnecessary export."},"aab09a487b1c16885db1484e30f39b0fa338dee2":{"date":"2017-10-08T10:17:01.000Z","message":"Fix #410."},"aad06710295b8d9ab38bc0b31943c4fa96be83cf":{"date":"2016-08-29T19:53:18.000Z","message":"Simplify reshape and split syntax."},"aad0faeb00c92383ee3de730b2ea8793f17f0975":{"date":"2017-07-25T08:17:47.000Z","message":"Modularize safety condition 3 for coalescing."},"aaf33985384314608b60a5123c029cfb7ce4c5fa":{"date":"2017-12-10T11:41:30.000Z","message":"Remove unused variable."},"aaf8ee55d510b4e0592adec9fd337ecb93f43e65":{"date":"2018-04-23T14:13:42.000Z","message":"Print threshold comparisons on stderr when -D passed."},"ab3178b23be254914983ca42f6cb72339bc30fa7":{"date":"2017-04-11T17:33:04.000Z","message":"Use Maybe DimDecl instead of an AnyDim constructor in DimDecl."},"ab3b3269ab35d604875b73ceabe5c55897cb14b1":{"date":"2017-02-04T13:39:08.000Z","message":"Fix typo and whitespace issue"},"ab8f626b598453b2eda0e602250b89ed0ce454de":{"date":"2018-04-09T20:12:13.000Z","message":"Fix #527."},"abfc57abbe20421ae098a3c3d073d819dc583dcb":{"date":"2016-08-27T09:29:52.000Z","message":"Permit type ascription in patterns."},"ac5de9e3fa3fb3c473cfa3e1ecc30c9767f1b9ed":{"date":"2016-11-19T21:00:38.000Z","message":"New tests cribbed from NESL."},"ad28630aa494d6a54deaaa6a000c6c03eb52bc95":{"date":"2017-12-15T15:43:13.000Z","message":"Bail out on negative allocations."},"ad5f18cac07b4a9bde4895f02e0f3ac546f74220":{"date":"2018-03-25T20:10:33.000Z","message":"Rename benchmarks to futhark-benchmarks."},"ad9cdb0e159b6aa71801c7b0c8392e029fb4c9d9":{"date":"2016-09-06T06:12:14.000Z","message":"Writes to arrays of tuples are fine."},"ada2528776292d2606a8bac5d9aea342c6de7a66":{"date":"2016-12-01T14:35:30.000Z","message":"Fix the priority of bitwise operators."},"ade57c6485876b1414f0222b7954c629264abfdb":{"date":"2017-05-31T10:28:14.000Z","message":"Prefer simpler cases of kernel babysitting."},"adea8a4d0fe780a84c5cccae6813c020c6cee1b2":{"date":"2016-08-25T10:30:24.000Z","message":"futhark-pyopencl should also do tiling."},"ae3737df0c94a0fb9069d62e67c2b3beb5a377a2":{"date":"2018-05-24T12:17:01.000Z","message":"Document SOACs more."},"ae87fe19303b50724cd4c1dd086f52577ba68faf":{"date":"2017-04-13T08:45:06.000Z","message":"Fix #235."},"ae948b24e414f60275ea51b6c6c15e01a9437513":{"date":"2016-11-23T08:49:36.000Z","message":"map now behaves like zipWith."},"af073022a869c614b3b73135ca895472d01196ac":{"date":"2018-04-12T14:42:18.000Z","message":"Handle type inference for record projection."},"af18a939b9cdf4e81a2b02bbbbad5b8867f90489":{"date":"2017-10-27T12:01:46.000Z","message":"Support file header doc comments in futhark-doc."},"af2b1c14501743caaad4c88aacd2d2c95a5bcbd1":{"date":"2017-05-12T17:34:34.000Z","message":"Nested scanomap is always parallelised, for now."},"afac5dbe5c8163b40ca38013e59b9015f7e1407d":{"date":"2016-08-23T10:00:08.000Z","message":"Remove debug print."},"b049a3adb48518198e8c0325166bec43d05102c4":{"date":"2017-02-25T18:27:53.000Z","message":"Anonymous parametric modules."},"b09589aac64dc55ce0c130c38297f3911e7276a6":{"date":"2016-10-22T16:56:15.000Z","message":"Haddock fixes."},"b09ff3d58296ae8bbfe3786787f6193742a3086c":{"date":"2017-07-14T14:28:07.000Z","message":"Fix range code and add tests"},"b0ad9bff350c81039d58065aff10324c0ac6331e":{"date":"2017-03-11T09:46:26.000Z","message":"Add missing linebreaks."},"b0c820de22bf5df8d953b3cc2036e5511dcd1f6b":{"date":"2018-01-19T23:16:51.000Z","message":"futhark-test and futhark-bench: error on nonexistent paths."},"b0fce41c9f6f116afa51485ca8a98f6f48b8f75c":{"date":"2017-12-29T23:01:09.000Z","message":"More information on input parse errors."},"b1274eb76b4f99dd6d8ff5fd87cf0c631f436703":{"date":"2017-09-22T10:29:47.000Z","message":"Avoid some warnings."},"b271c68a7e3efb80ededf94547792f070d5e44c0":{"date":"2017-05-14T23:16:47.000Z","message":"Remove unused import."},"b2aab95b45f2d5a975b3f1c7f265c90b0deeaed9":{"date":"2017-11-06T16:51:38.000Z","message":"Add the notion of primitive functions."},"b30ca39a18bfd59f7ec2b374c9579628c621e06a":{"date":"2016-11-23T09:58:22.000Z","message":"Another #255-related hack."},"b31cbfc883c4d27f3e8971cd0c292ea16d38cf5f":{"date":"2016-09-08T11:43:02.000Z","message":"Another fix of my favourite simplification rule."},"b353e5cef59ddea2e2d5f154ba48eca28ea2a7f7":{"date":"2016-09-15T15:53:19.000Z","message":"Move matrix multiplication to Rosetta Code directory."},"b3f3863d9a459a568cf1a537a2968559fd41fa4b":{"date":"2017-02-01T21:55:45.000Z","message":"Add -t flag to futhark-test, which disables internalisation."},"b407b6bbe36d515c3e9e2ad1f2b8a0e446f2b73a":{"date":"2017-12-13T09:51:31.000Z","message":"Multi-versioned code now implies intra-group parallelism."},"b48ef60e65c7de2f200c57b59664e6b2c8edc05c":{"date":"2017-02-26T22:03:51.000Z","message":"Fixes to parametric module type checking."},"b4b5716bdf89c45ad0639b1646a415d8484430b1":{"date":"2017-02-10T21:15:27.000Z","message":"Another day, another functor fix."},"b4e09242cbf998d113471c7a09e75f8c3fd55681":{"date":"2018-01-23T20:58:54.000Z","message":"Stop hoisting allocations out of branches."},"b4efa63c116bdd0c599344351d5c406bb185a46c":{"date":"2016-08-15T21:22:39.000Z","message":"Coalescing tweak."},"b501f0b1dd31273da3fdc53a1be3f399e54cdc12":{"date":"2017-12-07T13:34:17.000Z","message":"Add FreeIn instance for IfAttr."},"b50972e1a0c65f4f6d78d97d3e11ad221deefe8b":{"date":"2016-09-15T15:30:00.000Z","message":"Euler method Rosetta program."},"b50a243d1853813fea49549b8ae19b54ef80549f":{"date":"2017-09-06T10:40:33.000Z","message":"Better error messages for assertions."},"b50bc80764f8798671074da3e606cb29665f07a9":{"date":"2017-07-29T21:58:43.000Z","message":"Simplify away f32 -> f64 -> f32 chains."},"b52746056bff5d10e55d7621d93478fc2cde5ba0":{"date":"2017-11-26T05:30:04.000Z","message":"Fixes to imports."},"b564b490659128679ead8573e169d7da139587b7":{"date":"2018-01-22T18:05:53.000Z","message":"Improve twoPowerToBitShift simplification rule."},"b584edb9ebbc2069caafd6d429c6b0bd8931a622":{"date":"2017-03-27T21:05:20.000Z","message":"Permit true higher-order functors."},"b592e23d2413ec38b40035613c64e50acf12825a":{"date":"2017-01-31T13:01:32.000Z","message":"Functor and abstraction fixes."},"b59308c2c3aa166a294781c4fd0d9c4c182460df":{"date":"2017-10-01T16:02:55.000Z","message":"Built-in functions are always safe."},"b59fb05e799d9d6fc6962bf334509abf46bba3b9":{"date":"2017-08-17T09:42:44.000Z","message":"Fix memory block safety condition."},"b61050043d353c982b9e6d31e9f5a9cb6b6e1c5d":{"date":"2016-09-05T14:03:58.000Z","message":"Further simplify core type checker."},"b6447f350e8cf382a00c65d4d1b02e37c251180d":{"date":"2017-04-26T08:54:55.000Z","message":"Also support empty([]t) in value parser."},"b66b691c56b128ee03541a7e0e777ceb78811f16":{"date":"2017-02-20T21:27:28.000Z","message":"Clean up how ImpCode/Kernels is transformed to ImpCode/OpenCL."},"b68a951ff11fd337c77fdedd599397f6b4b6faaa":{"date":"2016-09-25T07:56:26.000Z","message":"Fix kernelisatsion of redomaps with map-out parts."},"b6cee05e7ceeade5b43f8a4477ac3edb58180754":{"date":"2018-03-01T18:20:53.000Z","message":"doing progress on index functions"},"b7248bb94b0916a2485024e34d009f20092f6000":{"date":"2016-11-25T10:04:08.000Z","message":"Implement #256."},"b741dec0d06eb7759cbcab30c1506e23bbcac703":{"date":"2017-07-17T16:09:46.000Z","message":"Add IndexOp instances for kernels."},"b7570442339825e519bbf016f62ecca9ac240f67":{"date":"2018-01-22T10:38:59.000Z","message":"No need for barriers before Combine, I think."},"b7d27066200d187a185e0433831a3307998c099a":{"date":"2017-09-03T16:31:36.000Z","message":"Fully handle safety conditions 2 and 5 for kernel bodies."},"b7d341254cfbaf8ec3b5e38aa04e8fc10f359f95":{"date":"2017-03-25T14:06:53.000Z","message":"Remove unused code."},"b80e8783d175e7e6ca6dd0d15022e9d2f7ad2654":{"date":"2017-04-09T14:43:24.000Z","message":"Do not use type substitution for name substitution."},"b886483c9c40df8f2f5a23f6c349ddadf382abfe":{"date":"2017-05-09T13:53:00.000Z","message":"[MBM] Get around to fixing the loop-with-if problem."},"b8873a3423a20da30d3bdbdefb3bbba2015c7697":{"date":"2016-09-16T19:38:03.000Z","message":"Monte Carlo Pi."},"b8988ba2160464277b116773d56732b66b499257":{"date":"2017-12-11T11:49:00.000Z","message":"Make futhark-test output a little more interesting."},"b8af7a724a57bcaf6e6728d6928cdde91a829744":{"date":"2017-06-27T22:20:33.000Z","message":"Fix the context handling in MemoryBlockMerging."},"b8b2335ee601c8b6d7b281f4bc56ef7734f791dd":{"date":"2016-08-29T07:40:40.000Z","message":"Add proper zipWith."},"b8f42f3b373cc2aa3b75b0ad35d6bb2274f44163":{"date":"2018-05-07T11:17:32.000Z","message":"Add >-> and <-< operators."},"b907b2aad57179a02cf6cb3074e4208e5764143d":{"date":"2018-05-27T10:02:16.000Z","message":"Add segmented_reduce function."},"b92b6c916bb4473f4c036a01c736e73b4d742bde":{"date":"2017-12-15T11:49:25.000Z","message":"Only version redomap if inner parallelism is present."},"b948ad359d285092a6d554116927676c352e3eb3":{"date":"2018-02-02T13:03:08.000Z","message":"futhark-test: better error on malformed program output."},"b9cef107864548c4dc9386b9dfe1ed7c7f9fdf21":{"date":"2016-10-16T08:32:26.000Z","message":"Oops, the world is not ready for this."},"b9d0c9688ab2051c7c293ba79044649fba9ed254":{"date":"2017-09-25T12:59:55.000Z","message":"Fix generation of opaque value structs."},"b9d997cbfaf3cae1003727d2315a35446ab8ae96":{"date":"2018-01-07T08:49:48.000Z","message":"Another stream_map fix."},"b9f01b45b6dfbef097aa22b7c9002de34f803274":{"date":"2018-03-31T21:02:57.000Z","message":"Add backtick infix operators."},"ba1409e225dda7949a7e8ab3ce3e3f83dcebe627":{"date":"2017-10-25T15:08:41.000Z","message":"Add \"stack traces\" to error messages."},"ba253077a8491eb9c239add943cef3623371902f":{"date":"2017-06-09T22:06:59.000Z","message":"Support refinement of nested types."},"bac85c58f7c0205f0d239928900ffebc8f1cd814":{"date":"2018-05-13T08:25:08.000Z","message":"futhark-doc: use types to ensure well-formedness of table rows."},"bb06ac8492ceea920a5eae04d612621205cb32de":{"date":"2018-01-07T08:52:58.000Z","message":"Use left-biased union in LocalScope instance of Binder."},"bb36b2c074449955649907449fa84bd3336528ce":{"date":"2018-02-23T18:24:46.000Z","message":"adding again Lmad previously removed"},"bb7dba94b9f5ed92cfa11ca27c5f7775e7a16023":{"date":"2018-05-25T22:42:06.000Z","message":"Fix Combine in conjunction with 2D tiling."},"bbda702cd111470a1b30fb0a772ddb23e2a58d8e":{"date":"2016-09-30T10:57:22.000Z","message":"Eradicate some uses of ScalExps."},"bc160b859bebd65bd0bd6d623e9f88a183e4f4e7":{"date":"2017-12-07T15:53:47.000Z","message":"Exploit parallelism inside loop-invariant branches."},"bc428d5ea580377bd7c1489f9cf7aff0b438ecb7":{"date":"2016-10-21T17:06:52.000Z","message":"Basic memory profiling.  Activate with -m."},"bc5df186199f4d7586eeca7cec697c501153d6e8":{"date":"2017-05-05T09:02:07.000Z","message":"Clean up the existential context at the end of memory block merging."},"bc76d633c498a275a713dd1f94ddee3ebbc54bb4":{"date":"2017-02-09T20:59:50.000Z","message":"Fix reading of double-precision numbers."},"bcd7fa1ff80919b69d5d05e557738c572a790859":{"date":"2016-10-02T09:57:02.000Z","message":"Too slow in the interpreter."},"bd05a8e1b4ed41121be3155237dffa9054fe17a5":{"date":"2016-09-02T12:41:39.000Z","message":"Add tile size primitive and use it!"},"bd0a843f627f3d71d6ba13183b481a00b21c1a74":{"date":"2017-11-08T18:07:08.000Z","message":"Reset unsafe status when instantiating polymorphic functions."},"bd2c49967868de504c3588b7dbcb8c39682324fb":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: make segscan version handle map-invariant variables"},"bd3dde79c19d0df6d781b4e3dab1c3f9e2da1c0d":{"date":"2018-05-25T09:53:49.000Z","message":"futhark-doc: distinguish functions, modules, and values in index."},"bd4d60c0c036328cdce0b45534fbebb3f5275116":{"date":"2017-01-29T21:46:32.000Z","message":"Proper multi-file support; now done with 'import' instead of 'include'."},"bd6c877bbf5cc35adaa5167e781f6b4b587b8be0":{"date":"2017-12-11T15:20:09.000Z","message":"A branch is only unbalanced if its condition is loop-variant."},"bd9ce0c33f9fb226f1f526d11e571db2ee9c61a2":{"date":"2017-07-19T22:46:23.000Z","message":"Fix memory reuse assumptions."},"bda8738a7a00be52b762525a70b70bae7bc0e36c":{"date":"2017-07-11T17:02:41.000Z","message":"Ban symbols from starting with a dot."},"bdb004c29b5f13b48ffd78c1b9d5753d0d770b09":{"date":"2018-05-10T07:14:18.000Z","message":"Fix handling of intra-group scanomap/redomap."},"bdbb6af99c228f6d89809223a1e92f6754bb496e":{"date":"2018-05-03T13:39:44.000Z","message":"Handle giant array literals better."},"bdbbdcbe91929e1045c5d5acf8313f80bbe51f18":{"date":"2017-12-27T14:30:21.000Z","message":"Padding in futhark-test output for readability."},"bdd027f5893e2297e5a10a32e9ed802c7e6e237a":{"date":"2017-04-30T19:27:44.000Z","message":"A little nicer output for futhark-bench."},"bddf61056acae88dea08a849cc7ddd27f1ce3c18":{"date":"2017-03-25T16:11:18.000Z","message":"Remove some unnecessary ScalExp stuff."},"be17890c80be5152444849f1b0a6e87f44c0b3ad":{"date":"2016-12-28T12:17:05.000Z","message":"Maintain proper include order."},"be30ca6d5ed53bec337e322da08edc3a7aa1ff06":{"date":"2017-03-26T21:14:21.000Z","message":"Seems like the non-hash containers may be a little faster."},"be3aaea8f0d015338f6d328d005132b6e58f12c0":{"date":"2017-09-25T12:45:07.000Z","message":"Remove allocation functions for opaque values."},"be9f5f6934ddbd6b65c4bb1251654806308ad55e":{"date":"2016-10-03T09:42:38.000Z","message":"Segmented code generation fix."},"bec34b8190b64115aaa17f918a9eafc0958bd71e":{"date":"2016-12-26T08:42:50.000Z","message":"Beginnings of signature matching support."},"bec4ff1413fdb6a121a83e8fd2d7ae19b60ae823":{"date":"2016-10-10T09:53:04.000Z","message":"Propagate simplifier fix point desire from inside kernels, too."},"bf3e71e7e330e9d652ee8cf4b23a070b25b91658":{"date":"2017-06-08T13:28:51.000Z","message":"Fix omission that prevented use of qualified >=."},"bfae0f9f6c005ab349d89a10320348fc57cdf305":{"date":"2017-05-15T19:53:16.000Z","message":"New simplification rule for split/concat."},"bfb9c4a565ac655322efe5c7bb1f77d255762846":{"date":"2017-11-01T09:28:49.000Z","message":"Simplify Shape/ExtShape."},"c01bfba0f889e458425bbc24876eceaedf4d4e69":{"date":"2018-01-18T13:51:51.000Z","message":"Fix a loop interchange issue."},"c0366f223f0c77928e030805509e16741b49daa4":{"date":"2018-05-02T09:43:44.000Z","message":"Use left-recursion because it is apparently faster."},"c07aaa52e6a3b7d286101472e31987f8c2903e3d":{"date":"2017-07-18T08:22:16.000Z","message":"Clean up a little in memory block merging."},"c0961eefb06045a9138a129430c2f82922ff26b7":{"date":"2016-09-30T11:39:23.000Z","message":"Permit any unsigned type as loop bound."},"c09da7b698e458f7497a5f88abaca7be48276686":{"date":"2016-08-16T09:29:53.000Z","message":"Do not create vacuously true branches."},"c0c4619e7bdb38fbe2cacf4c52c6a3870d999a75":{"date":"2017-05-03T20:32:58.000Z","message":"Fix unknown variable error message."},"c0ca5fed6fed5f6ef63d657123ca3439e3adb259":{"date":"2017-04-12T08:29:35.000Z","message":"The old ways were better."},"c0ed903f6a24c0c3217c2417ec3665fc1e8ce062":{"date":"2017-12-31T13:34:56.000Z","message":"Turn 'split' into a library function."},"c10c6b37f3fd74c627dc148e81e7efc9ef8a2414":{"date":"2017-04-08T13:18:55.000Z","message":"Rework type checking of modules."},"c111f97ac22393936e18a43219ed1cedb01459a0":{"date":"2018-02-26T19:32:11.000Z","message":"Add a few more docstrings."},"c11bd4ba049c00dae21725ccf4a8428e12a2ead3":{"date":"2018-05-10T06:35:00.000Z","message":"Switch to proper Stackage snapshot."},"c225317772aa6cf04f2ddd9f43280a62e0196341":{"date":"2016-09-03T11:12:46.000Z","message":"Respect maximum tile size."},"c294c96bb7678bf750f6da18f4c10307787ca444":{"date":"2018-05-19T21:42:31.000Z","message":"Add necessary pragma for Clang-based OpenCL implementations."},"c2a87996f098399e43dcd67314712e90d8613d63":{"date":"2017-02-21T14:14:07.000Z","message":"Support functors nested in modules and other functors."},"c30469bddb7e3f13bc5f4f39dcf91853ba082fe5":{"date":"2018-03-23T21:46:35.000Z","message":"Turn scan, reduce, and filter into library functions."},"c39d4d9039501f9cd887b7fec6b9894838adefbb":{"date":"2017-12-06T21:53:39.000Z","message":"Only AlgSimplify bool-typed expressions."},"c3fa8eb7e6feccf62987e58be8f1b4f7b86ec63f":{"date":"2017-10-03T13:39:39.000Z","message":"Some fixes to intra-group parallelisation."},"c3fe53b383feae4a0ab325990c63b1deaadfd490":{"date":"2018-04-06T20:55:11.000Z","message":"Remove unnecessary stuff."},"c428c8e210781525d88b3028ba140f8abbb9a3c4":{"date":"2017-02-01T14:00:19.000Z","message":"Don't manifest arrays in isSegmentedOp when extracting kernels"},"c44a7216188e02f33be087ec03579502395d38d9":{"date":"2016-09-08T09:48:23.000Z","message":"Functions must take at least one parameter."},"c4c7a637054ce1535337c639840f1250adbbf241":{"date":"2018-05-07T09:52:36.000Z","message":"Fix #543."},"c4ca9e3a22811fcd980cf4257337b88c703ee252":{"date":"2017-06-07T07:45:14.000Z","message":"Comment fixes."},"c4f0bcd59f39967f98fff0a5cffbad518e0a5576":{"date":"2016-10-26T20:16:34.000Z","message":"Nicer code for whole-array streams."},"c4f488cc7d7d4874a6eba25f42fee4af5a1f6b51":{"date":"2017-05-15T20:18:56.000Z","message":"Enable memory block merging in sequential code generation."},"c505447207cd95ef4fac693a92a2bca7570bd17c":{"date":"2018-05-16T08:30:02.000Z","message":"Simplify internalisation of concat."},"c558330757194fc4c7d6128a0a1a8e65643e1e33":{"date":"2017-03-01T21:59:28.000Z","message":"Better prettyprinting for tuple-like records."},"c55a08bd35fac76fe0c32d0c297c5e94883e22b7":{"date":"2017-05-10T16:33:46.000Z","message":"Remove unused parameter."},"c579463c16a30be3eddab396a158fea7748c1489":{"date":"2017-07-05T15:16:19.000Z","message":"futhark-doc: sort pages when generating index."},"c59c67b9e6b309a99489358e01d1d04ff76f77a3":{"date":"2018-04-02T18:24:30.000Z","message":"Handle consumption of closure of lambda."},"c5b019215ab5be2c637cfc4470b0cad1707174a1":{"date":"2018-01-04T12:19:03.000Z","message":"Remove unused interpreter error."},"c5c401abd6092580ce58e5b1e0021e34c035575c":{"date":"2016-09-06T13:56:11.000Z","message":"Another interpretation of arrays of tuples."},"c5c7fde6fc4c9c6eda66fa8c5faed164c9c0dd14":{"date":"2016-10-11T21:35:11.000Z","message":"Switch meaning of -v and -V."},"c5e1cdd579b2c5ed81674900353b3a2f7ef273c9":{"date":"2017-10-05T21:33:34.000Z","message":"Simplify Python AST."},"c61d7e429eea6ef6417b7dfeebbe65d475d841b2":{"date":"2017-11-08T19:36:40.000Z","message":"Make 'unsafe' apply recursively."},"c675ef2af51a2af63cd07365b3e0b2ea523b6398":{"date":"2016-08-23T10:00:08.000Z","message":"Fix let-with slicing."},"c69a2334a0d839035a39f6f0910829b2a98f014a":{"date":"2017-03-02T13:08:35.000Z","message":"Fix crash in constant folder."},"c7534cbaf5ebd1dd907632a1054a88d4c715950a":{"date":"2017-06-07T13:05:43.000Z","message":"Remove vestiges of tracing"},"c768f7e65f32468e7767301e3530c4ffbbaae7c9":{"date":"2016-09-21T13:39:11.000Z","message":"Symbolic constant support."},"c7b67d469f896fa9b93a0804c4ecc36cb1b4b320":{"date":"2018-01-02T11:43:31.000Z","message":"Remove some dead code."},"c7c847e65ef2a1ced0b09a76ec433852f331b1f6":{"date":"2016-09-03T09:00:08.000Z","message":"Add missing prettyprinting method."},"c7cfa3574d594a8285f7ff63248dcc2a0347af0c":{"date":"2017-09-27T14:07:51.000Z","message":"Handle absolute input file paths."},"c7f9a4f166601573a155c9314ec9741fd9b70fb9":{"date":"2017-03-16T18:02:33.000Z","message":"replicate/reshape simplification fix."},"c845bb7541d17f41d29ee034bf9deb50fd1f0f87":{"date":"2018-02-21T14:30:10.000Z","message":"Add some comments to Python code generator."},"c855b8c5ac83a21aa0a53c8c87096b4f5215c3fa":{"date":"2018-05-30T13:44:18.000Z","message":"futhark-doc: split contents into important and supporting files."},"c8603840c141f948deee6096bf6a061d6d5c16b1":{"date":"2017-10-27T08:23:00.000Z","message":"Remove unneeded uniqueness attribute."},"c89918d35337cb694832d4937345a284b7ea4005":{"date":"2017-06-05T15:19:27.000Z","message":"Include IO header earlier."},"c8e52ef4bcaffb93583eb32580ddf107d33d0f89":{"date":"2016-09-16T11:19:54.000Z","message":"Avoid conflicts between built-in and user-defined functions."},"c989b1b43b9eaf89eb05a3e8d3e199f0819b5074":{"date":"2017-03-01T23:16:32.000Z","message":"Negation operator priority fix."},"c9a64f0614fc3626c7023d650908567735e4514a":{"date":"2018-04-10T09:17:26.000Z","message":"Improvements to inference of tuple patterns."},"c9d50040279e2f07b5b40077d72e6dedb25cc2a1":{"date":"2017-03-12T22:15:14.000Z","message":"Better error messages when things go wrong."},"c9dc95b008f90039a857645b3cd30c57d29d1958":{"date":"2018-01-24T17:59:19.000Z","message":"Remove elements from free list properly."},"c9ec41f4d0c74eb00438e7904c21be3c11f081e4":{"date":"2017-09-01T19:39:37.000Z","message":"Fix #393."},"ca035562fa0572758516710fe8c72cc381eff666":{"date":"2017-10-03T13:37:38.000Z","message":"Better error message for incorrect WriteReturns."},"ca6c7721d70026129499e936c163ff910f0e599f":{"date":"2016-12-20T16:30:49.000Z","message":"Changes to module system naming."},"ca9f99296435e1c66e3e26057507357f01ea3b7a":{"date":"2017-03-15T12:46:42.000Z","message":"Rename --read-opencl to --load-opencl and fix it."},"cae46b65bab149f2fe88d5e58fb4a46fca8e616e":{"date":"2018-03-29T23:05:27.000Z","message":"Rank must always be an integer."},"cb67a9365cc9cb821aa0152212a0266a68900b5d":{"date":"2017-05-15T20:18:56.000Z","message":"Very minor."},"cb7f8343187f9172654bbbd6756e83d2fa987c74":{"date":"2017-02-02T11:16:16.000Z","message":"Add optional debug information for kernels."},"cb880faa78b085affb458c454e4ce3485a6f591b":{"date":"2016-10-29T15:19:27.000Z","message":"Another tridag test and a rename."},"cb889e59f6fbffcd59f89dd556664c9ff86f2168":{"date":"2017-03-11T09:25:50.000Z","message":"Better error message in internaliser."},"cb9ba28d4c2c911a445a5716678ec7497836a138":{"date":"2018-01-22T08:49:15.000Z","message":"Forgot this import."},"cbc2cea181ad5431dcc40fabd5d27d33d0c8b8ee":{"date":"2018-01-05T17:00:08.000Z","message":"Parallelise nested concats."},"cbdefe6c6516140dc190c393af14797cf087b8a8":{"date":"2017-12-13T14:49:06.000Z","message":"Fix issue related to computing group size for intra-group parallelism."},"cbf5023cad12178557ad7d208436405411d9623a":{"date":"2017-02-04T13:39:08.000Z","message":"Allow all PrimType values to be used in kernel debug information"},"cc1a2c69499d21a97fb6eb875acd4ebd562ff33f":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: improve naming"},"cc58fef5bc51c173e5c868eba724f2ce3a602d40":{"date":"2018-04-15T14:20:58.000Z","message":"Update bug report URL."},"cc98c5a33aa520ee5108294bd2d0fd08623319dc":{"date":"2016-12-28T09:22:41.000Z","message":"GroupScan now works for inputs that do not span full group size."},"cc9e1ade1ec8078930d19bd26bd5cccef7d49360":{"date":"2018-05-11T07:13:17.000Z","message":"Insert reshapes when internalising loops with shape annotations."},"cca67142528c913b6f2f88d416c3301dd4e97b7c":{"date":"2018-03-30T19:50:53.000Z","message":"Do not note about tile size limits if default."},"cd29d34aa9364ce93f05e7843c028c9531f0a4bc":{"date":"2018-04-08T18:50:21.000Z","message":"Add iterate/iterate_until/iterate_while functions."},"cd2de5b476594be217239740e6d3e2f8f7f3da68":{"date":"2016-11-29T22:05:42.000Z","message":"Apply scalar expression simplification more liberally."},"cdadebfce92b3526458cbfa8f6c6666c2880341b":{"date":"2018-01-18T10:32:58.000Z","message":"Better error messages for unhandled irregular allocations."},"cde928fb50be0334773d944b77ec50b59db88a31":{"date":"2017-12-06T16:20:55.000Z","message":"Remove unused variable."},"ce3e0cbb96a1777a64424c2888c3169d5e0e023a":{"date":"2018-05-20T16:27:09.000Z","message":"Work with the new threshold descriptions."},"ce9137e78c7ee6aed6cabf866bf4755a07176de0":{"date":"2018-05-10T16:30:33.000Z","message":"Handle edge case with uniqueness and inference and higher-order functions."},"ceb75d2e68029f860f931e4813b4464a91a0a7ad":{"date":"2017-03-15T12:05:52.000Z","message":"Add --dump-opencl and --read-opencl options to generated programs."},"cec59adb958f8f2205cb434715023212b021106d":{"date":"2017-06-27T13:12:44.000Z","message":"Report OpenCL device and platform when using -s."},"ceceb4cebb0a3db622d5ae60a339a1e21a9b6cbf":{"date":"2017-02-11T08:44:28.000Z","message":"Some module test fixes."},"cef6f9d02e211d610393aabd55605ae9805f526d":{"date":"2017-02-28T19:08:20.000Z","message":"Import fixes for Windows (I hope)."},"cf0639a5b170255c9215f1eb7a1af5bbca8d0136":{"date":"2016-09-08T13:55:05.000Z","message":"Document futhark-dataset."},"cf07f2c90acea283632b2134978d23b148452263":{"date":"2018-03-12T15:40:53.000Z","message":"Type parameters need no longer be used in value parameters."},"cf22186cd0eaf3aa95dbadbd3a82b26d3af2ec13":{"date":"2017-03-28T12:09:28.000Z","message":"Syntactic sugar for multi-parameter parametric modules."},"cf36a370d7dde849e424e6d413044c9bdad54e27":{"date":"2018-03-28T21:18:24.000Z","message":"Place type information in generated Python class."},"cf3cec56035549917550f02800c9a33a69b624cb":{"date":"2017-10-01T14:17:20.000Z","message":"Hoist more aggressively out of loops, but still safely."},"cf481245a6ef5428dd2fbc1cf5f5af9b6030039c":{"date":"2018-01-03T08:12:44.000Z","message":"Solve some missing aliasing when zipping/unzipping."},"cf56ccc4f0648f04c5accde6c1a5464690ee5935":{"date":"2017-02-16T19:28:06.000Z","message":"Fix #305."},"cf5930b1ee454855ca3ca7e8d708339e5c55d055":{"date":"2017-08-22T11:26:37.000Z","message":"Revert \"Revert \"Copy all memory before each run.\"\""},"cf76e1af3a4b4eac07ae1f4823834f2db0f0ed98":{"date":"2016-11-28T12:24:19.000Z","message":"Print curly braces around loop bodies for readability."},"cf8a8b18b825a2135cd54b2d51fd190911fa4c5d":{"date":"2017-03-17T09:12:19.000Z","message":"Speed up the inlining stage for large programs."},"d0002688ebc5460ff99e0978c9cf8b29f68e5b67":{"date":"2018-01-22T11:40:16.000Z","message":"Revert \"No need for barriers before Combine, I think.\""},"d02a27cd9054c2633e19de626c5f18463ef88edd":{"date":"2017-04-25T21:46:51.000Z","message":"Entry points may not be polymorphic."},"d02aaa432b9c97a0c4e0d9e2c558cd26b4b62ec4":{"date":"2017-11-11T13:52:07.000Z","message":"Change field access syntax to use a dot rather than SML-style syntax."},"d03ca80f00bb8438cedbe41091f5de8dc94ed53e":{"date":"2018-05-07T10:13:45.000Z","message":"Better alignment."},"d04123ea17bd3a6635683e5bd87969cb93465d93":{"date":"2017-03-01T19:02:00.000Z","message":"Add record patterns."},"d074692bd552eb69fb79fa8d2e1e7a752ebb3272":{"date":"2017-03-09T16:13:34.000Z","message":"Parallelise the Futhark compiler."},"d07cb8a788f49e5c9a4664b71891044a3955b468":{"date":"2016-09-08T08:02:00.000Z","message":"fixed small typo"},"d0a367f8b362e27490714f6c7a628ecc223d6fa9":{"date":"2018-01-03T22:46:49.000Z","message":"Even cleaner handling of types in type checker."},"d0a721ecf6b21b5436f8b5054365135aa80434d1":{"date":"2018-04-06T15:17:41.000Z","message":"Remove instantiation lists from the AST."},"d0d916f1476ea283579e2524639d105b286526ce":{"date":"2017-02-26T12:33:57.000Z","message":"Ensure Numpy arrays have no base before copying them."},"d0d95a872516f5aef5e494fecd26270de4670e1b":{"date":"2018-01-08T19:51:33.000Z","message":"Merge pull request #457 from diku-dk/no_bindage"},"d112d54a9391209fa5c261d63f05f957aa699e12":{"date":"2017-03-14T07:28:30.000Z","message":"Use np.fromfile to read binary arrays, as suggested by @titouanc."},"d1c694cded6ac1434867bad9dbbf17024cd2cac7":{"date":"2018-01-10T14:37:39.000Z","message":"Remove Rename instance for Stms."},"d1d7fb4f25e6d76be929c1a7f7f023bdd9313223":{"date":"2017-08-17T09:42:44.000Z","message":"Discover and fix memory reuse bugs."},"d1ffc978ef6d3478497a39eb7be1f13137f9989e":{"date":"2016-08-18T12:16:07.000Z","message":"Fix #224."},"d205a67f7caf4c304a9a400368cb8c3647afe7c9":{"date":"2017-12-11T07:47:12.000Z","message":"Stop appending .bin in futhark-test and futhark-bench."},"d226934364615d034bbc1ef2dd78683ccfbfe995":{"date":"2016-10-19T17:41:35.000Z","message":"Better semantics for the empty construct."},"d23e6d7fbb018307906c7f5c644d1d501e42370a":{"date":"2016-09-15T15:41:46.000Z","message":"Add filter Rosetta Code example."},"d25a6b828a62c6ff7445c42b48e00e84affa9805":{"date":"2017-03-26T17:09:35.000Z","message":"segredomap: create dummy values for arrays"},"d25b15091d3b0d3a7bbfcd074034a633912c7088":{"date":"2016-12-28T21:03:04.000Z","message":"Work on intra-group versioned parallelism."},"d28887fa0516ee77eb516cc32032b62d7cdfecfb":{"date":"2017-09-17T11:02:17.000Z","message":"Reuse memory from arrays created in kernels in some cases."},"d2d2e1ac6e02d5d0739b613f9ca206ea06b9024b":{"date":"2018-02-06T18:14:40.000Z","message":"More concise futhark-bench printout."},"d2d5152c097321d5545c244dda8c5af4b89a4551":{"date":"2016-10-25T10:08:36.000Z","message":"Better ppRangesRep."},"d31ec9dfbb22b1cae81958433beff155cda908de":{"date":"2017-06-25T21:51:19.000Z","message":"Add simplification for PrimExps."},"d3356be15fc7c87090c55e516796674a02bf307d":{"date":"2017-06-05T16:39:29.000Z","message":"Fix writing of binary format version."},"d3eb2e15afa6280702eebe4c8e8a7f7e2a6f7f5f":{"date":"2017-12-12T10:18:01.000Z","message":"Do not consider Copy cheap."},"d3ec4622be34926faec694ded7bf000bd91add22":{"date":"2017-07-07T10:12:48.000Z","message":"Use exit() rather than abort() in case of error."},"d41b76530854e851e77439131733a0c5d6e18c53":{"date":"2018-01-03T15:57:11.000Z","message":"Further type checker simplification."},"d41d74c8fc3ae6304757ec22acf9759964e9dec9":{"date":"2018-05-18T13:41:14.000Z","message":"Keep track of versioning dependencies in size classes."},"d48bdb139b558338fa29c11d47258ddb564f2cd9":{"date":"2017-02-01T21:38:29.000Z","message":"Fix double-binding of LetWith names."},"d49c88c9f71f2b3b20779c223d6c0f7e6e0134c8":{"date":"2017-08-14T12:56:47.000Z","message":"more comments"},"d4a741d1e87123c1691c3fcf9842895ba7d692f6":{"date":"2017-09-12T12:36:50.000Z","message":"Turn some array literals into replicates."},"d4c1c796c7578208433eafa7feae98f794550224":{"date":"2016-09-02T12:22:54.000Z","message":"Do static local memory allocation when possible."},"d536d6ac311a625e90c9f5983da6e566e1c19e1e":{"date":"2017-11-25T09:24:01.000Z","message":"Tweak spaces in prettyprinting."},"d565e2c4fd80c6077fb81165facf63c3491ce17c":{"date":"2017-10-12T11:55:02.000Z","message":"Fix #413."},"d594b523098b8cdc82732de822c27c3e7df12ec8":{"date":"2018-04-13T17:00:21.000Z","message":"Compile with GHC 8.4.1 by default."},"d5b0c8d25164a273c653b7c9edcf9609ceaeb0a0":{"date":"2016-11-27T15:35:00.000Z","message":"Fix typo in error message."},"d5c0a8f2ab7fc05755b6c66ee714f7487b14f46e":{"date":"2016-11-08T15:43:27.000Z","message":"Fix handling of shape declarations."},"d5d773f470a275162866394975736affb0ead793":{"date":"2018-05-26T17:36:52.000Z","message":"Distinguish intra-group min-parallelism from max-parallelism."},"d6802946bf1f74fed328f4dbbdb6d298d7a6fe7d":{"date":"2018-04-16T18:07:01.000Z","message":"adding test for concat scatter fusion simplification"},"d68cddc1e71a8cc187143cef62f8e539d2425422":{"date":"2017-02-04T13:39:08.000Z","message":"Add a bit of inline documentation to the Scan SOAC"},"d699176b829fd37b8aecfc6235c66b6582076f31":{"date":"2017-12-13T17:43:46.000Z","message":"Print names of memory blocks being allocated."},"d7158d0503216039f6de18ba086b9e7eb810a433":{"date":"2017-03-02T08:25:58.000Z","message":"Fix #48."},"d734f4320f5ed1f0fa007dfff4511b303b81ef41":{"date":"2018-05-16T10:26:01.000Z","message":"Better LSS docs."},"d7aa298dd039aab36988e570afc3d10136e4327b":{"date":"2018-01-19T13:20:59.000Z","message":"Refine allocators handling of non-default memory spaces."},"d7cb8911dbdea17d14f570f7f79100c2a6725f23":{"date":"2017-03-13T19:20:39.000Z","message":"Slightly tweak binary input in Python."},"d7f82fa21fca27c670eb885930e1468bd3dcd264":{"date":"2018-04-06T15:26:34.000Z","message":"Fix #522."},"d7fdccad16ca6c4eaaf538dc2fde2ef736dc43ec":{"date":"2017-08-15T09:53:49.000Z","message":"Memory block merging bug fixing and code documenting."},"d81cf6c948de030816610a3c20816e61c1723998":{"date":"2018-05-06T22:35:14.000Z","message":"Fix markup."},"d82e80ade2fcc13ce90726eae294b666d72f4ea0":{"date":"2018-04-06T17:37:59.000Z","message":"Be more diligent about removing type variables in monomorphiser."},"d83e18131da10e220d9457d347cd662aa553a836":{"date":"2016-11-19T17:54:52.000Z","message":"Another test."},"d84dc56e4640774ef5adc0c9dc0a97795b627dec":{"date":"2017-07-14T06:43:56.000Z","message":"Change ranges to produce empty arrays when second element is invalid"},"d860325dc4bf9fd19142d0efc210558b6c1c1d1c":{"date":"2017-05-14T23:12:27.000Z","message":"Simplify the allocation hoisting."},"d86f2436399e2a19069e9ace2ef2090127fc0e02":{"date":"2017-11-01T13:56:44.000Z","message":"Fix missing double -> float."},"d87b6ca3bf9eda9f97b23d59a63589f99685bf7e":{"date":"2016-09-05T10:51:30.000Z","message":"Refactor binding checking in type checker."},"d886801e5e61191bdcb9c0ef5e9fa927ea2faa1c":{"date":"2017-08-06T06:38:10.000Z","message":"No need for this token."},"d89a73825285b034383d6c3d9088948f15267ba4":{"date":"2018-03-24T21:56:10.000Z","message":"Move Repeat logic into general function."},"d8ca9d9945c0fb52cd63d79285408aa6dd84c67d":{"date":"2016-09-08T09:49:55.000Z","message":"Doc syntax fix."},"d8cb228d0b5c0494c944cda6af39a48db72ff7bb":{"date":"2018-03-15T10:17:47.000Z","message":"Simplify handling of in-place updates in fusion."},"d8f86c361068ba1eca913272d41e9701589e22bc":{"date":"2016-09-15T09:39:57.000Z","message":"Fix off-by-one bug in first-order transform for Write."},"d927443be0aec284788aa94c8d2f7046af1357af":{"date":"2018-01-14T17:59:01.000Z","message":"Fix #460."},"d92d06189c90f03d89266878823de48565583404":{"date":"2017-03-24T13:22:35.000Z","message":"Fixes to handling of complicated abstract types."},"d9539291438f7870ddc24acc8090655e1af58c1f":{"date":"2017-09-24T21:09:30.000Z","message":"Fix typos."},"d99036bf29a93b379a931b2abf5ddaf9dee085e6":{"date":"2017-05-04T15:59:15.000Z","message":"Style fixes."},"d9a283eaee7e548e452f304e9599a405a76bb615":{"date":"2017-11-29T20:33:07.000Z","message":"Fix safety checks for power operator."},"d9b774da4dcccad4e7d3868a46591cef7c65436c":{"date":"2017-05-02T20:27:55.000Z","message":"Basic type checking in generated Python code."},"d9bf2c68964877490165d2d98993e40e31cb3d06":{"date":"2017-07-19T21:06:51.000Z","message":"Memory block merging: Fix obscure reshape bug."},"d9c9f505212d90b01f00d23610fd1aaff5770e9e":{"date":"2017-09-29T15:13:57.000Z","message":"Maintain formatting when generating futhark-doc output."},"da128e4316586456b7eb694825ea98bd8acdd688":{"date":"2017-07-24T11:00:23.000Z","message":"Modularize the coalescing code."},"da17254243897345ed1ea9f1a87d8e34e1ea4be6":{"date":"2017-08-24T15:18:40.000Z","message":"Fix #390."},"da1c30f8b1ac1d2ba7b5744fa797ee87e342d00e":{"date":"2016-12-19T19:51:17.000Z","message":"New tuple projection syntax."},"da550cf5aec7243aaf1a10b184c7bfb2757fcb2d":{"date":"2017-10-07T17:18:00.000Z","message":"Remove old junk."},"da64e55a19a220e6d0202b6768857d73e04d9c48":{"date":"2017-02-11T08:33:51.000Z","message":"Another nested functor fix."},"da67a22ad5063a100067f4157e681c87d691c74a":{"date":"2017-07-31T12:42:15.000Z","message":"Optimise away the vast majority of size computations."},"daa3b7cec5ddbcc4bea969ea62493554a5f7e18f":{"date":"2016-09-12T09:55:47.000Z","message":"Comment fixes."},"db1a91450e9a0f96df4a3bee202094153c77a282":{"date":"2016-12-01T11:26:33.000Z","message":"Stream operators no longer require a literal lambda argument."},"db38513a612148e9eb195c518da5c294b44826d2":{"date":"2018-05-26T13:12:05.000Z","message":"Fix simplification of Combine."},"db565d268ebbe9177865b1043afc111e2c881884":{"date":"2017-09-16T19:52:31.000Z","message":"Fix #400."},"db8923111d5829aec92e7fa6887a1e9761cb585f":{"date":"2018-03-25T14:16:03.000Z","message":"Fix parens for function applications."},"db98bd22df2296da89621c09928c81ad1ff76a18":{"date":"2017-08-03T08:08:04.000Z","message":"Fully traverse kernels in memory block merging."},"db9ee8f568efe574ff85fc1a68643a47b229c0f9":{"date":"2018-01-07T09:02:11.000Z","message":"Avoid using runBinderEmptyEnv in binLambda."},"dbb2daa8366493c720b24beef53e47dacc2173a7":{"date":"2016-10-15T12:34:38.000Z","message":"Structure test fixes."},"dbebfec3bf64a3d74adf978d2f6a059739ac2472":{"date":"2017-04-17T16:52:58.000Z","message":"Simplify a type checker module a little bit."},"dc16dd7ed6564ac1d40acaff919beb3878cf3bdb":{"date":"2017-09-11T18:46:59.000Z","message":"Avoid infinite loop."},"dc1d67c7f798b7efb348359e093b3ce8b546243d":{"date":"2018-04-02T18:01:38.000Z","message":"futhark-benchmarks: bump"},"dc65bcff4662351bf853cfb5e825a9ed934b8552":{"date":"2016-08-23T15:45:55.000Z","message":"Consumption type checking fixes."},"dc80599ef1d6d99424dd20417e3f9cb3d07cc4cf":{"date":"2017-02-28T21:48:23.000Z","message":"YET Another attempt at fixing includes on Windows."},"dc96be741dff85dd649efa644d508f025aac3db6":{"date":"2016-10-08T19:26:45.000Z","message":"No need to export this."},"dcb03a15f15cc68db35f6ec63ef073e7cd98b6dc":{"date":"2016-10-16T07:33:40.000Z","message":"This is not exported anymore."},"dcc057f6323d090ad098fbc03cfe5d42644af86a":{"date":"2017-05-09T12:15:52.000Z","message":"Better name for intra-group parallel kernels."},"dcd493dee3eb7ad7f0ee99283f974c7b276deaf5":{"date":"2017-05-30T06:02:46.000Z","message":"Revert \"Tweak kernel babysitting some more to handle large-segment kernels.\""},"dcf363ba4ea13aa5de974837fd149c560522f99b":{"date":"2018-02-26T20:57:58.000Z","message":"Some more docstrings."},"dd0125bb4536c0f444b3b91b26cb0b429afbcbd3":{"date":"2017-11-11T16:26:27.000Z","message":"Remove some dead code."},"dd16ef21f901194a80cfa30ce16060244e55d7c3":{"date":"2017-10-01T18:10:34.000Z","message":"Consider a few more ops to be safe."},"dd2d6651fd9ae9de6fcfe408ed02d54e4976b07e":{"date":"2017-03-05T02:24:34.000Z","message":"segredomap: cleanup and less conservative preconditions"},"dd48c4cfba30521e087d8bd68dc2dbee23a4ed55":{"date":"2017-05-08T15:21:27.000Z","message":"minor"},"dda9c17dae81fd82c7a0c4e45baa4828b390f9df":{"date":"2017-06-23T20:29:22.000Z","message":"Change do-loops to be ordinary expressions."},"ddd42dc96965d7cb49430ba6b10acefead359037":{"date":"2017-06-21T09:55:29.000Z","message":"Ensure correct SOAC width in setInputs."},"ddf380e591c4ed4c3902d50a26421e0238f78b08":{"date":"2017-03-17T13:50:04.000Z","message":"Fix PyOpenCL name escaping."},"de54b4395835b2903ed8e3ac72880deb30e2e8be":{"date":"2017-11-01T14:57:24.000Z","message":"Unify two prettyprinting instances."},"de576689547ecfccc17482a5651a3af5662b3284":{"date":"2017-03-02T10:08:47.000Z","message":"Give L a Show instance."},"ded805c6d6eeb24f628b91d56e086acf4f640117":{"date":"2017-07-14T20:57:56.000Z","message":"Handle more memory block merging cases."},"df88814edcf51c266f8288767d1c515f1b6372a2":{"date":"2016-10-27T10:56:49.000Z","message":"Fix #248."},"dfc095d0cbb77cbdee5005bbfaea10257eea059b":{"date":"2017-04-10T07:58:17.000Z","message":"Entry point fixes."},"dfc09aceaf911a643daa9cbf0b49cbb663b8ec4c":{"date":"2017-06-16T09:37:04.000Z","message":"Fix description."},"e012f297bf79b3dd241f9b40f0c7971b1a2f490e":{"date":"2017-09-07T08:30:12.000Z","message":"Support hexadecimal float literals"},"e01e83dc7b8d8fea3ea7373c092466089034f3d0":{"date":"2018-01-06T00:32:10.000Z","message":"Slight fix to uniqueness inference of loops."},"e0209bc6264e9e5c52738db8047e7a6c470f1d54":{"date":"2018-04-09T12:56:27.000Z","message":"Ignoring module qualifiers when deciding how to prettyprint binop."},"e0ca175e4820fe1f549c49b6644ab3f58134447f":{"date":"2017-05-05T07:23:33.000Z","message":"Shortcut."},"e0d6206e133cc5138984e5f61e37d699b7bea139":{"date":"2018-01-05T22:32:40.000Z","message":"Crippple in-place lowering a little more."},"e0de474a5bc6089188c2a3d4aab97b7df725ec88":{"date":"2016-09-25T09:42:00.000Z","message":"Only interchange if there is a map inside."},"e0f61036c33655001eac966087101bb213b164b7":{"date":"2017-06-28T13:51:58.000Z","message":"Also get existential sizes for memblock register allocation."},"e0ffaedc386416c6f287c0440a7540f91f3ed5e8":{"date":"2018-01-28T11:30:28.000Z","message":"Destroy block comments."},"e19efeb78643ddd3cd306477d8882b2c41937576":{"date":"2018-03-11T21:55:03.000Z","message":"Test runs can now have arbitrary tags."},"e1bdbff5957c0ea43bd21a7b072c8614f885c549":{"date":"2017-04-22T16:56:53.000Z","message":"Remove unused record field."},"e22745b2cd8b051d145601702501dfc4fa6121c5":{"date":"2017-04-01T06:33:41.000Z","message":"Roman numerals."},"e2761a863c86c9066801caf80cebc8df2567183e":{"date":"2018-03-26T11:25:07.000Z","message":"Better error position when checking type of function arguments."},"e27907aeecb3213629a3732f251224890e28eccf":{"date":"2017-09-17T20:12:06.000Z","message":"I did not mean to export this."},"e28072728d02170573ccd518be0db3f9d871463b":{"date":"2016-10-17T13:48:30.000Z","message":"atan tests."},"e2cc1452b01d40bb1847d31281bf8823d289ba8b":{"date":"2017-04-30T10:13:58.000Z","message":"Fix #329."},"e2d9629bb58048ae5f4616a5e0911eb64cd55db9":{"date":"2018-04-10T09:35:04.000Z","message":"Improve record pattern handling."},"e2f77a5d194f04adb7f06055c9c30b9ee18405de":{"date":"2018-01-08T22:08:57.000Z","message":"No need to wrap throwError in type checker."},"e32324081474f8133618b3d99399a87d4af736cf":{"date":"2017-06-05T14:39:27.000Z","message":"Permit binary output from generated executables."},"e34b54821722619a61f49d2e423846ba60466e1f":{"date":"2018-02-21T22:00:19.000Z","message":"Perform incremental flattening on top-level streams as well."},"e3e6a46e3ea5993f303f95ce9f9974176fd34459":{"date":"2018-03-05T19:43:45.000Z","message":"Fix handling of static arrays in Python code generator."},"e3f5344ac74f80a7d74ee57cbff27597b86eb545":{"date":"2017-11-30T10:51:42.000Z","message":"Add some type annotations to parser."},"e3ffe975c502f29fc21780c11eefe0b4581a42e4":{"date":"2016-08-24T22:24:26.000Z","message":"Handle futhark-test -i better."},"e414bf47f94427a94c1578fb4c02e1948c96b10f":{"date":"2017-06-07T13:04:15.000Z","message":"Cut down on filtering of occurences."},"e427547670ffa5ee36036f9ab9e26f440f7cf397":{"date":"2016-10-13T09:44:56.000Z","message":"Fix handling of dead code in kernel extractor."},"e455df5dc913b82f65dda35274c37fa87e44ef99":{"date":"2018-01-19T19:59:37.000Z","message":"Hoist array literals."},"e465fba5c9112c626288c5945809e05dbe89b3ef":{"date":"2018-06-01T21:00:00.000Z","message":"Implement array index sections."},"e46d00d6018775b5ce20c6a17a9889f8ce42ed46":{"date":"2017-12-25T21:05:13.000Z","message":"Avoid some pointless scalexp simplifications."},"e4a8ca8b77a2c7f215dfe27afbb8488f8fbb8993":{"date":"2018-04-13T15:17:05.000Z","message":"Fix duplication when entry point is also called as a function."},"e4b54e3c116ba0907632576468e66b2700569b53":{"date":"2017-09-15T14:00:54.000Z","message":"Simplify away certain in-place updates."},"e51e7e497fb12f184286967727c2e148e7908634":{"date":"2017-05-22T12:20:08.000Z","message":"Add --timeout option to futhark-bench."},"e5b80da982a71bb87c61378f9700347e8de4cd13":{"date":"2017-10-03T13:36:54.000Z","message":"Safety check for tiling."},"e5c41ef6e0fd8897d72da7e6d2af9e920e5f5b3f":{"date":"2016-09-09T05:48:34.000Z","message":"More manpages."},"e5eb1cf8959c11ad27aaae06820a675a26a618ee":{"date":"2017-06-10T13:44:43.000Z","message":"Some cleanup of functor application."},"e631d339edad9e20228e0008dceee8486ee14582":{"date":"2017-03-25T12:48:31.000Z","message":"Remove polymorphic abs/sgn unops.  Use futlib/math instead."},"e632be845b134be342a91445d4516c8fce605e1e":{"date":"2017-11-22T08:43:06.000Z","message":"Fix #436."},"e63f71c62d6dd2413e1d18b7730af3b6681e10fa":{"date":"2018-03-29T14:01:28.000Z","message":"Fix Python entry point type information."},"e6406d573c58ac30eec0a263211ffb4f06437925":{"date":"2018-01-29T15:45:44.000Z","message":"Document and check for PyOpenCL version."},"e685f98fdc2904f1709180bdd47888e11c55c3c7":{"date":"2017-10-18T16:00:42.000Z","message":"Implement segmented scatter."},"e689844ab89fbee94be745dd066d451fa470deb7":{"date":"2017-09-25T13:43:08.000Z","message":"Fix addrOf and related."},"e6b1478a6ed6f35eea0fe78eacd5bdf410156d13":{"date":"2018-05-23T17:20:20.000Z","message":"futhark-doc: beginnings of an index."},"e6bc8d01c50d3f7826b4953fb6b1a3c8f7eacac4":{"date":"2018-01-26T20:44:38.000Z","message":"Fix #466."},"e747c02bd3020dc16db080cab8e18d01ca6da03b":{"date":"2018-01-18T13:31:57.000Z","message":"Pretty instance for Stms."},"e753a365cf1d8f5fe81ba8589cfc33148f82016e":{"date":"2017-12-19T14:21:59.000Z","message":"\"Handle\" sequential loops in intra-group parallelisation."},"e778350ce92f4471979a539698f5ae8fe91a5344":{"date":"2018-05-22T10:02:58.000Z","message":"Fix #553."},"e78bdfce0040e5af4c57b45905f79f1b650c9c5d":{"date":"2017-01-22T19:40:41.000Z","message":"segredomap: fix typo"},"e7b13f06ef91028eed446f539438fd3fb0f07854":{"date":"2016-10-20T18:34:42.000Z","message":"Better printing of aliasing annotations."},"e7b1c6e34e588bc3b6d842b49e38867f2c75cc44":{"date":"2016-09-05T14:36:45.000Z","message":"Better manpages."},"e7bfec7d2a7f0918bdf253307ad52eb6c287ed67":{"date":"2017-11-27T05:23:18.000Z","message":"Remember the new Traversals module."},"e7d9a1b52992f0cbd57323abceb339a86c22ddfc":{"date":"2017-02-27T22:27:30.000Z","message":"Add type ascription at the expression level."},"e7e2a917ff38ea56de277ff9e58ab625b3451f1c":{"date":"2017-12-25T19:05:53.000Z","message":"Redesign simplifier to speed it up a bit."},"e7e73d13697edc524e4cc50a994d5c39dbac954f":{"date":"2017-10-05T20:22:55.000Z","message":"Better type checking in generated Python entry points."},"e7e986cc3db19535b5d327239d18fcca80c9c95d":{"date":"2017-02-04T13:39:08.000Z","message":"segredomap: Add debug information to kernels"},"e83934d8e9c29a3a763c4fa36ea4dd01f8c0c1c4":{"date":"2017-03-04T22:23:59.000Z","message":"Revert \"Fix and test for very large tuple-like records.\""},"e8e7689cf3a05895b1802a261d11833c537ff418":{"date":"2018-01-19T19:36:38.000Z","message":"Print local work sizes when launching an OpenCL kernel."},"e947b1313184e22964f40f401b2c077e179dca53":{"date":"2017-12-18T12:21:11.000Z","message":"Move intra-group parallelism into its own module."},"e95a2784890a52ed1cadd159b4d30baaeafd30d1":{"date":"2016-09-22T07:56:04.000Z","message":"Do not mangle return type list in removeInvariantKernelResults."},"e9bb4ecb0954d71e94153e35f479e83319757c04":{"date":"2017-08-17T09:42:45.000Z","message":"Make memory last use analysis slightly less conservative again."},"ea6060e8ef4165920bbd0f104df8e17846ddcf9b":{"date":"2016-09-15T09:41:49.000Z","message":"Merge pull request #234 from HIPERFIT/ghc-8"},"ea7bd5be15633eecf748692c382a2ae3f9333fc8":{"date":"2017-04-18T14:38:17.000Z","message":"checkDecs now also handles abstract types."},"ea9490eff729942239ee76d28003b5126eda169a":{"date":"2016-12-09T14:54:33.000Z","message":"Document the KernelExp GroupReduce."},"eaec00b656fde8c77396f4538e7ba7fd30b7d48c":{"date":"2017-05-15T11:06:32.000Z","message":"Can now also use \"cpu\" and \"gpu\" pipelines in structure tests."},"eafadc241b87f128e0b364f5bb6a695d924fe2d1":{"date":"2017-12-16T15:45:32.000Z","message":"Allocation sizes are 64-bit integers."},"eb23f81acb7776d047dc63bd245f008d9f91b95f":{"date":"2017-11-23T19:56:45.000Z","message":"Some useful instances."},"eb632875bde814a43dd64731c01c36065e46dcb0":{"date":"2017-01-21T21:20:25.000Z","message":"Better error messages from futhark-test."},"eb7bb32b944e901fc936b57718da2e7ea24c5a7c":{"date":"2017-07-20T12:27:37.000Z","message":"Oops."},"ebbd56ba0496805a0921c7cf3ec7f82baf548a6f":{"date":"2017-02-04T00:56:09.000Z","message":"still buggy, for example the rule for if"},"ebc96e7e41b5ad81b73fe3d2bc912c13ef6703e8":{"date":"2017-09-09T19:14:06.000Z","message":"Expose the scanner and add Ord instance to tokens."},"ebcc5d4d60943b653184f7221552af48a10c4777":{"date":"2018-04-10T18:46:07.000Z","message":"Support GHC 8.4."},"ebf2a0e24bc1b053819ae7e930686526c21bc4f9":{"date":"2017-03-28T09:36:29.000Z","message":"Enable Rasmus's segmented reductions."},"ec3e10842ea6f72ea2d4c9120b44066da89c1ff3":{"date":"2016-10-22T16:07:30.000Z","message":"Workaround for bug in old versions of language-c-quote."},"ec532f948730a93ee8c7cff181f1aa38334f3efb":{"date":"2018-03-31T17:32:25.000Z","message":"Nicer type errors."},"ec83999ea365ffa25da8ecd210e16b4f5e92962b":{"date":"2018-05-27T11:13:37.000Z","message":"Add radix_sort_int."},"ed50026bc6e18d46b21371f36775756f2b1b1d0c":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: In two-phase segreduce, use empty kernelinput in second"},"ed822c035624dc4bf9a4775b65dcdfe3fb3728d3":{"date":"2018-03-24T08:08:06.000Z","message":"This code is dead now."},"edb434ba072aee9cce7fd2d4642f2ce6c920e2ed":{"date":"2017-10-13T14:40:33.000Z","message":"Remove unnecessary export."},"edb6ab659e918d175c56743bb3f40756d461833b":{"date":"2018-04-15T14:25:27.000Z","message":"More HIPERFIT->DIKU renames."},"ee2336103b29712bf4c9bd34559039220d86aa07":{"date":"2018-01-28T11:26:18.000Z","message":"Remove some unnecessary imports."},"ee9762a9b2914cca35a07b5e2b40cf1c222ee2e8":{"date":"2017-07-21T11:01:41.000Z","message":"Add another memory block merging interference test."},"eea2466e19af5f01769cd85d4d1f18306dcc3d3c":{"date":"2018-01-22T16:07:59.000Z","message":"futhark-bench: better errors."},"eea82c0426524fd1135eb57d7d86f1269e97dd1a":{"date":"2017-07-21T07:54:31.000Z","message":"I forgot this file."},"eecc796b3decc3c841c041301a1291ab7cebb2ea":{"date":"2017-08-09T07:26:31.000Z","message":"Handle memory block merging edge cases for If and aliasing."},"ef3a50caeca6bfe40e23db8d048cd0df2f161700":{"date":"2017-08-08T13:21:44.000Z","message":"Better describe what is going on in the memory reuse algorithm."},"efacb7754e9baf5f873d48d37b0be81e39be3c16":{"date":"2018-05-15T18:12:06.000Z","message":"Remove @-notation for rotate and concat."},"efc2b0e3e2a9d6fed192a862a34a169895aff50f":{"date":"2017-01-31T18:12:13.000Z","message":"minor"},"efdd02292912e786c711558f9f0024371e4085e2":{"date":"2017-02-25T17:44:14.000Z","message":"Add --pretty option to futhark."},"f0030d26aa3c8319409d6c5bab8b67402a656a1d":{"date":"2017-07-21T19:38:47.000Z","message":"Revert \"Generate non-copying code for coalesced concat arrays.\""},"f007c18c2e0bebdc6231af271c81ef21649643c1":{"date":"2017-02-11T13:12:44.000Z","message":"Simplify regularSegmentedScan, if cond then true else false => cond"},"f02a53ce3bdc4dd34bca7d5297e949b0d3bf840b":{"date":"2018-05-07T09:01:50.000Z","message":"Same background colour as on website."},"f04412af2373018f9ae32d48bfdfc1ff4516781b":{"date":"2016-11-20T13:40:41.000Z","message":"clFinish() before first run."},"f053efb679e2a1e5cb03183ca2f54579b435da6f":{"date":"2016-11-14T20:43:05.000Z","message":"Add Manifest case to interpreter."},"f0588f644d84d65d75da474e536c520feab5a462":{"date":"2016-11-14T15:41:54.000Z","message":"Add Manifest BasicOp for playing with array representations."},"f0592b06662a1189a1757603ba0b826896e48d04":{"date":"2018-03-15T11:39:53.000Z","message":"Be more diligent about tracking aliases during fusion."},"f08d047a42c34797d768c8f628e897d887156ef7":{"date":"2017-03-31T06:59:47.000Z","message":"Rename 'write' to 'scatter' and change argument order."},"f0935c976620918b6600aef970e15051453f0a95":{"date":"2017-08-08T10:27:31.000Z","message":"Fix memory reuse bug caused to nested first uses."},"f0c1b158a43027692e9168e2cd7ce295086f9bc8":{"date":"2016-08-25T17:56:39.000Z","message":"Centralise pipeline definitions."},"f0c42a5f9422dd45129287dee5de2dfd4898b272":{"date":"2017-06-03T21:59:01.000Z","message":"Use ByteStrings for futhark-test."},"f0d6c29fa4bb0bdb6c1b10f2a07de9c4a3e95a51":{"date":"2016-10-31T10:10:39.000Z","message":"Boolean constants are now lowercase."},"f0d8d460aaf08cf750d355194d411d9e0e5c9538":{"date":"2017-07-17T00:32:44.000Z","message":"Remove unnecessary branch"},"f0df41a2707c611db1d1b513e8d50d9cec2eef3b":{"date":"2016-08-29T09:14:02.000Z","message":"Remove all trailing whitespace."},"f15cc6c19af52fbbfe2a11b70e1eddcacfc33eec":{"date":"2018-02-02T13:44:01.000Z","message":"Be more lenient about whitespace when parsing test stanzas."},"f162d0c1572dd2a7d6544809c0a5af00aaab61f2":{"date":"2017-03-04T16:13:20.000Z","message":"Simplify parser with parameterized productions."},"f18676e8bdaa956c28dd78d34f80b2b56b1da957":{"date":"2018-03-25T12:15:11.000Z","message":"Avoid yet more shadowing."},"f18d33c10284f249c8f85346e100d9edde8143e6":{"date":"2016-12-04T08:59:52.000Z","message":"Whitespace is no longer permitted between an array and its indexes."},"f18f571dc7755e5da75776ae39da910b6a265c9a":{"date":"2016-12-26T08:51:03.000Z","message":"Remove unused errors."},"f1962126514ad2657dc6da08a2bc6cc4ddf9cfad":{"date":"2017-05-11T19:42:54.000Z","message":"Change meaning of activity flag to Combine."},"f2af09e1947afe2f669dfb450eb953ba982dd862":{"date":"2017-10-01T20:55:27.000Z","message":"Permit cross-compiler comparitons in compare-compiler-versions.sh."},"f2dee05ecc26a4c89681b474dee592849d549866":{"date":"2017-06-04T14:00:29.000Z","message":"Fixes to binary IO."},"f2ead7e91fada8d47be234b798349dfbf2dd8fb9":{"date":"2017-12-06T16:44:29.000Z","message":"Shrink amount of algebraic simplification done further."},"f2ee60657adb2abb9701423b8a554a9522165cfe":{"date":"2017-04-04T15:25:16.000Z","message":"updating"},"f358ae8e7eacf291443e9cdede26b60f48fb7d93":{"date":"2018-05-15T08:55:34.000Z","message":"Remove NoLocs from stack traces."},"f3a14397f57032b0d7979a91dac9f43fb755223c":{"date":"2017-03-05T07:51:34.000Z","message":"Fix and test for very large tuple-like records."},"f3a37a6f749262dee56b4dbdac3a974b2413ff95":{"date":"2018-02-12T10:21:59.000Z","message":"Better error message here."},"f3ebb6c4fe0b2360fcd98da426e84638c20842a0":{"date":"2018-01-17T21:31:16.000Z","message":"Add support for multiple writes to same array in Scatter."},"f4438fdf45d696ec86bb00f1c8321b131bb5fcd9":{"date":"2018-04-05T09:42:37.000Z","message":"Another simplification rule."},"f472b886ac4eef0a339d3dfd80fd1d1801aa3926":{"date":"2018-01-01T18:36:11.000Z","message":"More sensible type application parsing."},"f4c20278d412b7a846589d9cd4684a2bd548e277":{"date":"2018-01-24T17:52:13.000Z","message":"Better Python memory management."},"f4cf052251d18e53fe5e03f8f5489eada84c2cf8":{"date":"2017-04-14T13:30:41.000Z","message":"Change syntax for shape arguments."},"f4dc91859c976e88b13a2c8b5fbf345952a36949":{"date":"2018-05-02T11:56:28.000Z","message":"Handle opens better in futhark-doc."},"f5318fc3fae8f5831fb3ee46da97dccf164e05cd":{"date":"2016-09-03T06:59:14.000Z","message":"Avoid volatile pointers when unnecessary."},"f5601efc5f81b516d420196d485f0e5efbf0368d":{"date":"2017-07-23T17:09:47.000Z","message":"Add a loop interference memory block merging test."},"f568f0b3238d444f8485fcb7d3dc903466bbdeea":{"date":"2017-10-01T08:31:16.000Z","message":"Add Certificates to every Stm."},"f57255ffe53c588c2c49ef4814e68cd60650fa42":{"date":"2016-12-12T21:24:58.000Z","message":"Clean up some negative tests with parse errors in them."},"f5a0feb3c6c8e83651c3b31f8f86644b14bc021a":{"date":"2016-08-18T14:27:43.000Z","message":"Fix memory allocations for scan kernels."},"f5a7b4ede1f1174697af0a9fee035480fb8e67d8":{"date":"2017-05-02T12:38:44.000Z","message":"copy is now a library function in /futlib/array."},"f5b87a8b1a8a0d53ce5d3a2bea2f0fb9934f1664":{"date":"2017-10-19T13:43:03.000Z","message":"Another another fix to opaque values."},"f5d101d2bfb9cf76a9012eaab897d4032b8b310a":{"date":"2018-02-03T09:53:25.000Z","message":"Try to align results from futhark-bench."},"f5f121fe2e58ff5708c0b5b2fadae948d6d085a1":{"date":"2017-12-26T09:19:34.000Z","message":"Compilation modes are a dead concept."},"f5facc779b5227b0fc3307b212471d6bf12b0f95":{"date":"2018-01-12T10:20:52.000Z","message":"Refactor memory expansion in preparation for #459."},"f6049bf4b666847c4e9c46cccda7e4a72f39c492":{"date":"2017-07-17T20:42:29.000Z","message":"We do not support LTS 1.15 anymore."},"f6083499a39c5327670722978f73c8cea498837a":{"date":"2016-10-04T05:00:15.000Z","message":"Cleaner names in first-order-transform of Stream."},"f61a48a5259ef6c253c88c0ede651e4763b9a402":{"date":"2018-01-21T12:25:23.000Z","message":"Stop warning about clCreateCommandQueue()."},"f6267a57ad1aacc4248a9806c91928520b1a56a4":{"date":"2016-10-08T19:23:06.000Z","message":"Ban shape declarations in let bindings."},"f6276b9a9a7665c99b6e7fa960129d2eab25ab9e":{"date":"2017-05-02T16:11:48.000Z","message":"scatter and shape are no longer keywords."},"f63d0a7f25a14a85909c2621f656c80ce8ee649a":{"date":"2016-08-23T10:00:08.000Z","message":"Old GHC fixes."},"f689a0ea2ec1f6ae044ca79f89318c9314005515":{"date":"2017-03-04T09:23:42.000Z","message":"Do not print an empty line when no warnings are found."},"f6be3b710951b1ac914ed43a561cbcdd0be4396b":{"date":"2017-10-19T14:25:18.000Z","message":"Final opaque value fix!"},"f6d013be67a9886e7d1b5dc47c622c9d89ef329b":{"date":"2018-04-09T12:32:38.000Z","message":"Fix typo in comment."},"f74fcbc9c6da85c2619a3399b2a8b5ff8620f5b8":{"date":"2017-12-05T17:18:37.000Z","message":"Actually set device before querying it..."},"f7a2d0df5c2aec0917be86236a4f95ef3912656b":{"date":"2016-10-31T10:24:19.000Z","message":"Add missing space to error message."},"f7cca5fd7e8a8212b0b80a75aee602b1355406d9":{"date":"2016-09-02T12:49:54.000Z","message":"Restore kernel for-loop generation."},"f8ca04a4baf0a9fbf698ddf12aaa86f86ad3833b":{"date":"2017-07-26T15:34:17.000Z","message":"Fix prettyprinter for range information."},"f8d4c10f947caf145f6d6cdd4879b3bcbdf9cd72":{"date":"2017-12-21T07:16:41.000Z","message":"Better error message when ranges written with two dots."},"f8e0a2601b7114a7f5bf8a4d771bfcc54b586999":{"date":"2018-05-07T17:17:06.000Z","message":"futhark-benchmarks: bump"},"f8e13c178a3b42c6fc6abafb253b8e73841f2dec":{"date":"2017-05-04T10:43:21.000Z","message":"Further simplification of how currying is internalised."},"f90179b29d55aaf85efad6189e2586de6911dbd1":{"date":"2018-05-07T10:57:22.000Z","message":"Fix error message."},"f92b5c45efe4b2e154f6adb425a6cee6390ce39b":{"date":"2017-09-29T14:41:29.000Z","message":"Avoid duplicate listings in futhark-doc."},"f92cb4954e8aa31087237fd1cd03e2a7ad4e2f5f":{"date":"2018-03-14T07:36:10.000Z","message":"Remove some unneeded exports."},"f955b7a66aea8984c207b0d0b9c726d9a4d7f7f7":{"date":"2017-12-07T16:12:26.000Z","message":"Hide imported entry points."},"f96c70265bf2b070ac8d7e748ef742c955a4e055":{"date":"2016-08-25T13:28:51.000Z","message":"Permit leading plus in decimal exponents."},"f97226c5f62c5b7b7e713f165a6ec928d4ce578f":{"date":"2017-03-03T14:05:51.000Z","message":"Segment a few more cases."},"f984ff4ad47860f53b953cff76803c8f988ad42a":{"date":"2016-09-28T11:04:58.000Z","message":"Fix structure expectations for now."},"f9b855b2e61d12d662f735540fceb47e69743e81":{"date":"2017-10-13T16:03:03.000Z","message":"Fix Python value reader for binary arrays."},"f9dbe8e00d4722bbe2ef244a2cf2740602fa9f6a":{"date":"2017-07-13T06:37:58.000Z","message":"Trailing decimal points are no longer permitted for decimal literals."},"f9dcb314196ac0bcdedf602bc39e56d2837dcd44":{"date":"2017-03-10T12:43:42.000Z","message":"Fix stupid order-of-magnitude lexer bug."},"f9e3ab30062a542ac5f9b3440464453368b7e594":{"date":"2017-12-26T16:59:39.000Z","message":"Remove two more superfluous imports."},"fa3998e93dbdcc3da1d319284b0a2c6157204b51":{"date":"2016-08-23T10:00:08.000Z","message":"Fix prettyprinting of empty arrays in C code generator."},"fa3fee9bd630d4a0af4e10fb30403adc4a3aeaed":{"date":"2017-05-09T14:16:27.000Z","message":"Interchange loops in more general cases."},"fa70f82cd27088ab8a854ceefc030a9ef3c53908":{"date":"2017-03-03T15:53:20.000Z","message":"segredomap: only do the tricky case with versionedCode"},"fa7f88db880837d4fa2acf5d206be99070161501":{"date":"2018-01-20T20:13:18.000Z","message":"Pull the brake on aggressive inlining."},"fb0cddee4dbb749637edfa3249a3c172d78fd352":{"date":"2017-10-17T17:23:31.000Z","message":"Ensure initial loop values have correct size."},"fb0cf440cb3068d75085f7ece6e74182561ff34f":{"date":"2017-05-08T21:22:28.000Z","message":"fixing bugs"},"fb1a7a2943a1b682fce350559bd90359d4d47a21":{"date":"2017-02-21T09:18:18.000Z","message":"Fix spurious unused-variable warnings."},"fb67ba6fb32bded584f12967d2765afd0d24d39c":{"date":"2016-10-18T07:02:16.000Z","message":"Ensure that split dimensions are Int32s."},"fb73888bd0ad06c3f0876728ffeaa5b4d01b8f23":{"date":"2017-11-21T21:49:48.000Z","message":"Remove some dead code."},"fb980e4f4cd2212f47fc88ea56f4c2088b0511f8":{"date":"2018-04-09T15:05:02.000Z","message":"Oops; unbreak expAliases."},"fbb40da3df930b5cd547014d807d113f060fb460":{"date":"2017-11-09T12:28:46.000Z","message":"Check assertions in indexOp for SOACs."},"fbb709e76feb49edd0c4d2c780668b5ebffe2583":{"date":"2017-02-16T23:16:30.000Z","message":"segredomap: report better information in kernel debug hints"},"fbdc88232692cb006cd7d5d6735dbd05c18ec0c9":{"date":"2016-10-20T20:07:27.000Z","message":"Handle \"negative\" allocations - these should be considered zero."},"fc5562c0bda8df2414636fe3efc25a5c1def6fed":{"date":"2017-07-14T11:36:39.000Z","message":"Fix absolute .fut file references on compiler command line."},"fc5820aca8096cc77b73042e907103fd81ddaedc":{"date":"2017-05-16T07:05:22.000Z","message":"Allow underscores in numeric literals"},"fc9a64fd9e317fcf78e5be84e3321c841cd41c8f":{"date":"2017-10-20T20:35:34.000Z","message":"Remove dead function."},"fc9a9ae240327d1b1571865c27bdd580e9648fef":{"date":"2017-04-14T18:42:30.000Z","message":"Refactor to reduce use of TypeExp."},"fd37c4f84c11523421221e344c894783a1a3d457":{"date":"2017-06-08T11:20:29.000Z","message":"Internalise local declarations correctly."},"fd60017280e6f4ed772c573294e95932ea1c9a0b":{"date":"2018-05-14T07:27:05.000Z","message":"futhark-doc: support multiple headlines."},"fd6ace12572f0094f4e4449d3168da4b40d7254b":{"date":"2017-06-10T05:59:49.000Z","message":"Fixes to type conversion simplification."},"fd9f20a725d85b7b342a2164d9ff830409045060":{"date":"2017-05-10T20:17:40.000Z","message":"Remove simplification rule that could cause infinite loops."},"fde2ae5d66cd3d2faff000dd71849605ea166977":{"date":"2017-03-13T11:52:06.000Z","message":"Another local function bugfix."},"fe66a166afbbafc896043a91e159c581466eefd0":{"date":"2016-10-20T19:03:05.000Z","message":"Fix #246."},"fe90ff96183c8ba3ca7c9aff985f754f6fc49128":{"date":"2017-03-01T23:48:10.000Z","message":"segredomap: Fix naming of variable"},"fe981f9b57a37c2cc1e279a26cf2a9c4cc2e955a":{"date":"2017-06-05T16:51:34.000Z","message":"Always pass -b when running from futhark-bench."},"feaabcb04f998734e5edf4cf48bf51c24fd4fca4":{"date":"2016-08-26T05:56:14.000Z","message":"Handle infinity properly in Python code generator."},"fed68dc905a0f14b8347658c82228e92051217d1":{"date":"2016-12-12T15:13:09.000Z","message":"Make futhark-bench ignore programs with no data sets."},"fedd591145f0d3da4bc57bc24cb482d0527daf76":{"date":"2017-03-02T12:00:31.000Z","message":"Respect the \"compiled\" declaration for test cases for futhark-test."},"fefecd928d4cdc5e529b719a299b089973357d9b":{"date":"2017-03-21T07:52:39.000Z","message":"Be more conservative about statically computable sizes of local memory."},"ff542d34a6907a5f06a36daf2b8f4600df2c25a1":{"date":"2018-03-29T11:42:59.000Z","message":"Fix issue where defunctionaliser would mangle return type."},"ff78e2045e4fbc3f8bf049e6ceaa72300583c64c":{"date":"2017-02-23T10:30:48.000Z","message":"Initial prototype of higher-order parametric modules."},"ffdf3a5bb317d14259862a91d48a7be594c0cbe3":{"date":"2016-10-10T11:27:29.000Z","message":"More simplification tweaking."},"02347eca3dd27aad5a4da3c68ad57555a77157c5":{"date":"2017-01-11T13:07:12.000Z","message":"Fix for multiple functor instantiations."},"0536a7ac135ebd88b07403d17d8698749105e395":{"date":"2017-01-07T11:49:20.000Z","message":"Fix #268."},"0a8dbfe07d5ed1ce5d25c80064276b90a6f2c210":{"date":"2017-02-12T08:38:33.000Z","message":"More functor bugfixes."},"0feddb6d149926573997bf03497876dfb664f9ff":{"date":"2017-01-19T21:39:54.000Z","message":"Remove SplitArray."},"1021e3bb32318018ea01d1aa027a17c79061e78e":{"date":"2017-01-17T08:12:47.000Z","message":"Add 'open' declarations."},"10b7e53a2d651ddd13f8cae4af1c917664a08d8f":{"date":"2017-01-18T18:14:52.000Z","message":"segredomap: use SplitSpace and slicing instead of SplitArray"},"1799a48510b1ba64b3b996a459337f9a286f4a63":{"date":"2018-01-20T15:43:00.000Z","message":"More aggressive array index inlining."},"18cf1dd486b386ef31b6d6c3a0167976638965b1":{"date":"2017-10-11T14:39:53.000Z","message":"Simplify parameter internalisation."},"1a19b10555380457b17d01921f4d99531c9a5703":{"date":"2017-01-05T21:03:55.000Z","message":"Another GHC-old fix."},"1e2cf2b1bb00ca7ec4191155301a56c3da0658d8":{"date":"2017-01-04T16:13:12.000Z","message":"GHC-old fix."},"1f529574e56332cfee794f38336292806b162ef4":{"date":"2017-01-07T19:51:19.000Z","message":"Fixed another signature ascription bug."},"253a6ed183d4da205ef667d0c3aa1207dcc3ed10":{"date":"2017-01-10T07:59:48.000Z","message":"Support striding when slicing."},"27628d12598ffcc6fb2785af91aab19fba2a80b1":{"date":"2017-02-16T19:13:57.000Z","message":"Important simplification rule for LocVolCalib."},"2924ea9b056540836b1d4c1520e440248c83dabd":{"date":"2017-01-07T10:57:02.000Z","message":"Remove unused parser export."},"2b9e8e9d8a63a8012e51655d6f46a65d294efffd":{"date":"2017-01-18T18:14:52.000Z","message":"segredomap: prepare for multiple groups per segment"},"2c1f71a37995786a5260cea50f32908dcafa4bb4":{"date":"2017-01-20T12:51:24.000Z","message":"Scope fixes in unstream pass."},"325ac69a115982e1ce6341e4c7119e1901e58c66":{"date":"2017-05-23T10:02:35.000Z","message":"Remove unused variable."},"341b43d5347922d1bf1b2602c298c705af6d6dd2":{"date":"2017-01-15T21:17:16.000Z","message":"Remove redundant constraints."},"346b4b08a55a6caa3fe419ace78c933f44483179":{"date":"2017-01-02T20:24:40.000Z","message":"Beginnings of proper signature support."},"38f0a6260cd48ee6340c9f6023c934b5c78068b2":{"date":"2018-05-12T06:19:45.000Z","message":"Ensure we do not have duplicate names after inlining."},"3ac410edbbc06efd88a802246f82edd695f33aba":{"date":"2017-01-11T18:31:51.000Z","message":"Attempt at fixing #272."},"43cd1aceafcc4f1b802c456535eccd1e65822b29":{"date":"2017-01-30T15:20:59.000Z","message":"Better search path semantics."},"4afbee32717c41ec426edaff7bb4d6d3e85fb493":{"date":"2017-01-17T10:14:12.000Z","message":"Remove abbreviated syntax for module definitions."},"4e711836632d136ce10a014eea6b8747ce8a64fc":{"date":"2017-01-19T22:02:37.000Z","message":"Only copy when necessary."},"4ec006a6aea077feea9e5db10f2bd887662525a8":{"date":"2017-01-14T17:44:13.000Z","message":"Significant simplification of module types in type checker."},"52cd329f0ee58899a60bd37a2a51a44e3c4a263c":{"date":"2017-01-16T14:17:33.000Z","message":"Slight simplification to handling of builtin functions."},"55e2f4f143c69bd160bf7b48f40aa3e91cd25ea1":{"date":"2017-06-15T19:36:51.000Z","message":"Support named parameters in value specs"},"59fb36049fc1de0db5557db2ceaace367c2f9da1":{"date":"2018-04-01T21:05:42.000Z","message":"Reorganise futlib a bit more."},"5a7ec6c8b71f2367323b2f21db35b25ef4efce71":{"date":"2017-04-26T14:47:46.000Z","message":"Create new names for abstract types."},"5fc62487c655b4a0b9c91dfcfe35f7fcbbd60da3":{"date":"2017-05-20T21:09:07.000Z","message":"Speed things up a bit by using strict RWS monad."},"64c402e8eff0d5a195a9d7a97f151f26cfb66c6a":{"date":"2017-01-17T05:31:02.000Z","message":"Add support for user-defined operators."},"66fd0ab9fe466f4437a428cac7894b442e0902df":{"date":"2017-01-16T21:11:48.000Z","message":"Add magical Intrinsics module for intrinsics."},"675b4effcf104f88e62ff95b0e91ba0489732067":{"date":"2017-01-15T21:48:20.000Z","message":"Remove the int type."},"67f17c36c3a06624de1167d51234368f4adb3453":{"date":"2017-01-14T10:18:28.000Z","message":"Simplify internalisation of modules."},"6bc4c95ecfb640a9038ae6205964644df6c3e364":{"date":"2016-12-30T12:04:54.000Z","message":"Print an annotation for FlatGroupSpaces."},"6d979d54c3d437a96195a7d612d77f4b55117124":{"date":"2017-01-06T12:58:24.000Z","message":"A few missing cases for type checking."},"70cc4764e7dcf468c1057a0ffc4af08889e3cd2b":{"date":"2018-05-07T12:06:47.000Z","message":"Fix up the sobol module markup."},"712d54916f9da0c4d9a15618af78e9955bc7d014":{"date":"2017-01-26T14:49:39.000Z","message":"New hlint fixes."},"71899e66f771e28e3fd13242a4b6d418a7a2b93e":{"date":"2017-01-03T14:32:55.000Z","message":"Signature ascription support."},"724e498c022a65d0b3b01f9e2b0a5ae53ab5367c":{"date":"2017-01-21T08:44:41.000Z","message":"Oops, I broke input reading."},"73fee235c68bdc684e1affca00c2cc064ae1a3ac":{"date":"2017-01-06T12:58:33.000Z","message":"Fix comment."},"74b1843d981c832df4052bc84acfce028ed52f03":{"date":"2017-01-07T16:27:17.000Z","message":"Fix #269."},"7beba845d19e1881dd67e385a4f037d6175e10c2":{"date":"2017-01-14T10:08:58.000Z","message":"Permit module ascription in module expressions."},"7c8b1dada646e8ad67dad9a43c0238bda44ff247":{"date":"2017-01-01T12:50:49.000Z","message":"Simplify type parameters for TypeBase."},"83cbc4ca3bed8aa4e8232fa1cc055f6744aba297":{"date":"2017-01-06T12:44:15.000Z","message":"Move some parser junk around."},"847aa8919a9d9757296ad8aacdfb0c90057e1f74":{"date":"2018-05-12T16:00:09.000Z","message":"futhark-doc: fix printing of value descriptions."},"84d3ea6907f195b381faf213d25356213569f5d8":{"date":"2018-05-12T06:05:47.000Z","message":"The contents of an open are not in a table."},"87dd15ac04636077e0ffe6525c9fd60f0cd2419e":{"date":"2017-01-09T15:08:42.000Z","message":"Add striding to DimSlice."},"884d20c1db8fac5f137b409807b22d0556784c91":{"date":"2017-01-14T17:24:46.000Z","message":"More elegant handling of abstract types."},"8db35757e3f553deb0f02f26671d1e790d6a6abb":{"date":"2017-01-07T09:59:56.000Z","message":"Try to avoid reporting internal type names."},"8dd4079d3f05e2665afd183519a8b379937463e7":{"date":"2017-01-06T22:22:41.000Z","message":"Fix #263."},"8ee9db996db3778af9b7fadd00c787229a5563cd":{"date":"2017-05-01T08:09:25.000Z","message":"Fix indentation."},"905ce7538ec15cfd1fdd32d8d6d8560988435b6f":{"date":"2017-10-12T18:00:16.000Z","message":"Merge pull request #414 from diku-dk/flexible-shape-annots"},"90c435c34e39681d30e9d353dcd3f3082b4f2798":{"date":"2017-08-04T12:20:14.000Z","message":"Also use a conservative index analysis in memory interference."},"93e004f77c87c770f819766f20156286328a483b":{"date":"2017-06-23T15:15:25.000Z","message":"Handle bad for-loop index names."},"9400e044ed8efe4eebf6b6ea39f3bd5a57969ce3":{"date":"2017-01-18T17:32:05.000Z","message":"More iota simplification."},"992096a251100b6e360a95cbeebd2dd65f011c89":{"date":"2017-01-18T18:14:52.000Z","message":"segredomap: can use multiple groups per segment"},"99f494620549cd15624784e9e3ddb3f77be1370c":{"date":"2017-01-07T16:34:44.000Z","message":"Reorganise test program directory."},"9ae16829584ead170525f64394d84a44d152c40a":{"date":"2017-01-05T20:02:25.000Z","message":"Implement functors in the module system."},"9c810debac828a5fdf05a38d1fb9cb7f40efa378":{"date":"2017-01-06T14:09:07.000Z","message":"Introduction of the Futhark standard library."},"9de4256b2ef33a13ed080791f59493a82e1037ae":{"date":"2017-01-10T13:43:50.000Z","message":"Fix #271."},"9faa2960cbb0db2d0f1e31c568b973b1fc47f99f":{"date":"2017-01-17T08:53:26.000Z","message":"Use sweet new operator support in futlib."},"a319459d6aedbad16e689910b1a8cd8bf8cb7f44":{"date":"2018-05-10T06:58:06.000Z","message":"Revert \"Switch to proper Stackage snapshot.\""},"a8a6432e3e4c1195bce1fd0c5f571e5a564f1a33":{"date":"2017-01-21T09:49:15.000Z","message":"Fix handling of very large numbers."},"aae185062c394727cd9044a11fb5de8c94089455":{"date":"2017-01-03T17:55:36.000Z","message":"Implement Martin's suggested module notation."},"abf8db28ad6fa333f03645613b35bcf0ac326194":{"date":"2017-01-08T18:11:36.000Z","message":"Make striding explicit when splitting arrays."},"ad140cadfdce0ed7174a9014e8d38c3a09dc0b52":{"date":"2017-10-04T09:38:48.000Z","message":"Handle recursive functions in C code generator (ugh)."},"ad4af78361fb3df9ba66166e01c177974afb8ba2":{"date":"2017-01-01T22:47:36.000Z","message":"Fix nonsensical comment."},"b3f54a951dc7ffb2ed43359f02afd4b1cffbedac":{"date":"2017-01-20T12:12:21.000Z","message":"Fix #285."},"b6b54f9fa4e1276a32b515ecc129ffb9ecae22cb":{"date":"2018-01-20T15:29:47.000Z","message":"Add missing context."},"b8138266082367ab97c337d7bc58bc477f8b8a4a":{"date":"2017-02-07T19:58:32.000Z","message":"Another Rosetta code example."},"bafe3cc70fdf632e01e06c94ef12ec2a46b19ba3":{"date":"2017-01-17T13:30:39.000Z","message":"Support unsafe for slices."},"bc959197130bc9ecadde7e86706e812639a90ab1":{"date":"2017-01-17T14:29:25.000Z","message":"Slicing bounds checking fixes."},"bdb9e0fd83d1e81d6acf07657f0d0a5f2a7e48bc":{"date":"2017-01-17T17:09:26.000Z","message":"@RasmusWL, set this to True to get the simplification."},"c09acac6d7b307dbbcefab4eb8d529a4bca090e1":{"date":"2017-06-24T07:04:02.000Z","message":"Also run examples on Travis."},"c366ef66b875d25b4b50ccc7b854405d8172a45e":{"date":"2017-01-15T19:43:51.000Z","message":"Prefix operators and types are no longer reserved words."},"c528887a77a7d3ac96e11d7b9bdd51e312f1b7f6":{"date":"2017-01-21T20:51:09.000Z","message":"Some futhark-test cleanups."},"c5ccd2f6d59766fac42ba4a4100851e6a5f8bedf":{"date":"2017-01-19T02:22:13.000Z","message":"segredomap: handle loop invariant inputs"},"c720730854ce281702e589600d59f0fb92e1fcab":{"date":"2018-01-20T19:28:10.000Z","message":"Fix (2**) simplification rule."},"c9408917e9f7ee56889dde055ce8d58d3222b4bf":{"date":"2016-12-13T12:38:50.000Z","message":"streamRed now requires no initial accumulator."},"cad058d23f07ce552717448dcb741a810118de79":{"date":"2017-03-10T11:50:33.000Z","message":"Permit floating-point literals with just a trailing dot."},"cb461c2a2126594cdae59ff793f73bad2b355747":{"date":"2017-01-16T20:48:28.000Z","message":"Change representation of binary operators to be like functions."},"cba4e82c763563e74906a18e15a8c3df90e6b2c4":{"date":"2017-01-06T08:59:21.000Z","message":"A functor type ascription is now in scope of its functor parameter."},"ce6f746e7bb68c9816b8063299056e39ef67069a":{"date":"2017-01-17T16:06:42.000Z","message":"Add SplitSpace simplification for @RasmusWL."},"cf2a9a59d114788f8b70cf46cf722c135b7b9f62":{"date":"2017-01-08T10:23:01.000Z","message":"Fixes to inclusion order."},"cf6306a92d17fb3e77866c12c8c223fb842df5dc":{"date":"2017-01-13T20:53:57.000Z","message":"Change lambda syntax to the one used by Haskell."},"d461712c37372db74e3131ae735ffbade0b55751":{"date":"2017-01-07T12:34:34.000Z","message":"Clean up the checkValDecs mess slightly."},"d52cd9509008f1a234631e520d67d790dbe33a71":{"date":"2017-01-05T20:40:41.000Z","message":"Fix #262."},"d55240de9516d99381bfe0a236603c5bcdd12619":{"date":"2017-01-06T20:24:00.000Z","message":"Implemented limited type inference."},"da31aa49b2adbf90019d3b412f6cc39cc45b7bc7":{"date":"2017-01-21T14:44:26.000Z","message":"Support multiple entry points for generated executables."},"e258a6784b167e9510decd845c2b64585e781d24":{"date":"2017-01-18T18:14:52.000Z","message":"segredomap: small cleanup"},"e4b69d16061767310b4c86c0cfb532dabe0e7af3":{"date":"2017-12-31T09:36:11.000Z","message":"Better error message for double-consume."},"e6d2ae00727e039f9e37febc9ebcd9fd3ec839a4":{"date":"2017-01-01T13:18:31.000Z","message":"Simplify type parameters a little further."},"e7a66a64429f5231ca7a9d86e48c9262f1cd9fe4":{"date":"2017-01-07T15:46:56.000Z","message":"Add beginnings of linear algebra library."},"e91de0e214bdf2bd5e52ca3409ce529be6ba3485":{"date":"2017-01-07T10:54:33.000Z","message":"Rename UserType to TypeExp."},"ed5d52c3c3dc3a2423f8cc38f262de403d25eb71":{"date":"2018-01-20T17:04:26.000Z","message":"Simplify exponents of base 2 to bit shifts."},"ee26593f2fd73421ab2b5717e250d1f1668693a9":{"date":"2017-01-07T09:35:43.000Z","message":"For SplitArray, stride instead of reshape hack."},"f29dccbfa6d94e4afd5bd5aee9cceb9941354664":{"date":"2017-01-20T15:44:00.000Z","message":"Make futhark-bench less aggressive about terminating."},"f323047e90061d501566dec66c11a31b18d9fe6c":{"date":"2017-01-01T22:34:39.000Z","message":"Add missing case."},"f4b215f948e0a1d9386dd9d26b0514b1c191b691":{"date":"2017-01-04T15:46:50.000Z","message":"Move to a type checker environment closer to @melsman's formalism."},"f4c9a2f241c344c6951d518a1a53b9f9999945b9":{"date":"2017-01-06T14:49:31.000Z","message":"More type variable fixes."},"f8d6fdfe46c71d444b88ac436eededc5c1a056eb":{"date":"2017-01-01T22:34:22.000Z","message":"Binding, not Stm..."},"fafe2e02c81766213e73e5d802e106f9c7d36c30":{"date":"2017-04-26T14:45:58.000Z","message":"A symbol may contain dots in the lexer, too."},"fb014509e99d7f5ea0bed3ae0848a2b5f740a69f":{"date":"2017-10-05T21:27:36.000Z","message":"Add a simpler memory block merging merge parameter-concat showcase test."},"fb392caca33704d47e000c1450ac5678d3c7dedf":{"date":"2017-01-03T21:50:30.000Z","message":"Oops, fix syntax error."},"01e8f16bba547f926268205c40292a5ee5fdb10c":{"date":"2016-09-04T21:04:13.000Z","message":"Doc fixes"},"1959e19973b2503316620edb16e3c92c52f3925e":{"date":"2016-09-04T12:13:32.000Z","message":"Python 3 compatibility."},"1988a4f21fba83fd64d0142355a2af5c34a030ce":{"date":"2017-01-03T18:01:05.000Z","message":"Fix mangled comment."},"24c64037210c67d267e86f8ed25c6328b65e4450":{"date":"2016-09-04T12:18:31.000Z","message":"Further Python 3 compatibility."},"2ec8885299c36d9875ba8442663476621c2e4ecc":{"date":"2016-10-08T10:11:07.000Z","message":"Test for bad shape declaration."},"48d1002eabf9ed5d17cf34f74f86c535620b504f":{"date":"2017-06-02T19:59:36.000Z","message":"Implement #339."},"493aa8bbe9d07af174a49bad7fa772d1f178dae4":{"date":"2016-09-03T13:01:43.000Z","message":"Prettier matmultfun."},"6113557f7a5489f255a62d97cc87a2404fa48810":{"date":"2016-09-04T21:06:21.000Z","message":"Clarify anonymous functions."},"752da97de0d93086db2ce0b089d4b56af0c7eb17":{"date":"2016-09-07T12:34:21.000Z","message":"Fix shape declarations in curried functions."},"7ae2a4f5d6eaf46090bf54f60a40317d5c5fa4ee":{"date":"2016-09-03T14:25:41.000Z","message":"Installation instructions link."},"83c1378185581722d6ae8749d2a8f15db5c9a208":{"date":"2017-04-05T14:40:35.000Z","message":"Change shape declaration syntax to require '#' when binding."},"87ad9d3635602035ea2ab0f623dd676de91615c7":{"date":"2016-09-04T11:07:16.000Z","message":"Remove unused code."},"a9f1eda89e32f4dc324cfe5562a59af94492b77e":{"date":"2017-01-03T21:29:52.000Z","message":"Implement module and signature expressions in full."},"de15912608c92afc2f93b5681ac74d5edf8738fc":{"date":"2016-09-04T20:37:53.000Z","message":"Merge pull request #231 from HIPERFIT/clarified-write"},"e77e6dd060ed0234dec5ad80188a4e35d1221199":{"date":"2016-12-20T15:37:06.000Z","message":"Catch another pattern match error in type checker."},"368023fdfa508b62010ffcf495d1056708c4b160":{"date":"2016-10-22T14:13:13.000Z","message":"Summarise memory stats at the end."},"6f37d14ba3083008f7548dccb8010cb9f59ed775":{"date":"2016-12-15T19:43:46.000Z","message":"Check for errors in rebase."},"c8c43c71978795abc73019e53803011a11ace6df":{"date":"2016-11-12T20:25:22.000Z","message":"Add missing dependency."},"d7579d2c8fc08f1b5a92aa9c4a9037281462a453":{"date":"2016-09-28T09:41:02.000Z","message":"Disable versioned compilation for now."}}